{
    "cfn": {
        "prefix": "cfn",
        "body": "AWSTemplateFormatVersion: 2010-09-09\r\n\r\nDescription: #String\r\n\r\nMetadata:\r\n\t#template metadata\r\n\r\nParameters:\r\n\t#set of parameters\r\n\r\nMappings:\r\n\t#set of mappings\r\n\r\nConditions:\r\n\t#set of conditions\r\n\r\nTransform:\r\n\t#set of transforms\r\n\r\nResources:\r\n\t#set of resources\r\n\r\nOutputs:\r\n\t#set of outputs\r\n",
        "description": "Full template."
    },
    "cfn-lite": {
        "prefix": "cfn-lite",
        "body": "AWSTemplateFormatVersion: 2010-09-09\r\n\r\nDescription: #String\r\n\r\nParameters:\r\n\t#set of parameters\r\n\r\nResources:\r\n\t#set of resources\r\n\r\nOutputs:\r\n\t#set of outputs\r\n",
        "description": "Full template."
    },
    "metadata": {
        "prefix": "metadata",
        "body": "",
        "description": ""
    },
    "parameters": {
        "prefix": "parameters",
        "body": "${1:LogicalID}:\r\n\tType: String\r\n\tDefault: t2.micro\r\n\tAllowedValues:\r\n\t\t- t2.micro\r\n\t\t- m1.small\r\n\t\t- m1.large\r\n\tDescription: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.\r\n",
        "description": ""
    },
    "mappings": {
        "prefix": "mappings",
        "body": "${1:LogicalID}:\r\n\tKey01:\r\n\t\tName: Value01\r\n\tKey02:\r\n\t\tName: Value02\r\n\tKey03:\r\n\t\tName: Value03\r\n",
        "description": ""
    },
    "conditions": {
        "prefix": "conditions",
        "body": "${1:LogicalID}:\r\n\tIntrinsic function\r\n",
        "description": ""
    },
    "transforms": {
        "prefix": "transforms",
        "body": "",
        "description": ""
    },
    "outputs": {
        "prefix": "outputs",
        "body": "${1:LogicalID}:\r\n\tDescription: Information about the value\r\n\tValue: Value to return\r\n\tExport:\r\n\t\tName: Value to export\r\n",
        "description": ""
    },
    "AWS::XRay::Group": {
        "prefix": "xray-group",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::XRay::Group\"\r\n\tProperties:\r\n\t\tFilterExpression: String\r\n\t\tGroupName: String\r\n\t\tInsightsConfiguration:\r\n\t\t\tInsightsConfiguration\r\n\t\tTags:\r\n\t\t\t- Json\r\n",
        "description": "AWS::XRay::Group\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html"
    },
    "AWS::SES::ContactList": {
        "prefix": "ses-contactlist",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ContactList\"\r\n\tProperties:\r\n\t\tContactListName: String\r\n\t\tDescription: String\r\n\t\tTopics:\r\n\t\t\t- Topic\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SES::ContactList\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html"
    },
    "AWS::ACMPCA::CertificateAuthority": {
        "prefix": "acmpca-certificateauthority",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::CertificateAuthority\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tKeyAlgorithm: String #required\r\n\t\tSigningAlgorithm: String #required\r\n\t\tSubject: #required\r\n\t\t\tSubject\r\n\t\tRevocationConfiguration:\r\n\t\t\tRevocationConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCsrExtensions:\r\n\t\t\tCsrExtensions\r\n\t\tKeyStorageSecurityStandard: String\r\n",
        "description": "AWS::ACMPCA::CertificateAuthority\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html"
    },
    "AWS::ServiceCatalog::PortfolioShare": {
        "prefix": "servicecatalog-portfolioshare",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioShare\"\r\n\tProperties:\r\n\t\tAccountId: String #required\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tShareTagOptions: Boolean\r\n",
        "description": "AWS::ServiceCatalog::PortfolioShare\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html"
    },
    "AWS::WAF::IPSet": {
        "prefix": "waf-ipset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::IPSet\"\r\n\tProperties:\r\n\t\tIPSetDescriptors:\r\n\t\t\t- IPSetDescriptor\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAF::IPSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html"
    },
    "AWS::IAM::Group": {
        "prefix": "iam-group",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Group\"\r\n\tProperties:\r\n\t\tGroupName: String\r\n\t\tManagedPolicyArns:\r\n\t\t\t- String\r\n\t\tPath: String\r\n\t\tPolicies:\r\n\t\t\t- Policy\r\n",
        "description": "AWS::IAM::Group\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"
    },
    "AWS::Backup::BackupPlan": {
        "prefix": "backup-backupplan",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupPlan\"\r\n\tProperties:\r\n\t\tBackupPlan: #required\r\n\t\t\tBackupPlanResourceType\r\n\t\tBackupPlanTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::Backup::BackupPlan\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html"
    },
    "AWS::AppIntegrations::EventIntegration": {
        "prefix": "appintegrations-eventintegration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppIntegrations::EventIntegration\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String #required\r\n\t\tEventBridgeBus: String #required\r\n\t\tEventFilter: #required\r\n\t\t\tEventFilter\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppIntegrations::EventIntegration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html"
    },
    "AWS::Rekognition::Collection": {
        "prefix": "rekognition-collection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Rekognition::Collection\"\r\n\tProperties:\r\n\t\tCollectionId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Rekognition::Collection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html"
    },
    "AWS::S3::MultiRegionAccessPoint": {
        "prefix": "s3-multiregionaccesspoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::MultiRegionAccessPoint\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tPublicAccessBlockConfiguration:\r\n\t\t\tPublicAccessBlockConfiguration\r\n\t\tRegions: #required\r\n\t\t\t- Region\r\n",
        "description": "AWS::S3::MultiRegionAccessPoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfig": {
        "prefix": "route53resolver-resolverqueryloggingconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverQueryLoggingConfig\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDestinationArn: String\r\n",
        "description": "AWS::Route53Resolver::ResolverQueryLoggingConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html"
    },
    "AWS::EC2::VPCPeeringConnection": {
        "prefix": "ec2-vpcpeeringconnection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCPeeringConnection\"\r\n\tProperties:\r\n\t\tPeerOwnerId: String\r\n\t\tPeerRegion: String\r\n\t\tPeerRoleArn: String\r\n\t\tPeerVpcId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::VPCPeeringConnection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
    },
    "AWS::Elasticsearch::Domain": {
        "prefix": "elasticsearch-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Elasticsearch::Domain\"\r\n\tProperties:\r\n\t\tAccessPolicies: Json\r\n\t\tAdvancedOptions:\r\n\t\t\tMap\r\n\t\tAdvancedSecurityOptions:\r\n\t\t\tAdvancedSecurityOptionsInput\r\n\t\tCognitoOptions:\r\n\t\t\tCognitoOptions\r\n\t\tDomainEndpointOptions:\r\n\t\t\tDomainEndpointOptions\r\n\t\tDomainName: String\r\n\t\tEBSOptions:\r\n\t\t\tEBSOptions\r\n\t\tElasticsearchClusterConfig:\r\n\t\t\tElasticsearchClusterConfig\r\n\t\tElasticsearchVersion: String\r\n\t\tEncryptionAtRestOptions:\r\n\t\t\tEncryptionAtRestOptions\r\n\t\tLogPublishingOptions:\r\n\t\t\tMap\r\n\t\tNodeToNodeEncryptionOptions:\r\n\t\t\tNodeToNodeEncryptionOptions\r\n\t\tSnapshotOptions:\r\n\t\t\tSnapshotOptions\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVPCOptions:\r\n\t\t\tVPCOptions\r\n",
        "description": "AWS::Elasticsearch::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html"
    },
    "AWS::FraudDetector::EntityType": {
        "prefix": "frauddetector-entitytype",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::EntityType\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n",
        "description": "AWS::FraudDetector::EntityType\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html"
    },
    "AWS::IoTSiteWise::AssetModel": {
        "prefix": "iotsitewise-assetmodel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::AssetModel\"\r\n\tProperties:\r\n\t\tAssetModelName: String #required\r\n\t\tAssetModelDescription: String\r\n\t\tAssetModelProperties:\r\n\t\t\t- AssetModelProperty\r\n\t\tAssetModelCompositeModels:\r\n\t\t\t- AssetModelCompositeModel\r\n\t\tAssetModelHierarchies:\r\n\t\t\t- AssetModelHierarchy\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTSiteWise::AssetModel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html"
    },
    "AWS::LookoutMetrics::Alert": {
        "prefix": "lookoutmetrics-alert",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LookoutMetrics::Alert\"\r\n\tProperties:\r\n\t\tAlertName: String\r\n\t\tAlertDescription: String\r\n\t\tAnomalyDetectorArn: String #required\r\n\t\tAlertSensitivityThreshold: Integer #required\r\n\t\tAction: #required\r\n\t\t\tAction\r\n",
        "description": "AWS::LookoutMetrics::Alert\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html"
    },
    "AWS::WAFRegional::SqlInjectionMatchSet": {
        "prefix": "wafregional-sqlinjectionmatchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::SqlInjectionMatchSet\"\r\n\tProperties:\r\n\t\tSqlInjectionMatchTuples:\r\n\t\t\t- SqlInjectionMatchTuple\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::SqlInjectionMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html"
    },
    "AWS::RAM::ResourceShare": {
        "prefix": "ram-resourceshare",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RAM::ResourceShare\"\r\n\tProperties:\r\n\t\tPermissionArns:\r\n\t\t\t- String\r\n\t\tPrincipals:\r\n\t\t\t- String\r\n\t\tAllowExternalPrincipals: Boolean\r\n\t\tResourceArns:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::RAM::ResourceShare\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html"
    },
    "AWS::Kinesis::Stream": {
        "prefix": "kinesis-stream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kinesis::Stream\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tRetentionPeriodHours: Integer\r\n\t\tShardCount: Integer\r\n\t\tStreamModeDetails:\r\n\t\t\tStreamModeDetails\r\n\t\tStreamEncryption:\r\n\t\t\tStreamEncryption\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Kinesis::Stream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html"
    },
    "AWS::Redshift::EndpointAccess": {
        "prefix": "redshift-endpointaccess",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::EndpointAccess\"\r\n\tProperties:\r\n\t\tClusterIdentifier: String\r\n\t\tResourceOwner: String\r\n\t\tEndpointName: String #required\r\n\t\tSubnetGroupName: String\r\n\t\tVpcSecurityGroupIds: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::Redshift::EndpointAccess\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html"
    },
    "AWS::SageMaker::ImageVersion": {
        "prefix": "sagemaker-imageversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::ImageVersion\"\r\n\tProperties:\r\n\t\tImageName: String #required\r\n\t\tBaseImage: String #required\r\n",
        "description": "AWS::SageMaker::ImageVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html"
    },
    "AWS::EC2::CapacityReservation": {
        "prefix": "ec2-capacityreservation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CapacityReservation\"\r\n\tProperties:\r\n\t\tTenancy: String\r\n\t\tEndDateType: String\r\n\t\tTagSpecifications:\r\n\t\t\t- TagSpecification\r\n\t\tAvailabilityZone: String #required\r\n\t\tEndDate: String\r\n\t\tEbsOptimized: Boolean\r\n\t\tOutPostArn: String\r\n\t\tInstanceCount: Integer #required\r\n\t\tPlacementGroupArn: String\r\n\t\tInstancePlatform: String #required\r\n\t\tInstanceType: String #required\r\n\t\tEphemeralStorage: Boolean\r\n\t\tInstanceMatchCriteria: String\r\n",
        "description": "AWS::EC2::CapacityReservation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html"
    },
    "AWS::AppSync::Resolver": {
        "prefix": "appsync-resolver",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::Resolver\"\r\n\tProperties:\r\n\t\tTypeName: String #required\r\n\t\tPipelineConfig:\r\n\t\t\tPipelineConfig\r\n\t\tRequestMappingTemplate: String\r\n\t\tResponseMappingTemplate: String\r\n\t\tMaxBatchSize: Integer\r\n\t\tSyncConfig:\r\n\t\t\tSyncConfig\r\n\t\tResponseMappingTemplateS3Location: String\r\n\t\tDataSourceName: String\r\n\t\tKind: String\r\n\t\tCachingConfig:\r\n\t\t\tCachingConfig\r\n\t\tRequestMappingTemplateS3Location: String\r\n\t\tApiId: String #required\r\n\t\tFieldName: String #required\r\n",
        "description": "AWS::AppSync::Resolver\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html"
    },
    "AWS::RefactorSpaces::Environment": {
        "prefix": "refactorspaces-environment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RefactorSpaces::Environment\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tNetworkFabricType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RefactorSpaces::Environment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html"
    },
    "AWS::DataSync::LocationNFS": {
        "prefix": "datasync-locationnfs",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationNFS\"\r\n\tProperties:\r\n\t\tMountOptions:\r\n\t\t\tMountOptions\r\n\t\tOnPremConfig: #required\r\n\t\t\tOnPremConfig\r\n\t\tServerHostname: String #required\r\n\t\tSubdirectory: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationNFS\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html"
    },
    "AWS::Pinpoint::VoiceChannel": {
        "prefix": "pinpoint-voicechannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::VoiceChannel\"\r\n\tProperties:\r\n\t\tEnabled: Boolean\r\n\t\tApplicationId: String #required\r\n",
        "description": "AWS::Pinpoint::VoiceChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html"
    },
    "AWS::EC2::VPCEndpointServicePermissions": {
        "prefix": "ec2-vpcendpointservicepermissions",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointServicePermissions\"\r\n\tProperties:\r\n\t\tAllowedPrincipals:\r\n\t\t\t- String\r\n\t\tServiceId: String #required\r\n",
        "description": "AWS::EC2::VPCEndpointServicePermissions\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html"
    },
    "AWS::Route53::RecordSet": {
        "prefix": "route53-recordset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::RecordSet\"\r\n\tProperties:\r\n\t\tAliasTarget:\r\n\t\t\tAliasTarget\r\n\t\tComment: String\r\n\t\tFailover: String\r\n\t\tGeoLocation:\r\n\t\t\tGeoLocation\r\n\t\tHealthCheckId: String\r\n\t\tHostedZoneId: String\r\n\t\tHostedZoneName: String\r\n\t\tMultiValueAnswer: Boolean\r\n\t\tName: String #required\r\n\t\tRegion: String\r\n\t\tResourceRecords:\r\n\t\t\t- String\r\n\t\tSetIdentifier: String\r\n\t\tTTL: String\r\n\t\tType: String #required\r\n\t\tWeight: Integer\r\n",
        "description": "AWS::Route53::RecordSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html"
    },
    "AWS::WAF::SizeConstraintSet": {
        "prefix": "waf-sizeconstraintset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::SizeConstraintSet\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tSizeConstraints: #required\r\n\t\t\t- SizeConstraint\r\n",
        "description": "AWS::WAF::SizeConstraintSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html"
    },
    "AWS::ECS::Cluster": {
        "prefix": "ecs-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::Cluster\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tClusterName: String\r\n\t\tClusterSettings:\r\n\t\t\t- ClusterSettings\r\n\t\tConfiguration:\r\n\t\t\tClusterConfiguration\r\n\t\tCapacityProviders:\r\n\t\t\t- String\r\n\t\tDefaultCapacityProviderStrategy:\r\n\t\t\t- CapacityProviderStrategyItem\r\n",
        "description": "AWS::ECS::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html"
    },
    "AWS::SageMaker::FeatureGroup": {
        "prefix": "sagemaker-featuregroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::FeatureGroup\"\r\n\tProperties:\r\n\t\tFeatureGroupName: String #required\r\n\t\tRecordIdentifierFeatureName: String #required\r\n\t\tEventTimeFeatureName: String #required\r\n\t\tFeatureDefinitions: #required\r\n\t\t\t- FeatureDefinition\r\n\t\tOnlineStoreConfig: Json\r\n\t\tOfflineStoreConfig: Json\r\n\t\tRoleArn: String\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::FeatureGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html"
    },
    "AWS::NetworkManager::Link": {
        "prefix": "networkmanager-link",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Link\"\r\n\tProperties:\r\n\t\tGlobalNetworkId: String #required\r\n\t\tSiteId: String #required\r\n\t\tBandwidth: #required\r\n\t\t\tBandwidth\r\n\t\tProvider: String\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String\r\n",
        "description": "AWS::NetworkManager::Link\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html"
    },
    "AWS::KinesisAnalytics::ApplicationOutput": {
        "prefix": "kinesisanalytics-applicationoutput",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::ApplicationOutput\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tOutput: #required\r\n\t\t\tOutput\r\n",
        "description": "AWS::KinesisAnalytics::ApplicationOutput\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html"
    },
    "AWS::CloudFormation::StackSet": {
        "prefix": "cloudformation-stackset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::StackSet\"\r\n\tProperties:\r\n\t\tStackSetName: String #required\r\n\t\tAdministrationRoleARN: String\r\n\t\tAutoDeployment:\r\n\t\t\tAutoDeployment\r\n\t\tCapabilities:\r\n\t\t\t- String\r\n\t\tDescription: String\r\n\t\tExecutionRoleName: String\r\n\t\tOperationPreferences:\r\n\t\t\tOperationPreferences\r\n\t\tStackInstancesGroup:\r\n\t\t\t- StackInstances\r\n\t\tParameters:\r\n\t\t\t- Parameter\r\n\t\tPermissionModel: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTemplateBody: String\r\n\t\tTemplateURL: String\r\n\t\tCallAs: String\r\n\t\tManagedExecution: Json\r\n",
        "description": "AWS::CloudFormation::StackSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html"
    },
    "AWS::Cognito::UserPoolRiskConfigurationAttachment": {
        "prefix": "cognito-userpoolriskconfigurationattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolRiskConfigurationAttachment\"\r\n\tProperties:\r\n\t\tCompromisedCredentialsRiskConfiguration:\r\n\t\t\tCompromisedCredentialsRiskConfigurationType\r\n\t\tUserPoolId: String #required\r\n\t\tClientId: String #required\r\n\t\tAccountTakeoverRiskConfiguration:\r\n\t\t\tAccountTakeoverRiskConfigurationType\r\n\t\tRiskExceptionConfiguration:\r\n\t\t\tRiskExceptionConfigurationType\r\n",
        "description": "AWS::Cognito::UserPoolRiskConfigurationAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html"
    },
    "AWS::AppStream::Stack": {
        "prefix": "appstream-stack",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Stack\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tStorageConnectors:\r\n\t\t\t- StorageConnector\r\n\t\tDeleteStorageConnectors: Boolean\r\n\t\tEmbedHostDomains:\r\n\t\t\t- String\r\n\t\tUserSettings:\r\n\t\t\t- UserSetting\r\n\t\tAttributesToDelete:\r\n\t\t\t- String\r\n\t\tRedirectURL: String\r\n\t\tName: String\r\n\t\tFeedbackURL: String\r\n\t\tApplicationSettings:\r\n\t\t\tApplicationSettings\r\n\t\tDisplayName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAccessEndpoints:\r\n\t\t\t- AccessEndpoint\r\n",
        "description": "AWS::AppStream::Stack\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html"
    },
    "AWS::AppSync::GraphQLSchema": {
        "prefix": "appsync-graphqlschema",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::GraphQLSchema\"\r\n\tProperties:\r\n\t\tDefinition: String\r\n\t\tDefinitionS3Location: String\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::AppSync::GraphQLSchema\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html"
    },
    "AWS::EC2::TransitGatewayRouteTableAssociation": {
        "prefix": "ec2-transitgatewayroutetableassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTableAssociation\"\r\n\tProperties:\r\n\t\tTransitGatewayRouteTableId: String #required\r\n\t\tTransitGatewayAttachmentId: String #required\r\n",
        "description": "AWS::EC2::TransitGatewayRouteTableAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html"
    },
    "AWS::Greengrass::ConnectorDefinitionVersion": {
        "prefix": "greengrass-connectordefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ConnectorDefinitionVersion\"\r\n\tProperties:\r\n\t\tConnectors: #required\r\n\t\t\t- Connector\r\n\t\tConnectorDefinitionId: String #required\r\n",
        "description": "AWS::Greengrass::ConnectorDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html"
    },
    "AWS::ServiceCatalog::ResourceUpdateConstraint": {
        "prefix": "servicecatalog-resourceupdateconstraint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::ResourceUpdateConstraint\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tAcceptLanguage: String\r\n\t\tTagUpdateOnProvisionedProduct: String #required\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n",
        "description": "AWS::ServiceCatalog::ResourceUpdateConstraint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html"
    },
    "AWS::AppSync::GraphQLApi": {
        "prefix": "appsync-graphqlapi",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::GraphQLApi\"\r\n\tProperties:\r\n\t\tOpenIDConnectConfig:\r\n\t\t\tOpenIDConnectConfig\r\n\t\tLambdaAuthorizerConfig:\r\n\t\t\tLambdaAuthorizerConfig\r\n\t\tXrayEnabled: Boolean\r\n\t\tUserPoolConfig:\r\n\t\t\tUserPoolConfig\r\n\t\tTags:\r\n\t\t\tTags\r\n\t\tName: String #required\r\n\t\tAuthenticationType: String #required\r\n\t\tLogConfig:\r\n\t\t\tLogConfig\r\n\t\tAdditionalAuthenticationProviders:\r\n\t\t\tAdditionalAuthenticationProviders\r\n",
        "description": "AWS::AppSync::GraphQLApi\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html"
    },
    "AWS::CloudFront::StreamingDistribution": {
        "prefix": "cloudfront-streamingdistribution",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::StreamingDistribution\"\r\n\tProperties:\r\n\t\tStreamingDistributionConfig: #required\r\n\t\t\tStreamingDistributionConfig\r\n\t\tTags: #required\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CloudFront::StreamingDistribution\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html"
    },
    "AWS::SageMaker::DataQualityJobDefinition": {
        "prefix": "sagemaker-dataqualityjobdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::DataQualityJobDefinition\"\r\n\tProperties:\r\n\t\tJobDefinitionName: String\r\n\t\tDataQualityBaselineConfig:\r\n\t\t\tDataQualityBaselineConfig\r\n\t\tDataQualityAppSpecification: #required\r\n\t\t\tDataQualityAppSpecification\r\n\t\tDataQualityJobInput: #required\r\n\t\t\tDataQualityJobInput\r\n\t\tDataQualityJobOutputConfig: #required\r\n\t\t\tMonitoringOutputConfig\r\n\t\tJobResources: #required\r\n\t\t\tMonitoringResources\r\n\t\tNetworkConfig:\r\n\t\t\tNetworkConfig\r\n\t\tRoleArn: String #required\r\n\t\tStoppingCondition:\r\n\t\t\tStoppingCondition\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::DataQualityJobDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html"
    },
    "AWS::Cognito::UserPoolIdentityProvider": {
        "prefix": "cognito-userpoolidentityprovider",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolIdentityProvider\"\r\n\tProperties:\r\n\t\tProviderName: String #required\r\n\t\tUserPoolId: String #required\r\n\t\tAttributeMapping: Json\r\n\t\tProviderDetails: Json\r\n\t\tProviderType: String #required\r\n\t\tIdpIdentifiers:\r\n\t\t\t- String\r\n",
        "description": "AWS::Cognito::UserPoolIdentityProvider\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html"
    },
    "AWS::ACMPCA::CertificateAuthorityActivation": {
        "prefix": "acmpca-certificateauthorityactivation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::CertificateAuthorityActivation\"\r\n\tProperties:\r\n\t\tCertificateAuthorityArn: String #required\r\n\t\tCertificate: String #required\r\n\t\tCertificateChain: String\r\n\t\tStatus: String\r\n",
        "description": "AWS::ACMPCA::CertificateAuthorityActivation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html"
    },
    "AWS::WAFv2::LoggingConfiguration": {
        "prefix": "wafv2-loggingconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::LoggingConfiguration\"\r\n\tProperties:\r\n\t\tResourceArn: String #required\r\n\t\tLogDestinationConfigs: #required\r\n\t\t\t- String\r\n\t\tRedactedFields:\r\n\t\t\t- FieldToMatch\r\n\t\tLoggingFilter: Json\r\n",
        "description": "AWS::WAFv2::LoggingConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html"
    },
    "AWS::LakeFormation::Resource": {
        "prefix": "lakeformation-resource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::Resource\"\r\n\tProperties:\r\n\t\tResourceArn: String #required\r\n\t\tUseServiceLinkedRole: Boolean #required\r\n\t\tRoleArn: String\r\n",
        "description": "AWS::LakeFormation::Resource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html"
    },
    "AWS::SNS::Topic": {
        "prefix": "sns-topic",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::Topic\"\r\n\tProperties:\r\n\t\tContentBasedDeduplication: Boolean\r\n\t\tDisplayName: String\r\n\t\tFifoTopic: Boolean\r\n\t\tKmsMasterKeyId: String\r\n\t\tSubscription:\r\n\t\t\t- Subscription\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTopicName: String\r\n",
        "description": "AWS::SNS::Topic\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html"
    },
    "AWS::ServiceCatalog::TagOption": {
        "prefix": "servicecatalog-tagoption",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::TagOption\"\r\n\tProperties:\r\n\t\tActive: Boolean\r\n\t\tValue: String #required\r\n\t\tKey: String #required\r\n",
        "description": "AWS::ServiceCatalog::TagOption\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html"
    },
    "AWS::QuickSight::Dashboard": {
        "prefix": "quicksight-dashboard",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::Dashboard\"\r\n\tProperties:\r\n\t\tAwsAccountId: String #required\r\n\t\tDashboardId: String #required\r\n\t\tDashboardPublishOptions:\r\n\t\t\tDashboardPublishOptions\r\n\t\tName: String\r\n\t\tParameters:\r\n\t\t\tParameters\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tSourceEntity: #required\r\n\t\t\tDashboardSourceEntity\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThemeArn: String\r\n\t\tVersionDescription: String\r\n",
        "description": "AWS::QuickSight::Dashboard\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html"
    },
    "AWS::Redshift::ScheduledAction": {
        "prefix": "redshift-scheduledaction",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ScheduledAction\"\r\n\tProperties:\r\n\t\tScheduledActionName: String #required\r\n\t\tTargetAction:\r\n\t\t\tScheduledActionType\r\n\t\tSchedule: String\r\n\t\tIamRole: String\r\n\t\tScheduledActionDescription: String\r\n\t\tStartTime: String\r\n\t\tEndTime: String\r\n\t\tEnable: Boolean\r\n",
        "description": "AWS::Redshift::ScheduledAction\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html"
    },
    "AWS::Redshift::Cluster": {
        "prefix": "redshift-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::Cluster\"\r\n\tProperties:\r\n\t\tClusterIdentifier: String\r\n\t\tMasterUsername: String #required\r\n\t\tMasterUserPassword: String #required\r\n\t\tNodeType: String #required\r\n\t\tAllowVersionUpgrade: Boolean\r\n\t\tAutomatedSnapshotRetentionPeriod: Integer\r\n\t\tAvailabilityZone: String\r\n\t\tClusterParameterGroupName: String\r\n\t\tClusterType: String #required\r\n\t\tClusterVersion: String\r\n\t\tClusterSubnetGroupName: String\r\n\t\tDBName: String #required\r\n\t\tElasticIp: String\r\n\t\tEncrypted: Boolean\r\n\t\tHsmClientCertificateIdentifier: String\r\n\t\tHsmConfigurationIdentifier: String\r\n\t\tKmsKeyId: String\r\n\t\tNumberOfNodes: Integer\r\n\t\tPort: Integer\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tPubliclyAccessible: Boolean\r\n\t\tClusterSecurityGroups:\r\n\t\t\t- String\r\n\t\tIamRoles:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tSnapshotClusterIdentifier: String\r\n\t\tSnapshotIdentifier: String\r\n\t\tOwnerAccount: String\r\n\t\tLoggingProperties:\r\n\t\t\tLoggingProperties\r\n\t\tDestinationRegion: String\r\n\t\tSnapshotCopyRetentionPeriod: Integer\r\n\t\tSnapshotCopyGrantName: String\r\n\t\tManualSnapshotRetentionPeriod: Integer\r\n\t\tSnapshotCopyManual: Boolean\r\n\t\tAvailabilityZoneRelocation: Boolean\r\n\t\tAvailabilityZoneRelocationStatus: String\r\n\t\tAquaConfigurationStatus: String\r\n\t\tClassic: Boolean\r\n\t\tEnhancedVpcRouting: Boolean\r\n\t\tMaintenanceTrackName: String\r\n\t\tDeferMaintenance: Boolean\r\n\t\tDeferMaintenanceStartTime: String\r\n\t\tDeferMaintenanceEndTime: String\r\n\t\tDeferMaintenanceDuration: Integer\r\n\t\tRevisionTarget: String\r\n\t\tResourceAction: String\r\n\t\tRotateEncryptionKey: Boolean\r\n",
        "description": "AWS::Redshift::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html"
    },
    "AWS::SageMaker::MonitoringSchedule": {
        "prefix": "sagemaker-monitoringschedule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::MonitoringSchedule\"\r\n\tProperties:\r\n\t\tMonitoringScheduleName: String #required\r\n\t\tMonitoringScheduleConfig: #required\r\n\t\t\tMonitoringScheduleConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEndpointName: String\r\n\t\tFailureReason: String\r\n\t\tLastMonitoringExecutionSummary:\r\n\t\t\tMonitoringExecutionSummary\r\n\t\tMonitoringScheduleStatus: String\r\n",
        "description": "AWS::SageMaker::MonitoringSchedule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html"
    },
    "AWS::EC2::IPAM": {
        "prefix": "ec2-ipam",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::IPAM\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tOperatingRegions:\r\n\t\t\t- IpamOperatingRegion\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::IPAM\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html"
    },
    "AWS::EKS::Nodegroup": {
        "prefix": "eks-nodegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::Nodegroup\"\r\n\tProperties:\r\n\t\tUpdateConfig:\r\n\t\t\tUpdateConfig\r\n\t\tScalingConfig:\r\n\t\t\tScalingConfig\r\n\t\tLabels: Json\r\n\t\tTaints:\r\n\t\t\t- Taint\r\n\t\tReleaseVersion: String\r\n\t\tCapacityType: String\r\n\t\tNodegroupName: String\r\n\t\tSubnets: #required\r\n\t\t\t- String\r\n\t\tNodeRole: String #required\r\n\t\tAmiType: String\r\n\t\tForceUpdateEnabled: Boolean\r\n\t\tVersion: String\r\n\t\tLaunchTemplate:\r\n\t\t\tLaunchTemplateSpecification\r\n\t\tRemoteAccess:\r\n\t\t\tRemoteAccess\r\n\t\tDiskSize: Double\r\n\t\tClusterName: String #required\r\n\t\tInstanceTypes:\r\n\t\t\t- String\r\n\t\tTags: Json\r\n",
        "description": "AWS::EKS::Nodegroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html"
    },
    "AWS::AppMesh::Route": {
        "prefix": "appmesh-route",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::Route\"\r\n\tProperties:\r\n\t\tMeshName: String #required\r\n\t\tVirtualRouterName: String #required\r\n\t\tMeshOwner: String\r\n\t\tRouteName: String\r\n\t\tSpec: #required\r\n\t\t\tRouteSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::Route\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html"
    },
    "AWS::CE::CostCategory": {
        "prefix": "ce-costcategory",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CE::CostCategory\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tRuleVersion: String #required\r\n\t\tRules: String #required\r\n\t\tSplitChargeRules: String\r\n\t\tDefaultValue: String\r\n",
        "description": "AWS::CE::CostCategory\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html"
    },
    "AWS::EC2::EIP": {
        "prefix": "ec2-eip",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EIP\"\r\n\tProperties:\r\n\t\tDomain: String\r\n\t\tInstanceId: String\r\n\t\tPublicIpv4Pool: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::EIP\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
    },
    "AWS::IoT::CustomMetric": {
        "prefix": "iot-custommetric",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::CustomMetric\"\r\n\tProperties:\r\n\t\tMetricName: String\r\n\t\tDisplayName: String\r\n\t\tMetricType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::CustomMetric\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html"
    },
    "AWS::MediaConvert::Queue": {
        "prefix": "mediaconvert-queue",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::Queue\"\r\n\tProperties:\r\n\t\tStatus: String\r\n\t\tDescription: String\r\n\t\tPricingPlan: String\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::MediaConvert::Queue\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html"
    },
    "AWS::ApiGateway::DomainName": {
        "prefix": "apigateway-domainname",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DomainName\"\r\n\tProperties:\r\n\t\tDomainName: String\r\n\t\tEndpointConfiguration:\r\n\t\t\tEndpointConfiguration\r\n\t\tMutualTlsAuthentication:\r\n\t\t\tMutualTlsAuthentication\r\n\t\tCertificateArn: String\r\n\t\tRegionalCertificateArn: String\r\n\t\tOwnershipVerificationCertificateArn: String\r\n\t\tSecurityPolicy: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ApiGateway::DomainName\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html"
    },
    "AWS::WAFv2::RegexPatternSet": {
        "prefix": "wafv2-regexpatternset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::RegexPatternSet\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tRegularExpressionList: #required\r\n\t\t\t- String\r\n\t\tScope: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::WAFv2::RegexPatternSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html"
    },
    "AWS::Backup::Framework": {
        "prefix": "backup-framework",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::Framework\"\r\n\tProperties:\r\n\t\tFrameworkName: String\r\n\t\tFrameworkDescription: String\r\n\t\tFrameworkControls: #required\r\n\t\t\t- FrameworkControl\r\n\t\tFrameworkTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Backup::Framework\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html"
    },
    "AWS::NetworkManager::CustomerGatewayAssociation": {
        "prefix": "networkmanager-customergatewayassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::CustomerGatewayAssociation\"\r\n\tProperties:\r\n\t\tGlobalNetworkId: String #required\r\n\t\tCustomerGatewayArn: String #required\r\n\t\tDeviceId: String #required\r\n\t\tLinkId: String\r\n",
        "description": "AWS::NetworkManager::CustomerGatewayAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html"
    },
    "AWS::Lambda::LayerVersion": {
        "prefix": "lambda-layerversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::LayerVersion\"\r\n\tProperties:\r\n\t\tCompatibleRuntimes:\r\n\t\t\t- String\r\n\t\tLicenseInfo: String\r\n\t\tDescription: String\r\n\t\tLayerName: String\r\n\t\tContent: #required\r\n\t\t\tContent\r\n\t\tCompatibleArchitectures:\r\n\t\t\t- String\r\n",
        "description": "AWS::Lambda::LayerVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html"
    },
    "AWS::ApiGateway::DocumentationPart": {
        "prefix": "apigateway-documentationpart",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DocumentationPart\"\r\n\tProperties:\r\n\t\tLocation: #required\r\n\t\t\tLocation\r\n\t\tProperties: String #required\r\n\t\tRestApiId: String #required\r\n",
        "description": "AWS::ApiGateway::DocumentationPart\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html"
    },
    "AWS::CloudFront::CachePolicy": {
        "prefix": "cloudfront-cachepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::CachePolicy\"\r\n\tProperties:\r\n\t\tCachePolicyConfig: #required\r\n\t\t\tCachePolicyConfig\r\n",
        "description": "AWS::CloudFront::CachePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html"
    },
    "AWS::RDS::DBSubnetGroup": {
        "prefix": "rds-dbsubnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupDescription: String #required\r\n\t\tDBSubnetGroupName: String\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RDS::DBSubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html"
    },
    "AWS::LakeFormation::DataLakeSettings": {
        "prefix": "lakeformation-datalakesettings",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::DataLakeSettings\"\r\n\tProperties:\r\n\t\tAdmins:\r\n\t\t\tAdmins\r\n\t\tTrustedResourceOwners:\r\n\t\t\t- String\r\n",
        "description": "AWS::LakeFormation::DataLakeSettings\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html"
    },
    "AWS::MemoryDB::ParameterGroup": {
        "prefix": "memorydb-parametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MemoryDB::ParameterGroup\"\r\n\tProperties:\r\n\t\tParameterGroupName: String #required\r\n\t\tFamily: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tParameters: Json\r\n",
        "description": "AWS::MemoryDB::ParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html"
    },
    "AWS::IoTFleetHub::Application": {
        "prefix": "iotfleethub-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTFleetHub::Application\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tApplicationDescription: String\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTFleetHub::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html"
    },
    "AWS::Pinpoint::EventStream": {
        "prefix": "pinpoint-eventstream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EventStream\"\r\n\tProperties:\r\n\t\tApplicationId: String #required\r\n\t\tDestinationStreamArn: String #required\r\n\t\tRoleArn: String #required\r\n",
        "description": "AWS::Pinpoint::EventStream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html"
    },
    "AWS::MWAA::Environment": {
        "prefix": "mwaa-environment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MWAA::Environment\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tExecutionRoleArn: String\r\n\t\tKmsKey: String\r\n\t\tAirflowVersion: String\r\n\t\tSourceBucketArn: String\r\n\t\tDagS3Path: String\r\n\t\tPluginsS3Path: String\r\n\t\tPluginsS3ObjectVersion: String\r\n\t\tRequirementsS3Path: String\r\n\t\tRequirementsS3ObjectVersion: String\r\n\t\tAirflowConfigurationOptions: Json\r\n\t\tEnvironmentClass: String\r\n\t\tMaxWorkers: Integer\r\n\t\tMinWorkers: Integer\r\n\t\tSchedulers: Integer\r\n\t\tNetworkConfiguration:\r\n\t\t\tNetworkConfiguration\r\n\t\tLoggingConfiguration:\r\n\t\t\tLoggingConfiguration\r\n\t\tWeeklyMaintenanceWindowStart: String\r\n\t\tTags: Json\r\n\t\tWebserverAccessMode: String\r\n",
        "description": "AWS::MWAA::Environment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html"
    },
    "AWS::PinpointEmail::ConfigurationSetEventDestination": {
        "prefix": "pinpointemail-configurationseteventdestination",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::ConfigurationSetEventDestination\"\r\n\tProperties:\r\n\t\tEventDestinationName: String #required\r\n\t\tConfigurationSetName: String #required\r\n\t\tEventDestination:\r\n\t\t\tEventDestination\r\n",
        "description": "AWS::PinpointEmail::ConfigurationSetEventDestination\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html"
    },
    "AWS::WAFRegional::RegexPatternSet": {
        "prefix": "wafregional-regexpatternset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::RegexPatternSet\"\r\n\tProperties:\r\n\t\tRegexPatternStrings: #required\r\n\t\t\t- String\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::RegexPatternSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html"
    },
    "AWS::GuardDuty::ThreatIntelSet": {
        "prefix": "guardduty-threatintelset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::ThreatIntelSet\"\r\n\tProperties:\r\n\t\tFormat: String #required\r\n\t\tActivate: Boolean #required\r\n\t\tDetectorId: String #required\r\n\t\tName: String\r\n\t\tLocation: String #required\r\n",
        "description": "AWS::GuardDuty::ThreatIntelSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html"
    },
    "AWS::Logs::MetricFilter": {
        "prefix": "logs-metricfilter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::MetricFilter\"\r\n\tProperties:\r\n\t\tFilterPattern: String #required\r\n\t\tLogGroupName: String #required\r\n\t\tMetricTransformations: #required\r\n\t\t\t- MetricTransformation\r\n",
        "description": "AWS::Logs::MetricFilter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html"
    },
    "AWS::Lightsail::Database": {
        "prefix": "lightsail-database",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Database\"\r\n\tProperties:\r\n\t\tRelationalDatabaseName: String #required\r\n\t\tAvailabilityZone: String\r\n\t\tRelationalDatabaseBlueprintId: String #required\r\n\t\tRelationalDatabaseBundleId: String #required\r\n\t\tMasterDatabaseName: String #required\r\n\t\tMasterUsername: String #required\r\n\t\tMasterUserPassword: String\r\n\t\tPreferredBackupWindow: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tPubliclyAccessible: Boolean\r\n\t\tCaCertificateIdentifier: String\r\n\t\tBackupRetention: Boolean\r\n\t\tRotateMasterUserPassword: Boolean\r\n\t\tRelationalDatabaseParameters:\r\n\t\t\t- RelationalDatabaseParameter\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::Database\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html"
    },
    "AWS::Lightsail::Certificate": {
        "prefix": "lightsail-certificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Certificate\"\r\n\tProperties:\r\n\t\tCertificateName: String #required\r\n\t\tDomainName: String #required\r\n\t\tSubjectAlternativeNames:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::Certificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html"
    },
    "AWS::Macie::Session": {
        "prefix": "macie-session",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::Session\"\r\n\tProperties:\r\n\t\tStatus: String\r\n\t\tFindingPublishingFrequency: String\r\n",
        "description": "AWS::Macie::Session\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html"
    },
    "AWS::SecretsManager::RotationSchedule": {
        "prefix": "secretsmanager-rotationschedule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::RotationSchedule\"\r\n\tProperties:\r\n\t\tSecretId: String #required\r\n\t\tHostedRotationLambda:\r\n\t\t\tHostedRotationLambda\r\n\t\tRotationLambdaARN: String\r\n\t\tRotationRules:\r\n\t\t\tRotationRules\r\n\t\tRotateImmediatelyOnUpdate: Boolean\r\n",
        "description": "AWS::SecretsManager::RotationSchedule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html"
    },
    "AWS::Cognito::IdentityPool": {
        "prefix": "cognito-identitypool",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::IdentityPool\"\r\n\tProperties:\r\n\t\tPushSync:\r\n\t\t\tPushSync\r\n\t\tCognitoIdentityProviders:\r\n\t\t\t- CognitoIdentityProvider\r\n\t\tCognitoEvents: Json\r\n\t\tDeveloperProviderName: String\r\n\t\tCognitoStreams:\r\n\t\t\tCognitoStreams\r\n\t\tIdentityPoolName: String\r\n\t\tAllowUnauthenticatedIdentities: Boolean #required\r\n\t\tSupportedLoginProviders: Json\r\n\t\tSamlProviderARNs:\r\n\t\t\t- String\r\n\t\tOpenIdConnectProviderARNs:\r\n\t\t\t- String\r\n\t\tAllowClassicFlow: Boolean\r\n",
        "description": "AWS::Cognito::IdentityPool\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html"
    },
    "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "prefix": "elasticloadbalancingv2-loadbalancer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::LoadBalancer\"\r\n\tProperties:\r\n\t\tIpAddressType: String\r\n\t\tLoadBalancerAttributes:\r\n\t\t\t- LoadBalancerAttribute\r\n\t\tName: String\r\n\t\tScheme: String\r\n\t\tSecurityGroups:\r\n\t\t\t- String\r\n\t\tSubnetMappings:\r\n\t\t\t- SubnetMapping\r\n\t\tSubnets:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String\r\n",
        "description": "AWS::ElasticLoadBalancingV2::LoadBalancer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html"
    },
    "AWS::Route53::DNSSEC": {
        "prefix": "route53-dnssec",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::DNSSEC\"\r\n\tProperties:\r\n\t\tHostedZoneId: String #required\r\n",
        "description": "AWS::Route53::DNSSEC\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html"
    },
    "AWS::CodeBuild::SourceCredential": {
        "prefix": "codebuild-sourcecredential",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::SourceCredential\"\r\n\tProperties:\r\n\t\tServerType: String #required\r\n\t\tUsername: String\r\n\t\tToken: String #required\r\n\t\tAuthType: String #required\r\n",
        "description": "AWS::CodeBuild::SourceCredential\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html"
    },
    "AWS::DMS::ReplicationSubnetGroup": {
        "prefix": "dms-replicationsubnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationSubnetGroup\"\r\n\tProperties:\r\n\t\tReplicationSubnetGroupDescription: String #required\r\n\t\tReplicationSubnetGroupIdentifier: String\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DMS::ReplicationSubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html"
    },
    "AWS::SageMaker::ModelPackageGroup": {
        "prefix": "sagemaker-modelpackagegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::ModelPackageGroup\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tModelPackageGroupName: String #required\r\n\t\tModelPackageGroupDescription: String\r\n\t\tModelPackageGroupPolicy: Json\r\n",
        "description": "AWS::SageMaker::ModelPackageGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html"
    },
    "AWS::WAFv2::IPSet": {
        "prefix": "wafv2-ipset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::IPSet\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tScope: String #required\r\n\t\tIPAddressVersion: String #required\r\n\t\tAddresses: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::WAFv2::IPSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html"
    },
    "AWS::Route53Resolver::FirewallRuleGroupAssociation": {
        "prefix": "route53resolver-firewallrulegroupassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::FirewallRuleGroupAssociation\"\r\n\tProperties:\r\n\t\tFirewallRuleGroupId: String #required\r\n\t\tVpcId: String #required\r\n\t\tName: String\r\n\t\tPriority: Integer #required\r\n\t\tMutationProtection: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Route53Resolver::FirewallRuleGroupAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html"
    },
    "AWS::Lambda::Alias": {
        "prefix": "lambda-alias",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Alias\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tFunctionName: String #required\r\n\t\tFunctionVersion: String #required\r\n\t\tName: String #required\r\n\t\tProvisionedConcurrencyConfig:\r\n\t\t\tProvisionedConcurrencyConfiguration\r\n\t\tRoutingConfig:\r\n\t\t\tAliasRoutingConfiguration\r\n",
        "description": "AWS::Lambda::Alias\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html"
    },
    "AWS::EC2::SecurityGroupEgress": {
        "prefix": "ec2-securitygroupegress",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroupEgress\"\r\n\tProperties:\r\n\t\tCidrIp: String\r\n\t\tCidrIpv6: String\r\n\t\tDescription: String\r\n\t\tDestinationPrefixListId: String\r\n\t\tDestinationSecurityGroupId: String\r\n\t\tFromPort: Integer\r\n\t\tGroupId: String #required\r\n\t\tIpProtocol: String #required\r\n\t\tToPort: Integer\r\n",
        "description": "AWS::EC2::SecurityGroupEgress\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
    },
    "AWS::Connect::QuickConnect": {
        "prefix": "connect-quickconnect",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::QuickConnect\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tQuickConnectConfig: #required\r\n\t\t\tQuickConnectConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Connect::QuickConnect\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html"
    },
    "AWS::Lambda::LayerVersionPermission": {
        "prefix": "lambda-layerversionpermission",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::LayerVersionPermission\"\r\n\tProperties:\r\n\t\tAction: String #required\r\n\t\tLayerVersionArn: String #required\r\n\t\tOrganizationId: String\r\n\t\tPrincipal: String #required\r\n",
        "description": "AWS::Lambda::LayerVersionPermission\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html"
    },
    "AWS::StepFunctions::StateMachine": {
        "prefix": "stepfunctions-statemachine",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::StepFunctions::StateMachine\"\r\n\tProperties:\r\n\t\tDefinitionString: String\r\n\t\tRoleArn: String #required\r\n\t\tStateMachineName: String\r\n\t\tStateMachineType: String\r\n\t\tLoggingConfiguration:\r\n\t\t\tLoggingConfiguration\r\n\t\tTracingConfiguration:\r\n\t\t\tTracingConfiguration\r\n\t\tDefinitionS3Location:\r\n\t\t\tS3Location\r\n\t\tDefinitionSubstitutions:\r\n\t\t\tMap\r\n\t\tDefinition:\r\n\t\t\tDefinition\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::StepFunctions::StateMachine\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html"
    },
    "AWS::CodeDeploy::DeploymentConfig": {
        "prefix": "codedeploy-deploymentconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::DeploymentConfig\"\r\n\tProperties:\r\n\t\tComputePlatform: String\r\n\t\tDeploymentConfigName: String\r\n\t\tMinimumHealthyHosts:\r\n\t\t\tMinimumHealthyHosts\r\n\t\tTrafficRoutingConfig:\r\n\t\t\tTrafficRoutingConfig\r\n",
        "description": "AWS::CodeDeploy::DeploymentConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html"
    },
    "AWS::IoT::MitigationAction": {
        "prefix": "iot-mitigationaction",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::MitigationAction\"\r\n\tProperties:\r\n\t\tActionName: String\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tActionParams: #required\r\n\t\t\tActionParams\r\n",
        "description": "AWS::IoT::MitigationAction\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html"
    },
    "AWS::DMS::EventSubscription": {
        "prefix": "dms-eventsubscription",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::EventSubscription\"\r\n\tProperties:\r\n\t\tSourceType: String\r\n\t\tEventCategories:\r\n\t\t\t- String\r\n\t\tEnabled: Boolean\r\n\t\tSubscriptionName: String\r\n\t\tSnsTopicArn: String #required\r\n\t\tSourceIds:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DMS::EventSubscription\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html"
    },
    "AWS::EC2::TransitGatewayAttachment": {
        "prefix": "ec2-transitgatewayattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayAttachment\"\r\n\tProperties:\r\n\t\tTransitGatewayId: String #required\r\n\t\tVpcId: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TransitGatewayAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html"
    },
    "AWS::CustomerProfiles::Integration": {
        "prefix": "customerprofiles-integration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CustomerProfiles::Integration\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tUri: String\r\n\t\tFlowDefinition:\r\n\t\t\tFlowDefinition\r\n\t\tObjectTypeName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tObjectTypeNames:\r\n\t\t\t- ObjectTypeMapping\r\n",
        "description": "AWS::CustomerProfiles::Integration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html"
    },
    "AWS::FraudDetector::Outcome": {
        "prefix": "frauddetector-outcome",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::Outcome\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n",
        "description": "AWS::FraudDetector::Outcome\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html"
    },
    "AWS::Location::Tracker": {
        "prefix": "location-tracker",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::Tracker\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tKmsKeyId: String\r\n\t\tPricingPlan: String\r\n\t\tPricingPlanDataSource: String\r\n\t\tPositionFiltering: String\r\n\t\tTrackerName: String #required\r\n",
        "description": "AWS::Location::Tracker\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html"
    },
    "AWS::DAX::ParameterGroup": {
        "prefix": "dax-parametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::ParameterGroup\"\r\n\tProperties:\r\n\t\tParameterNameValues: Json\r\n\t\tDescription: String\r\n\t\tParameterGroupName: String\r\n",
        "description": "AWS::DAX::ParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html"
    },
    "AWS::IoT::SecurityProfile": {
        "prefix": "iot-securityprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::SecurityProfile\"\r\n\tProperties:\r\n\t\tSecurityProfileName: String\r\n\t\tSecurityProfileDescription: String\r\n\t\tBehaviors:\r\n\t\t\t- Behavior\r\n\t\tAlertTargets:\r\n\t\t\tMap\r\n\t\tAdditionalMetricsToRetainV2:\r\n\t\t\t- MetricToRetain\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTargetArns:\r\n\t\t\t- String\r\n",
        "description": "AWS::IoT::SecurityProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html"
    },
    "AWS::S3::StorageLens": {
        "prefix": "s3-storagelens",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::StorageLens\"\r\n\tProperties:\r\n\t\tStorageLensConfiguration: #required\r\n\t\t\tStorageLensConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::S3::StorageLens\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html"
    },
    "AWS::CloudFront::Distribution": {
        "prefix": "cloudfront-distribution",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::Distribution\"\r\n\tProperties:\r\n\t\tDistributionConfig: #required\r\n\t\t\tDistributionConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CloudFront::Distribution\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html"
    },
    "AWS::Redshift::ClusterParameterGroup": {
        "prefix": "redshift-clusterparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tParameterGroupFamily: String #required\r\n\t\tParameters:\r\n\t\t\t- Parameter\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Redshift::ClusterParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html"
    },
    "AWS::ElastiCache::UserGroup": {
        "prefix": "elasticache-usergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::UserGroup\"\r\n\tProperties:\r\n\t\tUserGroupId: String #required\r\n\t\tEngine: String #required\r\n\t\tUserIds:\r\n\t\t\t- String\r\n",
        "description": "AWS::ElastiCache::UserGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html"
    },
    "AWS::EMR::InstanceGroupConfig": {
        "prefix": "emr-instancegroupconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::InstanceGroupConfig\"\r\n\tProperties:\r\n\t\tAutoScalingPolicy:\r\n\t\t\tAutoScalingPolicy\r\n\t\tBidPrice: String\r\n\t\tConfigurations:\r\n\t\t\t- Configuration\r\n\t\tCustomAmiId: String\r\n\t\tEbsConfiguration:\r\n\t\t\tEbsConfiguration\r\n\t\tInstanceCount: Integer #required\r\n\t\tInstanceRole: String #required\r\n\t\tInstanceType: String #required\r\n\t\tJobFlowId: String #required\r\n\t\tMarket: String\r\n\t\tName: String\r\n",
        "description": "AWS::EMR::InstanceGroupConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html"
    },
    "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "prefix": "elasticloadbalancingv2-listenerrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::ListenerRule\"\r\n\tProperties:\r\n\t\tListenerArn: String #required\r\n\t\tActions: #required\r\n\t\t\t- Action\r\n\t\tPriority: Integer #required\r\n\t\tConditions: #required\r\n\t\t\t- RuleCondition\r\n",
        "description": "AWS::ElasticLoadBalancingV2::ListenerRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html"
    },
    "AWS::CodePipeline::Pipeline": {
        "prefix": "codepipeline-pipeline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::Pipeline\"\r\n\tProperties:\r\n\t\tArtifactStore:\r\n\t\t\tArtifactStore\r\n\t\tArtifactStores:\r\n\t\t\t- ArtifactStoreMap\r\n\t\tDisableInboundStageTransitions:\r\n\t\t\t- StageTransition\r\n\t\tName: String\r\n\t\tRestartExecutionOnUpdate: Boolean\r\n\t\tRoleArn: String #required\r\n\t\tStages: #required\r\n\t\t\t- StageDeclaration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodePipeline::Pipeline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html"
    },
    "AWS::Lightsail::LoadBalancer": {
        "prefix": "lightsail-loadbalancer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::LoadBalancer\"\r\n\tProperties:\r\n\t\tLoadBalancerName: String #required\r\n\t\tInstancePort: Integer #required\r\n\t\tIpAddressType: String\r\n\t\tAttachedInstances:\r\n\t\t\t- String\r\n\t\tHealthCheckPath: String\r\n\t\tSessionStickinessEnabled: Boolean\r\n\t\tSessionStickinessLBCookieDurationSeconds: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::LoadBalancer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html"
    },
    "AWS::MediaConnect::FlowEntitlement": {
        "prefix": "mediaconnect-flowentitlement",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConnect::FlowEntitlement\"\r\n\tProperties:\r\n\t\tFlowArn: String #required\r\n\t\tDataTransferSubscriberFeePercent: Integer\r\n\t\tDescription: String #required\r\n\t\tEncryption:\r\n\t\t\tEncryption\r\n\t\tEntitlementStatus: String\r\n\t\tName: String #required\r\n\t\tSubscribers: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::MediaConnect::FlowEntitlement\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html"
    },
    "AWS::IoT::TopicRule": {
        "prefix": "iot-topicrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::TopicRule\"\r\n\tProperties:\r\n\t\tRuleName: String\r\n\t\tTopicRulePayload: #required\r\n\t\t\tTopicRulePayload\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::TopicRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html"
    },
    "AWS::WAFRegional::WebACLAssociation": {
        "prefix": "wafregional-webaclassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::WebACLAssociation\"\r\n\tProperties:\r\n\t\tResourceArn: String #required\r\n\t\tWebACLId: String #required\r\n",
        "description": "AWS::WAFRegional::WebACLAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html"
    },
    "AWS::SSMContacts::Contact": {
        "prefix": "ssmcontacts-contact",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSMContacts::Contact\"\r\n\tProperties:\r\n\t\tAlias: String #required\r\n\t\tDisplayName: String #required\r\n\t\tType: String #required\r\n\t\tPlan: #required\r\n\t\t\t- Stage\r\n",
        "description": "AWS::SSMContacts::Contact\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html"
    },
    "AWS::ServiceCatalog::CloudFormationProduct": {
        "prefix": "servicecatalog-cloudformationproduct",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::CloudFormationProduct\"\r\n\tProperties:\r\n\t\tReplaceProvisioningArtifacts: Boolean\r\n\t\tOwner: String #required\r\n\t\tSupportDescription: String\r\n\t\tDescription: String\r\n\t\tDistributor: String\r\n\t\tSupportEmail: String\r\n\t\tAcceptLanguage: String\r\n\t\tSupportUrl: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n\t\tProvisioningArtifactParameters: #required\r\n\t\t\t- ProvisioningArtifactProperties\r\n",
        "description": "AWS::ServiceCatalog::CloudFormationProduct\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html"
    },
    "AWS::GreengrassV2::ComponentVersion": {
        "prefix": "greengrassv2-componentversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GreengrassV2::ComponentVersion\"\r\n\tProperties:\r\n\t\tInlineRecipe: String\r\n\t\tLambdaFunction:\r\n\t\t\tLambdaFunctionRecipeSource\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::GreengrassV2::ComponentVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html"
    },
    "AWS::IoTAnalytics::Channel": {
        "prefix": "iotanalytics-channel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Channel\"\r\n\tProperties:\r\n\t\tChannelStorage:\r\n\t\t\tChannelStorage\r\n\t\tChannelName: String\r\n\t\tRetentionPeriod:\r\n\t\t\tRetentionPeriod\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTAnalytics::Channel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html"
    },
    "AWS::Amplify::App": {
        "prefix": "amplify-app",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::App\"\r\n\tProperties:\r\n\t\tAccessToken: String\r\n\t\tAutoBranchCreationConfig:\r\n\t\t\tAutoBranchCreationConfig\r\n\t\tBasicAuthConfig:\r\n\t\t\tBasicAuthConfig\r\n\t\tBuildSpec: String\r\n\t\tCustomHeaders: String\r\n\t\tCustomRules:\r\n\t\t\t- CustomRule\r\n\t\tDescription: String\r\n\t\tEnableBranchAutoDeletion: Boolean\r\n\t\tEnvironmentVariables:\r\n\t\t\t- EnvironmentVariable\r\n\t\tIAMServiceRole: String\r\n\t\tName: String #required\r\n\t\tOauthToken: String\r\n\t\tRepository: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Amplify::App\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html"
    },
    "AWS::CloudWatch::AnomalyDetector": {
        "prefix": "cloudwatch-anomalydetector",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::AnomalyDetector\"\r\n\tProperties:\r\n\t\tMetricName: String\r\n\t\tStat: String\r\n\t\tConfiguration:\r\n\t\t\tConfiguration\r\n\t\tMetricMathAnomalyDetector:\r\n\t\t\tMetricMathAnomalyDetector\r\n\t\tDimensions:\r\n\t\t\t- Dimension\r\n\t\tNamespace: String\r\n\t\tSingleMetricAnomalyDetector:\r\n\t\t\tSingleMetricAnomalyDetector\r\n",
        "description": "AWS::CloudWatch::AnomalyDetector\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html"
    },
    "AWS::Cloud9::EnvironmentEC2": {
        "prefix": "cloud9-environmentec2",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cloud9::EnvironmentEC2\"\r\n\tProperties:\r\n\t\tRepositories:\r\n\t\t\t- Repository\r\n\t\tOwnerArn: String\r\n\t\tDescription: String\r\n\t\tConnectionType: String\r\n\t\tAutomaticStopTimeMinutes: Integer\r\n\t\tImageId: String\r\n\t\tSubnetId: String\r\n\t\tInstanceType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::Cloud9::EnvironmentEC2\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html"
    },
    "AWS::CloudFormation::HookTypeConfig": {
        "prefix": "cloudformation-hooktypeconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::HookTypeConfig\"\r\n\tProperties:\r\n\t\tTypeArn: String\r\n\t\tTypeName: String\r\n\t\tConfiguration: String #required\r\n\t\tConfigurationAlias: String\r\n",
        "description": "AWS::CloudFormation::HookTypeConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html"
    },
    "AWS::SageMaker::ModelBiasJobDefinition": {
        "prefix": "sagemaker-modelbiasjobdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::ModelBiasJobDefinition\"\r\n\tProperties:\r\n\t\tJobDefinitionName: String\r\n\t\tModelBiasBaselineConfig:\r\n\t\t\tModelBiasBaselineConfig\r\n\t\tModelBiasAppSpecification: #required\r\n\t\t\tModelBiasAppSpecification\r\n\t\tModelBiasJobInput: #required\r\n\t\t\tModelBiasJobInput\r\n\t\tModelBiasJobOutputConfig: #required\r\n\t\t\tMonitoringOutputConfig\r\n\t\tJobResources: #required\r\n\t\t\tMonitoringResources\r\n\t\tNetworkConfig:\r\n\t\t\tNetworkConfig\r\n\t\tRoleArn: String #required\r\n\t\tStoppingCondition:\r\n\t\t\tStoppingCondition\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::ModelBiasJobDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html"
    },
    "AWS::Location::GeofenceCollection": {
        "prefix": "location-geofencecollection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::GeofenceCollection\"\r\n\tProperties:\r\n\t\tCollectionName: String #required\r\n\t\tDescription: String\r\n\t\tKmsKeyId: String\r\n\t\tPricingPlan: String\r\n\t\tPricingPlanDataSource: String\r\n",
        "description": "AWS::Location::GeofenceCollection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html"
    },
    "AWS::Lex::Bot": {
        "prefix": "lex-bot",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lex::Bot\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tRoleArn: String #required\r\n\t\tDataPrivacy: Json #required\r\n\t\tIdleSessionTTLInSeconds: Integer #required\r\n\t\tBotLocales:\r\n\t\t\t- BotLocale\r\n\t\tBotFileS3Location:\r\n\t\t\tS3Location\r\n\t\tBotTags:\r\n\t\t\t- Tag\r\n\t\tTestBotAliasTags:\r\n\t\t\t- Tag\r\n\t\tAutoBuildBotLocales: Boolean\r\n",
        "description": "AWS::Lex::Bot\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html"
    },
    "AWS::AppSync::ApiKey": {
        "prefix": "appsync-apikey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::ApiKey\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tApiKeyId: String\r\n\t\tExpires: Double\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::AppSync::ApiKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html"
    },
    "AWS::Route53::HostedZone": {
        "prefix": "route53-hostedzone",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::HostedZone\"\r\n\tProperties:\r\n\t\tHostedZoneConfig:\r\n\t\t\tHostedZoneConfig\r\n\t\tHostedZoneTags:\r\n\t\t\t- HostedZoneTag\r\n\t\tName: String\r\n\t\tQueryLoggingConfig:\r\n\t\t\tQueryLoggingConfig\r\n\t\tVPCs:\r\n\t\t\t- VPC\r\n",
        "description": "AWS::Route53::HostedZone\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html"
    },
    "AWS::Pinpoint::EmailTemplate": {
        "prefix": "pinpoint-emailtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EmailTemplate\"\r\n\tProperties:\r\n\t\tHtmlPart: String\r\n\t\tTextPart: String\r\n\t\tTemplateName: String #required\r\n\t\tTemplateDescription: String\r\n\t\tDefaultSubstitutions: String\r\n\t\tSubject: String #required\r\n\t\tTags: Json\r\n",
        "description": "AWS::Pinpoint::EmailTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html"
    },
    "AWS::ServiceCatalog::PortfolioProductAssociation": {
        "prefix": "servicecatalog-portfolioproductassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioProductAssociation\"\r\n\tProperties:\r\n\t\tSourcePortfolioId: String\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n",
        "description": "AWS::ServiceCatalog::PortfolioProductAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html"
    },
    "AWS::EC2::TransitGatewayMulticastDomainAssociation": {
        "prefix": "ec2-transitgatewaymulticastdomainassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayMulticastDomainAssociation\"\r\n\tProperties:\r\n\t\tTransitGatewayMulticastDomainId: String #required\r\n\t\tTransitGatewayAttachmentId: String #required\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EC2::TransitGatewayMulticastDomainAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html"
    },
    "AWS::IoTWireless::ServiceProfile": {
        "prefix": "iotwireless-serviceprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::ServiceProfile\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tLoRaWAN:\r\n\t\t\tLoRaWANServiceProfile\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTWireless::ServiceProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html"
    },
    "AWS::MediaConvert::JobTemplate": {
        "prefix": "mediaconvert-jobtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::JobTemplate\"\r\n\tProperties:\r\n\t\tCategory: String\r\n\t\tDescription: String\r\n\t\tAccelerationSettings:\r\n\t\t\tAccelerationSettings\r\n\t\tPriority: Integer\r\n\t\tStatusUpdateInterval: String\r\n\t\tSettingsJson: Json #required\r\n\t\tQueue: String\r\n\t\tHopDestinations:\r\n\t\t\t- HopDestination\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::MediaConvert::JobTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html"
    },
    "AWS::EKS::Cluster": {
        "prefix": "eks-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::Cluster\"\r\n\tProperties:\r\n\t\tEncryptionConfig:\r\n\t\t\t- EncryptionConfig\r\n\t\tKubernetesNetworkConfig:\r\n\t\t\tKubernetesNetworkConfig\r\n\t\tLogging:\r\n\t\t\tLogging\r\n\t\tName: String\r\n\t\tResourcesVpcConfig: #required\r\n\t\t\tResourcesVpcConfig\r\n\t\tRoleArn: String #required\r\n\t\tVersion: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EKS::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html"
    },
    "AWS::Connect::HoursOfOperation": {
        "prefix": "connect-hoursofoperation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::HoursOfOperation\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tTimeZone: String #required\r\n\t\tConfig: #required\r\n\t\t\t- HoursOfOperationConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Connect::HoursOfOperation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html"
    },
    "AWS::DocDB::DBCluster": {
        "prefix": "docdb-dbcluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBCluster\"\r\n\tProperties:\r\n\t\tStorageEncrypted: Boolean\r\n\t\tEngineVersion: String\r\n\t\tKmsKeyId: String\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tSnapshotIdentifier: String\r\n\t\tPort: Integer\r\n\t\tDBClusterIdentifier: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tDBSubnetGroupName: String\r\n\t\tDeletionProtection: Boolean\r\n\t\tPreferredBackupWindow: String\r\n\t\tMasterUserPassword: String #required\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tMasterUsername: String #required\r\n\t\tDBClusterParameterGroupName: String\r\n\t\tCopyTagsToSnapshot: Boolean\r\n\t\tBackupRetentionPeriod: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- String\r\n",
        "description": "AWS::DocDB::DBCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html"
    },
    "AWS::CloudWatch::CompositeAlarm": {
        "prefix": "cloudwatch-compositealarm",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::CompositeAlarm\"\r\n\tProperties:\r\n\t\tAlarmName: String #required\r\n\t\tAlarmRule: String #required\r\n\t\tAlarmDescription: String\r\n\t\tActionsEnabled: Boolean\r\n\t\tOKActions:\r\n\t\t\t- String\r\n\t\tAlarmActions:\r\n\t\t\t- String\r\n\t\tInsufficientDataActions:\r\n\t\t\t- String\r\n",
        "description": "AWS::CloudWatch::CompositeAlarm\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html"
    },
    "AWS::RDS::GlobalCluster": {
        "prefix": "rds-globalcluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::GlobalCluster\"\r\n\tProperties:\r\n\t\tEngine: String\r\n\t\tEngineVersion: String\r\n\t\tDeletionProtection: Boolean\r\n\t\tGlobalClusterIdentifier: String\r\n\t\tSourceDBClusterIdentifier: String\r\n\t\tStorageEncrypted: Boolean\r\n",
        "description": "AWS::RDS::GlobalCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html"
    },
    "AWS::DAX::Cluster": {
        "prefix": "dax-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::Cluster\"\r\n\tProperties:\r\n\t\tSSESpecification:\r\n\t\t\tSSESpecification\r\n\t\tDescription: String\r\n\t\tReplicationFactor: Integer #required\r\n\t\tParameterGroupName: String\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tIAMRoleARN: String #required\r\n\t\tSubnetGroupName: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tClusterEndpointEncryptionType: String\r\n\t\tNotificationTopicARN: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tNodeType: String #required\r\n\t\tClusterName: String\r\n\t\tTags: Json\r\n",
        "description": "AWS::DAX::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html"
    },
    "AWS::SSM::PatchBaseline": {
        "prefix": "ssm-patchbaseline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::PatchBaseline\"\r\n\tProperties:\r\n\t\tOperatingSystem: String\r\n\t\tDescription: String\r\n\t\tApprovalRules:\r\n\t\t\tRuleGroup\r\n\t\tSources:\r\n\t\t\t- PatchSource\r\n\t\tName: String #required\r\n\t\tRejectedPatches:\r\n\t\t\t- String\r\n\t\tApprovedPatches:\r\n\t\t\t- String\r\n\t\tRejectedPatchesAction: String\r\n\t\tPatchGroups:\r\n\t\t\t- String\r\n\t\tApprovedPatchesComplianceLevel: String\r\n\t\tApprovedPatchesEnableNonSecurity: Boolean\r\n\t\tGlobalFilters:\r\n\t\t\tPatchFilterGroup\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SSM::PatchBaseline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html"
    },
    "AWS::DataSync::LocationHDFS": {
        "prefix": "datasync-locationhdfs",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationHDFS\"\r\n\tProperties:\r\n\t\tNameNodes: #required\r\n\t\t\t- NameNode\r\n\t\tBlockSize: Integer\r\n\t\tReplicationFactor: Integer\r\n\t\tKmsKeyProviderUri: String\r\n\t\tQopConfiguration:\r\n\t\t\tQopConfiguration\r\n\t\tAuthenticationType: String #required\r\n\t\tSimpleUser: String\r\n\t\tKerberosPrincipal: String\r\n\t\tKerberosKeytab: String\r\n\t\tKerberosKrb5Conf: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAgentArns: #required\r\n\t\t\t- String\r\n\t\tSubdirectory: String\r\n",
        "description": "AWS::DataSync::LocationHDFS\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html"
    },
    "AWS::IoT::DomainConfiguration": {
        "prefix": "iot-domainconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::DomainConfiguration\"\r\n\tProperties:\r\n\t\tDomainConfigurationName: String\r\n\t\tAuthorizerConfig:\r\n\t\t\tAuthorizerConfig\r\n\t\tDomainName: String\r\n\t\tServerCertificateArns:\r\n\t\t\t- String\r\n\t\tServiceType: String\r\n\t\tValidationCertificateArn: String\r\n\t\tDomainConfigurationStatus: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::DomainConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html"
    },
    "AWS::RefactorSpaces::Service": {
        "prefix": "refactorspaces-service",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RefactorSpaces::Service\"\r\n\tProperties:\r\n\t\tApplicationIdentifier: String #required\r\n\t\tDescription: String\r\n\t\tEndpointType: String\r\n\t\tEnvironmentIdentifier: String #required\r\n\t\tLambdaEndpoint:\r\n\t\t\tLambdaEndpointInput\r\n\t\tName: String\r\n\t\tUrlEndpoint:\r\n\t\t\tUrlEndpointInput\r\n\t\tVpcId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RefactorSpaces::Service\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html"
    },
    "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": {
        "prefix": "kinesisanalyticsv2-applicationcloudwatchloggingoption",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tCloudWatchLoggingOption: #required\r\n\t\t\tCloudWatchLoggingOption\r\n",
        "description": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html"
    },
    "AWS::GuardDuty::Member": {
        "prefix": "guardduty-member",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Member\"\r\n\tProperties:\r\n\t\tStatus: String\r\n\t\tMemberId: String #required\r\n\t\tEmail: String #required\r\n\t\tMessage: String\r\n\t\tDisableEmailNotification: Boolean\r\n\t\tDetectorId: String #required\r\n",
        "description": "AWS::GuardDuty::Member\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html"
    },
    "AWS::ServiceDiscovery::Service": {
        "prefix": "servicediscovery-service",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::Service\"\r\n\tProperties:\r\n\t\tType: String\r\n\t\tDescription: String\r\n\t\tHealthCheckCustomConfig:\r\n\t\t\tHealthCheckCustomConfig\r\n\t\tDnsConfig:\r\n\t\t\tDnsConfig\r\n\t\tNamespaceId: String\r\n\t\tHealthCheckConfig:\r\n\t\t\tHealthCheckConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::ServiceDiscovery::Service\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html"
    },
    "AWS::ServiceCatalog::AcceptedPortfolioShare": {
        "prefix": "servicecatalog-acceptedportfolioshare",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::AcceptedPortfolioShare\"\r\n\tProperties:\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n",
        "description": "AWS::ServiceCatalog::AcceptedPortfolioShare\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html"
    },
    "AWS::IoTWireless::WirelessDevice": {
        "prefix": "iotwireless-wirelessdevice",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::WirelessDevice\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tDestinationName: String #required\r\n\t\tLoRaWAN:\r\n\t\t\tLoRaWANDevice\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThingArn: String\r\n\t\tLastUplinkReceivedAt: String\r\n",
        "description": "AWS::IoTWireless::WirelessDevice\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html"
    },
    "AWS::RoboMaker::SimulationApplicationVersion": {
        "prefix": "robomaker-simulationapplicationversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::SimulationApplicationVersion\"\r\n\tProperties:\r\n\t\tCurrentRevisionId: String\r\n\t\tApplication: String #required\r\n",
        "description": "AWS::RoboMaker::SimulationApplicationVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html"
    },
    "AWS::AutoScaling::ScalingPolicy": {
        "prefix": "autoscaling-scalingpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::ScalingPolicy\"\r\n\tProperties:\r\n\t\tAdjustmentType: String\r\n\t\tAutoScalingGroupName: String #required\r\n\t\tCooldown: String\r\n\t\tEstimatedInstanceWarmup: Integer\r\n\t\tMetricAggregationType: String\r\n\t\tMinAdjustmentMagnitude: Integer\r\n\t\tPolicyType: String\r\n\t\tPredictiveScalingConfiguration:\r\n\t\t\tPredictiveScalingConfiguration\r\n\t\tScalingAdjustment: Integer\r\n\t\tStepAdjustments:\r\n\t\t\t- StepAdjustment\r\n\t\tTargetTrackingConfiguration:\r\n\t\t\tTargetTrackingConfiguration\r\n",
        "description": "AWS::AutoScaling::ScalingPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html"
    },
    "AWS::Backup::BackupVault": {
        "prefix": "backup-backupvault",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupVault\"\r\n\tProperties:\r\n\t\tAccessPolicy: Json\r\n\t\tBackupVaultName: String #required\r\n\t\tBackupVaultTags:\r\n\t\t\tMap\r\n\t\tEncryptionKeyArn: String\r\n\t\tNotifications:\r\n\t\t\tNotificationObjectType\r\n\t\tLockConfiguration:\r\n\t\t\tLockConfigurationType\r\n",
        "description": "AWS::Backup::BackupVault\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html"
    },
    "AWS::IoT::AccountAuditConfiguration": {
        "prefix": "iot-accountauditconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::AccountAuditConfiguration\"\r\n\tProperties:\r\n\t\tAccountId: String #required\r\n\t\tAuditCheckConfigurations: #required\r\n\t\t\tAuditCheckConfigurations\r\n\t\tAuditNotificationTargetConfigurations:\r\n\t\t\tAuditNotificationTargetConfigurations\r\n\t\tRoleArn: String #required\r\n",
        "description": "AWS::IoT::AccountAuditConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html"
    },
    "AWS::EC2::DHCPOptions": {
        "prefix": "ec2-dhcpoptions",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::DHCPOptions\"\r\n\tProperties:\r\n\t\tDomainName: String\r\n\t\tDomainNameServers:\r\n\t\t\t- String\r\n\t\tNetbiosNameServers:\r\n\t\t\t- String\r\n\t\tNetbiosNodeType: Integer\r\n\t\tNtpServers:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::DHCPOptions\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html"
    },
    "AWS::ApiGateway::UsagePlan": {
        "prefix": "apigateway-usageplan",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::UsagePlan\"\r\n\tProperties:\r\n\t\tApiStages:\r\n\t\t\t- ApiStage\r\n\t\tDescription: String\r\n\t\tQuota:\r\n\t\t\tQuotaSettings\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThrottle:\r\n\t\t\tThrottleSettings\r\n\t\tUsagePlanName: String\r\n",
        "description": "AWS::ApiGateway::UsagePlan\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html"
    },
    "AWS::SSMIncidents::ReplicationSet": {
        "prefix": "ssmincidents-replicationset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSMIncidents::ReplicationSet\"\r\n\tProperties:\r\n\t\tRegions: #required\r\n\t\t\t- ReplicationRegion\r\n\t\tDeletionProtected: Boolean\r\n",
        "description": "AWS::SSMIncidents::ReplicationSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html"
    },
    "AWS::IAM::User": {
        "prefix": "iam-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::User\"\r\n\tProperties:\r\n\t\tGroups:\r\n\t\t\t- String\r\n\t\tLoginProfile:\r\n\t\t\tLoginProfile\r\n\t\tManagedPolicyArns:\r\n\t\t\t- String\r\n\t\tPath: String\r\n\t\tPermissionsBoundary: String\r\n\t\tPolicies:\r\n\t\t\t- Policy\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUserName: String\r\n",
        "description": "AWS::IAM::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"
    },
    "AWS::SES::ConfigurationSet": {
        "prefix": "ses-configurationset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SES::ConfigurationSet\"\r\n\tProperties:\r\n\t\tName: String\r\n",
        "description": "AWS::SES::ConfigurationSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html"
    },
    "AWS::KMS::ReplicaKey": {
        "prefix": "kms-replicakey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KMS::ReplicaKey\"\r\n\tProperties:\r\n\t\tPrimaryKeyArn: String #required\r\n\t\tDescription: String\r\n\t\tEnabled: Boolean\r\n\t\tKeyPolicy: Json #required\r\n\t\tPendingWindowInDays: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::KMS::ReplicaKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html"
    },
    "AWS::Location::TrackerConsumer": {
        "prefix": "location-trackerconsumer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::TrackerConsumer\"\r\n\tProperties:\r\n\t\tConsumerArn: String #required\r\n\t\tTrackerName: String #required\r\n",
        "description": "AWS::Location::TrackerConsumer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html"
    },
    "AWS::CloudWatch::InsightRule": {
        "prefix": "cloudwatch-insightrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::InsightRule\"\r\n\tProperties:\r\n\t\tRuleState: String #required\r\n\t\tRuleBody: String #required\r\n\t\tRuleName: String #required\r\n\t\tTags:\r\n\t\t\tTags\r\n",
        "description": "AWS::CloudWatch::InsightRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html"
    },
    "AWS::Detective::MemberInvitation": {
        "prefix": "detective-memberinvitation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Detective::MemberInvitation\"\r\n\tProperties:\r\n\t\tGraphArn: String #required\r\n\t\tMemberId: String #required\r\n\t\tMemberEmailAddress: String #required\r\n\t\tDisableEmailNotification: Boolean\r\n\t\tMessage: String\r\n",
        "description": "AWS::Detective::MemberInvitation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html"
    },
    "AWS::IoTAnalytics::Datastore": {
        "prefix": "iotanalytics-datastore",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Datastore\"\r\n\tProperties:\r\n\t\tDatastoreStorage:\r\n\t\t\tDatastoreStorage\r\n\t\tDatastoreName: String\r\n\t\tDatastorePartitions:\r\n\t\t\tDatastorePartitions\r\n\t\tFileFormatConfiguration:\r\n\t\t\tFileFormatConfiguration\r\n\t\tRetentionPeriod:\r\n\t\t\tRetentionPeriod\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTAnalytics::Datastore\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html"
    },
    "AWS::S3::Bucket": {
        "prefix": "s3-bucket",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::Bucket\"\r\n\tProperties:\r\n\t\tAccelerateConfiguration:\r\n\t\t\tAccelerateConfiguration\r\n\t\tAccessControl: String\r\n\t\tAnalyticsConfigurations:\r\n\t\t\t- AnalyticsConfiguration\r\n\t\tBucketEncryption:\r\n\t\t\tBucketEncryption\r\n\t\tBucketName: String\r\n\t\tCorsConfiguration:\r\n\t\t\tCorsConfiguration\r\n\t\tIntelligentTieringConfigurations:\r\n\t\t\t- IntelligentTieringConfiguration\r\n\t\tInventoryConfigurations:\r\n\t\t\t- InventoryConfiguration\r\n\t\tLifecycleConfiguration:\r\n\t\t\tLifecycleConfiguration\r\n\t\tLoggingConfiguration:\r\n\t\t\tLoggingConfiguration\r\n\t\tMetricsConfigurations:\r\n\t\t\t- MetricsConfiguration\r\n\t\tNotificationConfiguration:\r\n\t\t\tNotificationConfiguration\r\n\t\tObjectLockConfiguration:\r\n\t\t\tObjectLockConfiguration\r\n\t\tObjectLockEnabled: Boolean\r\n\t\tOwnershipControls:\r\n\t\t\tOwnershipControls\r\n\t\tPublicAccessBlockConfiguration:\r\n\t\t\tPublicAccessBlockConfiguration\r\n\t\tReplicationConfiguration:\r\n\t\t\tReplicationConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVersioningConfiguration:\r\n\t\t\tVersioningConfiguration\r\n\t\tWebsiteConfiguration:\r\n\t\t\tWebsiteConfiguration\r\n",
        "description": "AWS::S3::Bucket\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
    },
    "AWS::SageMaker::ModelQualityJobDefinition": {
        "prefix": "sagemaker-modelqualityjobdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::ModelQualityJobDefinition\"\r\n\tProperties:\r\n\t\tJobDefinitionName: String\r\n\t\tModelQualityBaselineConfig:\r\n\t\t\tModelQualityBaselineConfig\r\n\t\tModelQualityAppSpecification: #required\r\n\t\t\tModelQualityAppSpecification\r\n\t\tModelQualityJobInput: #required\r\n\t\t\tModelQualityJobInput\r\n\t\tModelQualityJobOutputConfig: #required\r\n\t\t\tMonitoringOutputConfig\r\n\t\tJobResources: #required\r\n\t\t\tMonitoringResources\r\n\t\tNetworkConfig:\r\n\t\t\tNetworkConfig\r\n\t\tRoleArn: String #required\r\n\t\tStoppingCondition:\r\n\t\t\tStoppingCondition\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::ModelQualityJobDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html"
    },
    "AWS::Synthetics::Canary": {
        "prefix": "synthetics-canary",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Synthetics::Canary\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tCode: #required\r\n\t\t\tCode\r\n\t\tArtifactS3Location: String #required\r\n\t\tArtifactConfig:\r\n\t\t\tArtifactConfig\r\n\t\tSchedule: #required\r\n\t\t\tSchedule\r\n\t\tExecutionRoleArn: String #required\r\n\t\tRuntimeVersion: String #required\r\n\t\tSuccessRetentionPeriod: Integer\r\n\t\tFailureRetentionPeriod: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVPCConfig:\r\n\t\t\tVPCConfig\r\n\t\tRunConfig:\r\n\t\t\tRunConfig\r\n\t\tStartCanaryAfterCreation: Boolean #required\r\n\t\tVisualReference:\r\n\t\t\tVisualReference\r\n",
        "description": "AWS::Synthetics::Canary\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html"
    },
    "AWS::DataBrew::Recipe": {
        "prefix": "databrew-recipe",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Recipe\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String #required\r\n\t\tSteps: #required\r\n\t\t\t- RecipeStep\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataBrew::Recipe\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html"
    },
    "AWS::SageMaker::NotebookInstance": {
        "prefix": "sagemaker-notebookinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::NotebookInstance\"\r\n\tProperties:\r\n\t\tKmsKeyId: String\r\n\t\tVolumeSizeInGB: Integer\r\n\t\tAdditionalCodeRepositories:\r\n\t\t\t- String\r\n\t\tDefaultCodeRepository: String\r\n\t\tDirectInternetAccess: String\r\n\t\tPlatformIdentifier: String\r\n\t\tAcceleratorTypes:\r\n\t\t\t- String\r\n\t\tSubnetId: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tRoleArn: String #required\r\n\t\tRootAccess: String\r\n\t\tNotebookInstanceName: String\r\n\t\tInstanceType: String #required\r\n\t\tLifecycleConfigName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::NotebookInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html"
    },
    "AWS::Pinpoint::BaiduChannel": {
        "prefix": "pinpoint-baiduchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::BaiduChannel\"\r\n\tProperties:\r\n\t\tSecretKey: String #required\r\n\t\tApiKey: String #required\r\n\t\tEnabled: Boolean\r\n\t\tApplicationId: String #required\r\n",
        "description": "AWS::Pinpoint::BaiduChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html"
    },
    "AWS::WAFv2::WebACLAssociation": {
        "prefix": "wafv2-webaclassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::WebACLAssociation\"\r\n\tProperties:\r\n\t\tResourceArn: String #required\r\n\t\tWebACLArn: String #required\r\n",
        "description": "AWS::WAFv2::WebACLAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html"
    },
    "AWS::Cognito::UserPool": {
        "prefix": "cognito-userpool",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPool\"\r\n\tProperties:\r\n\t\tUserPoolTags: Json\r\n\t\tPolicies:\r\n\t\t\tPolicies\r\n\t\tVerificationMessageTemplate:\r\n\t\t\tVerificationMessageTemplate\r\n\t\tMfaConfiguration: String\r\n\t\tSchema:\r\n\t\t\t- SchemaAttribute\r\n\t\tAdminCreateUserConfig:\r\n\t\t\tAdminCreateUserConfig\r\n\t\tSmsAuthenticationMessage: String\r\n\t\tUsernameConfiguration:\r\n\t\t\tUsernameConfiguration\r\n\t\tUserPoolName: String\r\n\t\tSmsVerificationMessage: String\r\n\t\tUserPoolAddOns:\r\n\t\t\tUserPoolAddOns\r\n\t\tEmailConfiguration:\r\n\t\t\tEmailConfiguration\r\n\t\tSmsConfiguration:\r\n\t\t\tSmsConfiguration\r\n\t\tAliasAttributes:\r\n\t\t\t- String\r\n\t\tEnabledMfas:\r\n\t\t\t- String\r\n\t\tEmailVerificationSubject: String\r\n\t\tLambdaConfig:\r\n\t\t\tLambdaConfig\r\n\t\tUsernameAttributes:\r\n\t\t\t- String\r\n\t\tAutoVerifiedAttributes:\r\n\t\t\t- String\r\n\t\tDeviceConfiguration:\r\n\t\t\tDeviceConfiguration\r\n\t\tEmailVerificationMessage: String\r\n\t\tAccountRecoverySetting:\r\n\t\t\tAccountRecoverySetting\r\n",
        "description": "AWS::Cognito::UserPool\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html"
    },
    "AWS::EC2::EgressOnlyInternetGateway": {
        "prefix": "ec2-egressonlyinternetgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EgressOnlyInternetGateway\"\r\n\tProperties:\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::EgressOnlyInternetGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html"
    },
    "AWS::Events::ApiDestination": {
        "prefix": "events-apidestination",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::ApiDestination\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tConnectionArn: String #required\r\n\t\tInvocationRateLimitPerSecond: Integer\r\n\t\tInvocationEndpoint: String #required\r\n\t\tHttpMethod: String #required\r\n",
        "description": "AWS::Events::ApiDestination\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html"
    },
    "AWS::ApiGatewayV2::Api": {
        "prefix": "apigatewayv2-api",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Api\"\r\n\tProperties:\r\n\t\tRouteSelectionExpression: String\r\n\t\tBodyS3Location:\r\n\t\t\tBodyS3Location\r\n\t\tDescription: String\r\n\t\tBasePath: String\r\n\t\tFailOnWarnings: Boolean\r\n\t\tDisableExecuteApiEndpoint: Boolean\r\n\t\tDisableSchemaValidation: Boolean\r\n\t\tName: String\r\n\t\tTarget: String\r\n\t\tCredentialsArn: String\r\n\t\tCorsConfiguration:\r\n\t\t\tCors\r\n\t\tVersion: String\r\n\t\tProtocolType: String\r\n\t\tRouteKey: String\r\n\t\tBody: Json\r\n\t\tTags: Json\r\n\t\tApiKeySelectionExpression: String\r\n",
        "description": "AWS::ApiGatewayV2::Api\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html"
    },
    "AWS::EC2::NetworkInterfaceAttachment": {
        "prefix": "ec2-networkinterfaceattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterfaceAttachment\"\r\n\tProperties:\r\n\t\tDeleteOnTermination: Boolean\r\n\t\tDeviceIndex: String #required\r\n\t\tInstanceId: String #required\r\n\t\tNetworkInterfaceId: String #required\r\n",
        "description": "AWS::EC2::NetworkInterfaceAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
    },
    "AWS::RoboMaker::RobotApplication": {
        "prefix": "robomaker-robotapplication",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::RobotApplication\"\r\n\tProperties:\r\n\t\tCurrentRevisionId: String\r\n\t\tRobotSoftwareSuite: #required\r\n\t\t\tRobotSoftwareSuite\r\n\t\tSources: #required\r\n\t\t\t- SourceConfig\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::RoboMaker::RobotApplication\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html"
    },
    "AWS::EC2::CustomerGateway": {
        "prefix": "ec2-customergateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CustomerGateway\"\r\n\tProperties:\r\n\t\tBgpAsn: Integer #required\r\n\t\tIpAddress: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String #required\r\n",
        "description": "AWS::EC2::CustomerGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
    },
    "AWS::IoTSiteWise::Asset": {
        "prefix": "iotsitewise-asset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Asset\"\r\n\tProperties:\r\n\t\tAssetModelId: String #required\r\n\t\tAssetName: String #required\r\n\t\tAssetProperties:\r\n\t\t\t- AssetProperty\r\n\t\tAssetHierarchies:\r\n\t\t\t- AssetHierarchy\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTSiteWise::Asset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html"
    },
    "AWS::CloudFormation::ResourceDefaultVersion": {
        "prefix": "cloudformation-resourcedefaultversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::ResourceDefaultVersion\"\r\n\tProperties:\r\n\t\tTypeVersionArn: String\r\n\t\tTypeName: String\r\n\t\tVersionId: String\r\n",
        "description": "AWS::CloudFormation::ResourceDefaultVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html"
    },
    "AWS::ECR::Repository": {
        "prefix": "ecr-repository",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECR::Repository\"\r\n\tProperties:\r\n\t\tLifecyclePolicy:\r\n\t\t\tLifecyclePolicy\r\n\t\tRepositoryName: String\r\n\t\tRepositoryPolicyText: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tImageTagMutability: String\r\n\t\tImageScanningConfiguration:\r\n\t\t\tImageScanningConfiguration\r\n\t\tEncryptionConfiguration:\r\n\t\t\tEncryptionConfiguration\r\n",
        "description": "AWS::ECR::Repository\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html"
    },
    "AWS::ApiGateway::GatewayResponse": {
        "prefix": "apigateway-gatewayresponse",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::GatewayResponse\"\r\n\tProperties:\r\n\t\tRestApiId: String #required\r\n\t\tResponseType: String #required\r\n\t\tStatusCode: String\r\n\t\tResponseParameters:\r\n\t\t\tMap\r\n\t\tResponseTemplates:\r\n\t\t\tMap\r\n",
        "description": "AWS::ApiGateway::GatewayResponse\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html"
    },
    "AWS::ApiGatewayV2::RouteResponse": {
        "prefix": "apigatewayv2-routeresponse",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::RouteResponse\"\r\n\tProperties:\r\n\t\tRouteResponseKey: String #required\r\n\t\tResponseParameters: Json\r\n\t\tRouteId: String #required\r\n\t\tModelSelectionExpression: String\r\n\t\tApiId: String #required\r\n\t\tResponseModels: Json\r\n",
        "description": "AWS::ApiGatewayV2::RouteResponse\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html"
    },
    "AWS::Greengrass::LoggerDefinitionVersion": {
        "prefix": "greengrass-loggerdefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::LoggerDefinitionVersion\"\r\n\tProperties:\r\n\t\tLoggerDefinitionId: String #required\r\n\t\tLoggers: #required\r\n\t\t\t- Logger\r\n",
        "description": "AWS::Greengrass::LoggerDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html"
    },
    "AWS::KMS::Alias": {
        "prefix": "kms-alias",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KMS::Alias\"\r\n\tProperties:\r\n\t\tAliasName: String #required\r\n\t\tTargetKeyId: String #required\r\n",
        "description": "AWS::KMS::Alias\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html"
    },
    "AWS::Redshift::ClusterSubnetGroup": {
        "prefix": "redshift-clustersubnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSubnetGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Redshift::ClusterSubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html"
    },
    "AWS::Pinpoint::GCMChannel": {
        "prefix": "pinpoint-gcmchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::GCMChannel\"\r\n\tProperties:\r\n\t\tApiKey: String #required\r\n\t\tEnabled: Boolean\r\n\t\tApplicationId: String #required\r\n",
        "description": "AWS::Pinpoint::GCMChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html"
    },
    "AWS::IoT::Authorizer": {
        "prefix": "iot-authorizer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Authorizer\"\r\n\tProperties:\r\n\t\tAuthorizerFunctionArn: String #required\r\n\t\tAuthorizerName: String\r\n\t\tSigningDisabled: Boolean\r\n\t\tStatus: String\r\n\t\tTokenKeyName: String\r\n\t\tTokenSigningPublicKeys:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::Authorizer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html"
    },
    "AWS::IAM::VirtualMFADevice": {
        "prefix": "iam-virtualmfadevice",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::VirtualMFADevice\"\r\n\tProperties:\r\n\t\tVirtualMfaDeviceName: String\r\n\t\tPath: String\r\n\t\tUsers: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IAM::VirtualMFADevice\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html"
    },
    "AWS::Glue::DevEndpoint": {
        "prefix": "glue-devendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::DevEndpoint\"\r\n\tProperties:\r\n\t\tExtraJarsS3Path: String\r\n\t\tPublicKey: String\r\n\t\tNumberOfNodes: Integer\r\n\t\tArguments: Json\r\n\t\tSubnetId: String\r\n\t\tPublicKeys:\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tRoleArn: String #required\r\n\t\tWorkerType: String\r\n\t\tEndpointName: String\r\n\t\tGlueVersion: String\r\n\t\tExtraPythonLibsS3Path: String\r\n\t\tSecurityConfiguration: String\r\n\t\tNumberOfWorkers: Integer\r\n\t\tTags: Json\r\n",
        "description": "AWS::Glue::DevEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html"
    },
    "AWS::CodeBuild::ReportGroup": {
        "prefix": "codebuild-reportgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::ReportGroup\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tExportConfig: #required\r\n\t\t\tReportExportConfig\r\n\t\tDeleteReports: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::CodeBuild::ReportGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html"
    },
    "AWS::OpsWorks::UserProfile": {
        "prefix": "opsworks-userprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::UserProfile\"\r\n\tProperties:\r\n\t\tAllowSelfManagement: Boolean\r\n\t\tIamUserArn: String #required\r\n\t\tSshPublicKey: String\r\n\t\tSshUsername: String\r\n",
        "description": "AWS::OpsWorks::UserProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html"
    },
    "AWS::FraudDetector::Detector": {
        "prefix": "frauddetector-detector",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::Detector\"\r\n\tProperties:\r\n\t\tDetectorId: String #required\r\n\t\tDetectorVersionStatus: String\r\n\t\tRuleExecutionMode: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n\t\tRules: #required\r\n\t\t\t- Rule\r\n\t\tEventType: #required\r\n\t\t\tEventType\r\n\t\tAssociatedModels:\r\n\t\t\t- Model\r\n",
        "description": "AWS::FraudDetector::Detector\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html"
    },
    "AWS::Neptune::DBSubnetGroup": {
        "prefix": "neptune-dbsubnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupName: String\r\n\t\tDBSubnetGroupDescription: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Neptune::DBSubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html"
    },
    "AWS::AppStream::User": {
        "prefix": "appstream-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::User\"\r\n\tProperties:\r\n\t\tUserName: String #required\r\n\t\tFirstName: String\r\n\t\tMessageAction: String\r\n\t\tLastName: String\r\n\t\tAuthenticationType: String #required\r\n",
        "description": "AWS::AppStream::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html"
    },
    "AWS::PinpointEmail::DedicatedIpPool": {
        "prefix": "pinpointemail-dedicatedippool",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::DedicatedIpPool\"\r\n\tProperties:\r\n\t\tPoolName: String\r\n\t\tTags:\r\n\t\t\t- Tags\r\n",
        "description": "AWS::PinpointEmail::DedicatedIpPool\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html"
    },
    "AWS::KinesisAnalyticsV2::Application": {
        "prefix": "kinesisanalyticsv2-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::Application\"\r\n\tProperties:\r\n\t\tApplicationName: String\r\n\t\tRuntimeEnvironment: String #required\r\n\t\tApplicationMode: String\r\n\t\tApplicationConfiguration:\r\n\t\t\tApplicationConfiguration\r\n\t\tApplicationDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tServiceExecutionRole: String #required\r\n",
        "description": "AWS::KinesisAnalyticsV2::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html"
    },
    "AWS::Greengrass::FunctionDefinitionVersion": {
        "prefix": "greengrass-functiondefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::FunctionDefinitionVersion\"\r\n\tProperties:\r\n\t\tDefaultConfig:\r\n\t\t\tDefaultConfig\r\n\t\tFunctions: #required\r\n\t\t\t- Function\r\n\t\tFunctionDefinitionId: String #required\r\n",
        "description": "AWS::Greengrass::FunctionDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html"
    },
    "AWS::Redshift::ClusterSecurityGroup": {
        "prefix": "redshift-clustersecuritygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSecurityGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Redshift::ClusterSecurityGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html"
    },
    "AWS::Logs::Destination": {
        "prefix": "logs-destination",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::Destination\"\r\n\tProperties:\r\n\t\tDestinationName: String #required\r\n\t\tDestinationPolicy: String #required\r\n\t\tRoleArn: String #required\r\n\t\tTargetArn: String #required\r\n",
        "description": "AWS::Logs::Destination\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html"
    },
    "AWS::WAF::XssMatchSet": {
        "prefix": "waf-xssmatchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::XssMatchSet\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tXssMatchTuples: #required\r\n\t\t\t- XssMatchTuple\r\n",
        "description": "AWS::WAF::XssMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html"
    },
    "AWS::ResilienceHub::App": {
        "prefix": "resiliencehub-app",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ResilienceHub::App\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tResiliencyPolicyArn: String\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tAppTemplateBody: String #required\r\n\t\tResourceMappings: #required\r\n\t\t\t- ResourceMapping\r\n",
        "description": "AWS::ResilienceHub::App\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html"
    },
    "AWS::Transfer::Workflow": {
        "prefix": "transfer-workflow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Transfer::Workflow\"\r\n\tProperties:\r\n\t\tOnExceptionSteps:\r\n\t\t\t- WorkflowStep\r\n\t\tSteps: #required\r\n\t\t\t- WorkflowStep\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n",
        "description": "AWS::Transfer::Workflow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html"
    },
    "AWS::MediaPackage::Channel": {
        "prefix": "mediapackage-channel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::Channel\"\r\n\tProperties:\r\n\t\tId: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEgressAccessLogs:\r\n\t\t\tLogConfiguration\r\n\t\tIngressAccessLogs:\r\n\t\t\tLogConfiguration\r\n",
        "description": "AWS::MediaPackage::Channel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html"
    },
    "AWS::Neptune::DBInstance": {
        "prefix": "neptune-dbinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBInstance\"\r\n\tProperties:\r\n\t\tDBParameterGroupName: String\r\n\t\tDBInstanceClass: String #required\r\n\t\tAllowMajorVersionUpgrade: Boolean\r\n\t\tDBClusterIdentifier: String\r\n\t\tAvailabilityZone: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tDBSubnetGroupName: String\r\n\t\tDBInstanceIdentifier: String\r\n\t\tDBSnapshotIdentifier: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Neptune::DBInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html"
    },
    "AWS::Glue::SchemaVersionMetadata": {
        "prefix": "glue-schemaversionmetadata",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SchemaVersionMetadata\"\r\n\tProperties:\r\n\t\tSchemaVersionId: String #required\r\n\t\tKey: String #required\r\n\t\tValue: String #required\r\n",
        "description": "AWS::Glue::SchemaVersionMetadata\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html"
    },
    "AWS::Kinesis::StreamConsumer": {
        "prefix": "kinesis-streamconsumer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kinesis::StreamConsumer\"\r\n\tProperties:\r\n\t\tConsumerName: String #required\r\n\t\tStreamARN: String #required\r\n",
        "description": "AWS::Kinesis::StreamConsumer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html"
    },
    "AWS::NetworkFirewall::FirewallPolicy": {
        "prefix": "networkfirewall-firewallpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::FirewallPolicy\"\r\n\tProperties:\r\n\t\tFirewallPolicyName: String #required\r\n\t\tFirewallPolicy: #required\r\n\t\t\tFirewallPolicy\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::NetworkFirewall::FirewallPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html"
    },
    "AWS::GuardDuty::Master": {
        "prefix": "guardduty-master",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Master\"\r\n\tProperties:\r\n\t\tDetectorId: String #required\r\n\t\tMasterId: String #required\r\n\t\tInvitationId: String\r\n",
        "description": "AWS::GuardDuty::Master\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html"
    },
    "AWS::S3::BucketPolicy": {
        "prefix": "s3-bucketpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::BucketPolicy\"\r\n\tProperties:\r\n\t\tBucket: String #required\r\n\t\tPolicyDocument: Json #required\r\n",
        "description": "AWS::S3::BucketPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
    },
    "AWS::CloudFormation::CustomResource": {
        "prefix": "cloudformation-customresource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::CustomResource\"\r\n\tProperties:\r\n\t\tServiceToken: String #required\r\n",
        "description": "AWS::CloudFormation::CustomResource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html"
    },
    "AWS::EC2::ClientVpnRoute": {
        "prefix": "ec2-clientvpnroute",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnRoute\"\r\n\tProperties:\r\n\t\tClientVpnEndpointId: String #required\r\n\t\tTargetVpcSubnetId: String #required\r\n\t\tDescription: String\r\n\t\tDestinationCidrBlock: String #required\r\n",
        "description": "AWS::EC2::ClientVpnRoute\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html"
    },
    "AWS::EC2::IPAMScope": {
        "prefix": "ec2-ipamscope",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::IPAMScope\"\r\n\tProperties:\r\n\t\tIpamId: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::IPAMScope\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html"
    },
    "AWS::ServiceCatalog::ServiceAction": {
        "prefix": "servicecatalog-serviceaction",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::ServiceAction\"\r\n\tProperties:\r\n\t\tAcceptLanguage: String\r\n\t\tName: String #required\r\n\t\tDefinitionType: String #required\r\n\t\tDefinition: #required\r\n\t\t\t- DefinitionParameter\r\n\t\tDescription: String\r\n",
        "description": "AWS::ServiceCatalog::ServiceAction\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html"
    },
    "AWS::SSM::MaintenanceWindowTask": {
        "prefix": "ssm-maintenancewindowtask",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindowTask\"\r\n\tProperties:\r\n\t\tMaxErrors: String\r\n\t\tDescription: String\r\n\t\tServiceRoleArn: String\r\n\t\tPriority: Integer #required\r\n\t\tMaxConcurrency: String\r\n\t\tTargets:\r\n\t\t\t- Target\r\n\t\tName: String\r\n\t\tTaskArn: String #required\r\n\t\tTaskInvocationParameters:\r\n\t\t\tTaskInvocationParameters\r\n\t\tWindowId: String #required\r\n\t\tTaskParameters: Json\r\n\t\tTaskType: String #required\r\n\t\tCutoffBehavior: String\r\n\t\tLoggingInfo:\r\n\t\t\tLoggingInfo\r\n",
        "description": "AWS::SSM::MaintenanceWindowTask\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html"
    },
    "AWS::Kendra::DataSource": {
        "prefix": "kendra-datasource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::DataSource\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tIndexId: String #required\r\n\t\tType: String #required\r\n\t\tDataSourceConfiguration:\r\n\t\t\tDataSourceConfiguration\r\n\t\tDescription: String\r\n\t\tSchedule: String\r\n\t\tRoleArn: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Kendra::DataSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html"
    },
    "AWS::Panorama::Package": {
        "prefix": "panorama-package",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Panorama::Package\"\r\n\tProperties:\r\n\t\tPackageName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Panorama::Package\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html"
    },
    "AWS::Glue::MLTransform": {
        "prefix": "glue-mltransform",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::MLTransform\"\r\n\tProperties:\r\n\t\tMaxRetries: Integer\r\n\t\tDescription: String\r\n\t\tTransformEncryption:\r\n\t\t\tTransformEncryption\r\n\t\tTimeout: Integer\r\n\t\tName: String\r\n\t\tRole: String #required\r\n\t\tWorkerType: String\r\n\t\tGlueVersion: String\r\n\t\tTransformParameters: #required\r\n\t\t\tTransformParameters\r\n\t\tInputRecordTables: #required\r\n\t\t\tInputRecordTables\r\n\t\tNumberOfWorkers: Integer\r\n\t\tTags: Json\r\n\t\tMaxCapacity: Double\r\n",
        "description": "AWS::Glue::MLTransform\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html"
    },
    "AWS::ApiGateway::UsagePlanKey": {
        "prefix": "apigateway-usageplankey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::UsagePlanKey\"\r\n\tProperties:\r\n\t\tKeyId: String #required\r\n\t\tKeyType: String #required\r\n\t\tUsagePlanId: String #required\r\n",
        "description": "AWS::ApiGateway::UsagePlanKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html"
    },
    "AWS::EMR::SecurityConfiguration": {
        "prefix": "emr-securityconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::SecurityConfiguration\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tSecurityConfiguration: Json #required\r\n",
        "description": "AWS::EMR::SecurityConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html"
    },
    "AWS::CodeGuruReviewer::RepositoryAssociation": {
        "prefix": "codegurureviewer-repositoryassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeGuruReviewer::RepositoryAssociation\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tType: String #required\r\n\t\tOwner: String\r\n\t\tBucketName: String\r\n\t\tConnectionArn: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeGuruReviewer::RepositoryAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html"
    },
    "AWS::Cognito::UserPoolUserToGroupAttachment": {
        "prefix": "cognito-userpoolusertogroupattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUserToGroupAttachment\"\r\n\tProperties:\r\n\t\tGroupName: String #required\r\n\t\tUserPoolId: String #required\r\n\t\tUsername: String #required\r\n",
        "description": "AWS::Cognito::UserPoolUserToGroupAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html"
    },
    "AWS::Pinpoint::APNSChannel": {
        "prefix": "pinpoint-apnschannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSChannel\"\r\n\tProperties:\r\n\t\tBundleId: String\r\n\t\tPrivateKey: String\r\n\t\tEnabled: Boolean\r\n\t\tDefaultAuthenticationMethod: String\r\n\t\tTokenKey: String\r\n\t\tApplicationId: String #required\r\n\t\tTeamId: String\r\n\t\tCertificate: String\r\n\t\tTokenKeyId: String\r\n",
        "description": "AWS::Pinpoint::APNSChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html"
    },
    "AWS::IoTSiteWise::Dashboard": {
        "prefix": "iotsitewise-dashboard",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Dashboard\"\r\n\tProperties:\r\n\t\tProjectId: String\r\n\t\tDashboardName: String #required\r\n\t\tDashboardDescription: String #required\r\n\t\tDashboardDefinition: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTSiteWise::Dashboard\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html"
    },
    "AWS::RoboMaker::Fleet": {
        "prefix": "robomaker-fleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::Fleet\"\r\n\tProperties:\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::RoboMaker::Fleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html"
    },
    "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "prefix": "elasticbeanstalk-configurationtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::ConfigurationTemplate\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tDescription: String\r\n\t\tEnvironmentId: String\r\n\t\tOptionSettings:\r\n\t\t\t- ConfigurationOptionSetting\r\n\t\tPlatformArn: String\r\n\t\tSolutionStackName: String\r\n\t\tSourceConfiguration:\r\n\t\t\tSourceConfiguration\r\n",
        "description": "AWS::ElasticBeanstalk::ConfigurationTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html"
    },
    "AWS::WorkSpaces::ConnectionAlias": {
        "prefix": "workspaces-connectionalias",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WorkSpaces::ConnectionAlias\"\r\n\tProperties:\r\n\t\tConnectionString: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::WorkSpaces::ConnectionAlias\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html"
    },
    "AWS::PinpointEmail::Identity": {
        "prefix": "pinpointemail-identity",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::Identity\"\r\n\tProperties:\r\n\t\tFeedbackForwardingEnabled: Boolean\r\n\t\tDkimSigningEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n\t\tMailFromAttributes:\r\n\t\t\tMailFromAttributes\r\n",
        "description": "AWS::PinpointEmail::Identity\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html"
    },
    "AWS::Events::Rule": {
        "prefix": "events-rule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::Rule\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tEventBusName: String\r\n\t\tEventPattern: Json\r\n\t\tName: String\r\n\t\tRoleArn: String\r\n\t\tScheduleExpression: String\r\n\t\tState: String\r\n\t\tTargets:\r\n\t\t\t- Target\r\n",
        "description": "AWS::Events::Rule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html"
    },
    "AWS::ImageBuilder::Component": {
        "prefix": "imagebuilder-component",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::Component\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tVersion: String #required\r\n\t\tDescription: String\r\n\t\tChangeDescription: String\r\n\t\tPlatform: String #required\r\n\t\tData: String\r\n\t\tKmsKeyId: String\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tUri: String\r\n\t\tSupportedOsVersions:\r\n\t\t\t- String\r\n",
        "description": "AWS::ImageBuilder::Component\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html"
    },
    "AWS::SSMContacts::ContactChannel": {
        "prefix": "ssmcontacts-contactchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSMContacts::ContactChannel\"\r\n\tProperties:\r\n\t\tContactId: String #required\r\n\t\tChannelName: String #required\r\n\t\tChannelType: String #required\r\n\t\tDeferActivation: Boolean\r\n\t\tChannelAddress: String #required\r\n",
        "description": "AWS::SSMContacts::ContactChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html"
    },
    "AWS::CodePipeline::CustomActionType": {
        "prefix": "codepipeline-customactiontype",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::CustomActionType\"\r\n\tProperties:\r\n\t\tCategory: String #required\r\n\t\tConfigurationProperties:\r\n\t\t\t- ConfigurationProperties\r\n\t\tInputArtifactDetails: #required\r\n\t\t\tArtifactDetails\r\n\t\tOutputArtifactDetails: #required\r\n\t\t\tArtifactDetails\r\n\t\tProvider: String #required\r\n\t\tSettings:\r\n\t\t\tSettings\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVersion: String #required\r\n",
        "description": "AWS::CodePipeline::CustomActionType\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html"
    },
    "AWS::AppMesh::VirtualNode": {
        "prefix": "appmesh-virtualnode",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualNode\"\r\n\tProperties:\r\n\t\tMeshName: String #required\r\n\t\tMeshOwner: String\r\n\t\tSpec: #required\r\n\t\t\tVirtualNodeSpec\r\n\t\tVirtualNodeName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::VirtualNode\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html"
    },
    "AWS::AppMesh::VirtualRouter": {
        "prefix": "appmesh-virtualrouter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualRouter\"\r\n\tProperties:\r\n\t\tMeshName: String #required\r\n\t\tVirtualRouterName: String\r\n\t\tMeshOwner: String\r\n\t\tSpec: #required\r\n\t\t\tVirtualRouterSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::VirtualRouter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html"
    },
    "AWS::DataSync::Agent": {
        "prefix": "datasync-agent",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::Agent\"\r\n\tProperties:\r\n\t\tAgentName: String\r\n\t\tActivationKey: String #required\r\n\t\tSecurityGroupArns:\r\n\t\t\t- String\r\n\t\tSubnetArns:\r\n\t\t\t- String\r\n\t\tVpcEndpointId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::Agent\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html"
    },
    "AWS::Greengrass::ConnectorDefinition": {
        "prefix": "greengrass-connectordefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ConnectorDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tConnectorDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::ConnectorDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html"
    },
    "AWS::EC2::PlacementGroup": {
        "prefix": "ec2-placementgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::PlacementGroup\"\r\n\tProperties:\r\n\t\tStrategy: String\r\n",
        "description": "AWS::EC2::PlacementGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
    },
    "AWS::WAFRegional::SizeConstraintSet": {
        "prefix": "wafregional-sizeconstraintset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::SizeConstraintSet\"\r\n\tProperties:\r\n\t\tSizeConstraints:\r\n\t\t\t- SizeConstraint\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::SizeConstraintSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html"
    },
    "AWS::ApiGateway::RequestValidator": {
        "prefix": "apigateway-requestvalidator",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::RequestValidator\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tRestApiId: String #required\r\n\t\tValidateRequestBody: Boolean\r\n\t\tValidateRequestParameters: Boolean\r\n",
        "description": "AWS::ApiGateway::RequestValidator\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html"
    },
    "AWS::RDS::DBSecurityGroupIngress": {
        "prefix": "rds-dbsecuritygroupingress",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCIDRIP: String\r\n\t\tDBSecurityGroupName: String #required\r\n\t\tEC2SecurityGroupId: String\r\n\t\tEC2SecurityGroupName: String\r\n\t\tEC2SecurityGroupOwnerId: String\r\n",
        "description": "AWS::RDS::DBSecurityGroupIngress\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html"
    },
    "AWS::IoTThingsGraph::FlowTemplate": {
        "prefix": "iotthingsgraph-flowtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTThingsGraph::FlowTemplate\"\r\n\tProperties:\r\n\t\tCompatibleNamespaceVersion: Double\r\n\t\tDefinition: #required\r\n\t\t\tDefinitionDocument\r\n",
        "description": "AWS::IoTThingsGraph::FlowTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html"
    },
    "AWS::CodePipeline::Webhook": {
        "prefix": "codepipeline-webhook",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodePipeline::Webhook\"\r\n\tProperties:\r\n\t\tAuthenticationConfiguration: #required\r\n\t\t\tWebhookAuthConfiguration\r\n\t\tFilters: #required\r\n\t\t\t- WebhookFilterRule\r\n\t\tAuthentication: String #required\r\n\t\tTargetPipeline: String #required\r\n\t\tTargetAction: String #required\r\n\t\tName: String\r\n\t\tTargetPipelineVersion: Integer #required\r\n\t\tRegisterWithThirdParty: Boolean\r\n",
        "description": "AWS::CodePipeline::Webhook\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html"
    },
    "AWS::Logs::LogGroup": {
        "prefix": "logs-loggroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::LogGroup\"\r\n\tProperties:\r\n\t\tLogGroupName: String\r\n\t\tKmsKeyId: String\r\n\t\tRetentionInDays: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Logs::LogGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html"
    },
    "AWS::SSMIncidents::ResponsePlan": {
        "prefix": "ssmincidents-responseplan",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSMIncidents::ResponsePlan\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDisplayName: String\r\n\t\tChatChannel:\r\n\t\t\tChatChannel\r\n\t\tEngagements:\r\n\t\t\t- String\r\n\t\tActions:\r\n\t\t\t- Action\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tIncidentTemplate: #required\r\n\t\t\tIncidentTemplate\r\n",
        "description": "AWS::SSMIncidents::ResponsePlan\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html"
    },
    "AWS::DataSync::LocationEFS": {
        "prefix": "datasync-locationefs",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationEFS\"\r\n\tProperties:\r\n\t\tEc2Config: #required\r\n\t\t\tEc2Config\r\n\t\tEfsFilesystemArn: String #required\r\n\t\tSubdirectory: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationEFS\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html"
    },
    "AWS::AutoScalingPlans::ScalingPlan": {
        "prefix": "autoscalingplans-scalingplan",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScalingPlans::ScalingPlan\"\r\n\tProperties:\r\n\t\tApplicationSource: #required\r\n\t\t\tApplicationSource\r\n\t\tScalingInstructions: #required\r\n\t\t\t- ScalingInstruction\r\n",
        "description": "AWS::AutoScalingPlans::ScalingPlan\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html"
    },
    "AWS::WAFRegional::XssMatchSet": {
        "prefix": "wafregional-xssmatchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::XssMatchSet\"\r\n\tProperties:\r\n\t\tXssMatchTuples:\r\n\t\t\t- XssMatchTuple\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::XssMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html"
    },
    "AWS::EC2::InternetGateway": {
        "prefix": "ec2-internetgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::InternetGateway\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::InternetGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html"
    },
    "AWS::IAM::Role": {
        "prefix": "iam-role",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Role\"\r\n\tProperties:\r\n\t\tAssumeRolePolicyDocument: Json #required\r\n\t\tDescription: String\r\n\t\tManagedPolicyArns:\r\n\t\t\t- String\r\n\t\tMaxSessionDuration: Integer\r\n\t\tPath: String\r\n\t\tPermissionsBoundary: String\r\n\t\tPolicies:\r\n\t\t\t- Policy\r\n\t\tRoleName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IAM::Role\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"
    },
    "AWS::Macie::FindingsFilter": {
        "prefix": "macie-findingsfilter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::FindingsFilter\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tFindingCriteria: #required\r\n\t\t\tFindingCriteria\r\n\t\tAction: String\r\n\t\tPosition: Integer\r\n",
        "description": "AWS::Macie::FindingsFilter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html"
    },
    "AWS::Pinpoint::InAppTemplate": {
        "prefix": "pinpoint-inapptemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::InAppTemplate\"\r\n\tProperties:\r\n\t\tContent:\r\n\t\t\t- InAppMessageContent\r\n\t\tCustomConfig: Json\r\n\t\tLayout: String\r\n\t\tTags: Json\r\n\t\tTemplateDescription: String\r\n\t\tTemplateName: String #required\r\n",
        "description": "AWS::Pinpoint::InAppTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html"
    },
    "AWS::EC2::LaunchTemplate": {
        "prefix": "ec2-launchtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LaunchTemplate\"\r\n\tProperties:\r\n\t\tLaunchTemplateName: String\r\n\t\tLaunchTemplateData:\r\n\t\t\tLaunchTemplateData\r\n\t\tTagSpecifications:\r\n\t\t\t- LaunchTemplateTagSpecification\r\n",
        "description": "AWS::EC2::LaunchTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
    },
    "AWS::Events::Archive": {
        "prefix": "events-archive",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::Archive\"\r\n\tProperties:\r\n\t\tArchiveName: String\r\n\t\tSourceArn: String #required\r\n\t\tDescription: String\r\n\t\tEventPattern: Json\r\n\t\tRetentionDays: Integer\r\n",
        "description": "AWS::Events::Archive\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html"
    },
    "AWS::OpsWorks::Volume": {
        "prefix": "opsworks-volume",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Volume\"\r\n\tProperties:\r\n\t\tEc2VolumeId: String #required\r\n\t\tMountPoint: String\r\n\t\tName: String\r\n\t\tStackId: String #required\r\n",
        "description": "AWS::OpsWorks::Volume\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html"
    },
    "AWS::IoT::Dimension": {
        "prefix": "iot-dimension",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Dimension\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tType: String #required\r\n\t\tStringValues: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::Dimension\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html"
    },
    "AWS::ACMPCA::Certificate": {
        "prefix": "acmpca-certificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::Certificate\"\r\n\tProperties:\r\n\t\tApiPassthrough:\r\n\t\t\tApiPassthrough\r\n\t\tCertificateAuthorityArn: String #required\r\n\t\tCertificateSigningRequest: String #required\r\n\t\tSigningAlgorithm: String #required\r\n\t\tTemplateArn: String\r\n\t\tValidity: #required\r\n\t\t\tValidity\r\n\t\tValidityNotBefore:\r\n\t\t\tValidity\r\n",
        "description": "AWS::ACMPCA::Certificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html"
    },
    "AWS::SageMaker::AppImageConfig": {
        "prefix": "sagemaker-appimageconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::AppImageConfig\"\r\n\tProperties:\r\n\t\tAppImageConfigName: String #required\r\n\t\tKernelGatewayImageConfig:\r\n\t\t\tKernelGatewayImageConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::AppImageConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html"
    },
    "AWS::ServiceCatalog::LaunchTemplateConstraint": {
        "prefix": "servicecatalog-launchtemplateconstraint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchTemplateConstraint\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n\t\tRules: String #required\r\n",
        "description": "AWS::ServiceCatalog::LaunchTemplateConstraint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html"
    },
    "AWS::EMR::Cluster": {
        "prefix": "emr-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::Cluster\"\r\n\tProperties:\r\n\t\tAdditionalInfo: Json\r\n\t\tApplications:\r\n\t\t\t- Application\r\n\t\tAutoScalingRole: String\r\n\t\tBootstrapActions:\r\n\t\t\t- BootstrapActionConfig\r\n\t\tConfigurations:\r\n\t\t\t- Configuration\r\n\t\tCustomAmiId: String\r\n\t\tEbsRootVolumeSize: Integer\r\n\t\tInstances: #required\r\n\t\t\tJobFlowInstancesConfig\r\n\t\tJobFlowRole: String #required\r\n\t\tKerberosAttributes:\r\n\t\t\tKerberosAttributes\r\n\t\tLogEncryptionKmsKeyId: String\r\n\t\tLogUri: String\r\n\t\tManagedScalingPolicy:\r\n\t\t\tManagedScalingPolicy\r\n\t\tName: String #required\r\n\t\tReleaseLabel: String\r\n\t\tScaleDownBehavior: String\r\n\t\tSecurityConfiguration: String\r\n\t\tServiceRole: String #required\r\n\t\tStepConcurrencyLevel: Integer\r\n\t\tSteps:\r\n\t\t\t- StepConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVisibleToAllUsers: Boolean\r\n",
        "description": "AWS::EMR::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html"
    },
    "AWS::SageMaker::Pipeline": {
        "prefix": "sagemaker-pipeline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Pipeline\"\r\n\tProperties:\r\n\t\tPipelineName: String #required\r\n\t\tPipelineDisplayName: String\r\n\t\tPipelineDescription: String\r\n\t\tPipelineDefinition: Json #required\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tParallelismConfiguration: Json\r\n",
        "description": "AWS::SageMaker::Pipeline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html"
    },
    "AWS::SSO::Assignment": {
        "prefix": "sso-assignment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSO::Assignment\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tTargetId: String #required\r\n\t\tTargetType: String #required\r\n\t\tPermissionSetArn: String #required\r\n\t\tPrincipalType: String #required\r\n\t\tPrincipalId: String #required\r\n",
        "description": "AWS::SSO::Assignment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html"
    },
    "AWS::GameLift::Alias": {
        "prefix": "gamelift-alias",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Alias\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String #required\r\n\t\tRoutingStrategy: #required\r\n\t\t\tRoutingStrategy\r\n",
        "description": "AWS::GameLift::Alias\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html"
    },
    "AWS::EC2::VPNConnectionRoute": {
        "prefix": "ec2-vpnconnectionroute",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNConnectionRoute\"\r\n\tProperties:\r\n\t\tDestinationCidrBlock: String #required\r\n\t\tVpnConnectionId: String #required\r\n",
        "description": "AWS::EC2::VPNConnectionRoute\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
    },
    "AWS::APS::Workspace": {
        "prefix": "aps-workspace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::APS::Workspace\"\r\n\tProperties:\r\n\t\tAlias: String\r\n\t\tAlertManagerDefinition: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::APS::Workspace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html"
    },
    "AWS::WAF::Rule": {
        "prefix": "waf-rule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::Rule\"\r\n\tProperties:\r\n\t\tMetricName: String #required\r\n\t\tName: String #required\r\n\t\tPredicates:\r\n\t\t\t- Predicate\r\n",
        "description": "AWS::WAF::Rule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html"
    },
    "AWS::DirectoryService::MicrosoftAD": {
        "prefix": "directoryservice-microsoftad",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DirectoryService::MicrosoftAD\"\r\n\tProperties:\r\n\t\tCreateAlias: Boolean\r\n\t\tEdition: String\r\n\t\tEnableSso: Boolean\r\n\t\tName: String #required\r\n\t\tPassword: String #required\r\n\t\tShortName: String\r\n\t\tVpcSettings: #required\r\n\t\t\tVpcSettings\r\n",
        "description": "AWS::DirectoryService::MicrosoftAD\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html"
    },
    "AWS::ApiGatewayV2::DomainName": {
        "prefix": "apigatewayv2-domainname",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::DomainName\"\r\n\tProperties:\r\n\t\tMutualTlsAuthentication:\r\n\t\t\tMutualTlsAuthentication\r\n\t\tDomainName: String #required\r\n\t\tDomainNameConfigurations:\r\n\t\t\t- DomainNameConfiguration\r\n\t\tTags: Json\r\n",
        "description": "AWS::ApiGatewayV2::DomainName\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html"
    },
    "AWS::Greengrass::FunctionDefinition": {
        "prefix": "greengrass-functiondefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::FunctionDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tFunctionDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::FunctionDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html"
    },
    "AWS::Config::DeliveryChannel": {
        "prefix": "config-deliverychannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::DeliveryChannel\"\r\n\tProperties:\r\n\t\tConfigSnapshotDeliveryProperties:\r\n\t\t\tConfigSnapshotDeliveryProperties\r\n\t\tName: String\r\n\t\tS3BucketName: String #required\r\n\t\tS3KeyPrefix: String\r\n\t\tS3KmsKeyArn: String\r\n\t\tSnsTopicARN: String\r\n",
        "description": "AWS::Config::DeliveryChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html"
    },
    "AWS::EC2::NetworkInterfacePermission": {
        "prefix": "ec2-networkinterfacepermission",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterfacePermission\"\r\n\tProperties:\r\n\t\tAwsAccountId: String #required\r\n\t\tNetworkInterfaceId: String #required\r\n\t\tPermission: String #required\r\n",
        "description": "AWS::EC2::NetworkInterfacePermission\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
    },
    "AWS::GameLift::Build": {
        "prefix": "gamelift-build",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Build\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tOperatingSystem: String\r\n\t\tStorageLocation:\r\n\t\t\tS3Location\r\n\t\tVersion: String\r\n",
        "description": "AWS::GameLift::Build\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html"
    },
    "AWS::Config::OrganizationConfigRule": {
        "prefix": "config-organizationconfigrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::OrganizationConfigRule\"\r\n\tProperties:\r\n\t\tOrganizationManagedRuleMetadata:\r\n\t\t\tOrganizationManagedRuleMetadata\r\n\t\tOrganizationConfigRuleName: String #required\r\n\t\tOrganizationCustomRuleMetadata:\r\n\t\t\tOrganizationCustomRuleMetadata\r\n\t\tExcludedAccounts:\r\n\t\t\t- String\r\n\t\tOrganizationCustomCodeRuleMetadata:\r\n\t\t\tOrganizationCustomCodeRuleMetadata\r\n",
        "description": "AWS::Config::OrganizationConfigRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html"
    },
    "AWS::ECR::ReplicationConfiguration": {
        "prefix": "ecr-replicationconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECR::ReplicationConfiguration\"\r\n\tProperties:\r\n\t\tReplicationConfiguration: #required\r\n\t\t\tReplicationConfiguration\r\n",
        "description": "AWS::ECR::ReplicationConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html"
    },
    "AWS::LicenseManager::License": {
        "prefix": "licensemanager-license",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LicenseManager::License\"\r\n\tProperties:\r\n\t\tProductSKU: String\r\n\t\tIssuer: #required\r\n\t\t\tIssuerData\r\n\t\tLicenseName: String #required\r\n\t\tProductName: String #required\r\n\t\tHomeRegion: String #required\r\n\t\tValidity: #required\r\n\t\t\tValidityDateFormat\r\n\t\tEntitlements: #required\r\n\t\t\t- Entitlement\r\n\t\tBeneficiary: String\r\n\t\tConsumptionConfiguration: #required\r\n\t\t\tConsumptionConfiguration\r\n\t\tLicenseMetadata:\r\n\t\t\t- Metadata\r\n\t\tStatus: String\r\n",
        "description": "AWS::LicenseManager::License\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html"
    },
    "AWS::ApiGatewayV2::Integration": {
        "prefix": "apigatewayv2-integration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Integration\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTemplateSelectionExpression: String\r\n\t\tConnectionType: String\r\n\t\tResponseParameters: Json\r\n\t\tIntegrationMethod: String\r\n\t\tPassthroughBehavior: String\r\n\t\tRequestParameters: Json\r\n\t\tConnectionId: String\r\n\t\tIntegrationUri: String\r\n\t\tPayloadFormatVersion: String\r\n\t\tCredentialsArn: String\r\n\t\tRequestTemplates: Json\r\n\t\tTimeoutInMillis: Integer\r\n\t\tTlsConfig:\r\n\t\t\tTlsConfig\r\n\t\tContentHandlingStrategy: String\r\n\t\tIntegrationSubtype: String\r\n\t\tApiId: String #required\r\n\t\tIntegrationType: String #required\r\n",
        "description": "AWS::ApiGatewayV2::Integration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html"
    },
    "AWS::Location::RouteCalculator": {
        "prefix": "location-routecalculator",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::RouteCalculator\"\r\n\tProperties:\r\n\t\tCalculatorName: String #required\r\n\t\tDataSource: String #required\r\n\t\tDescription: String\r\n\t\tPricingPlan: String\r\n",
        "description": "AWS::Location::RouteCalculator\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html"
    },
    "AWS::Lex::BotAlias": {
        "prefix": "lex-botalias",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lex::BotAlias\"\r\n\tProperties:\r\n\t\tBotId: String #required\r\n\t\tBotAliasLocaleSettings:\r\n\t\t\t- BotAliasLocaleSettingsItem\r\n\t\tBotAliasName: String #required\r\n\t\tBotVersion: String\r\n\t\tConversationLogSettings:\r\n\t\t\tConversationLogSettings\r\n\t\tDescription: String\r\n\t\tSentimentAnalysisSettings: Json\r\n\t\tBotAliasTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lex::BotAlias\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html"
    },
    "AWS::IoTSiteWise::Portal": {
        "prefix": "iotsitewise-portal",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Portal\"\r\n\tProperties:\r\n\t\tPortalAuthMode: String\r\n\t\tPortalContactEmail: String #required\r\n\t\tPortalDescription: String\r\n\t\tPortalName: String #required\r\n\t\tRoleArn: String #required\r\n\t\tNotificationSenderEmail: String\r\n\t\tAlarms: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTSiteWise::Portal\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html"
    },
    "AWS::Kendra::Index": {
        "prefix": "kendra-index",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::Index\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tServerSideEncryptionConfiguration:\r\n\t\t\tServerSideEncryptionConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n\t\tRoleArn: String #required\r\n\t\tEdition: String #required\r\n\t\tDocumentMetadataConfigurations:\r\n\t\t\t- DocumentMetadataConfiguration\r\n\t\tCapacityUnits:\r\n\t\t\tCapacityUnitsConfiguration\r\n\t\tUserContextPolicy: String\r\n\t\tUserTokenConfigurations:\r\n\t\t\t- UserTokenConfiguration\r\n",
        "description": "AWS::Kendra::Index\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html"
    },
    "AWS::IAM::SAMLProvider": {
        "prefix": "iam-samlprovider",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::SAMLProvider\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tSamlMetadataDocument: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IAM::SAMLProvider\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html"
    },
    "AWS::Inspector::ResourceGroup": {
        "prefix": "inspector-resourcegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::ResourceGroup\"\r\n\tProperties:\r\n\t\tResourceGroupTags: #required\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Inspector::ResourceGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html"
    },
    "AWS::EMRContainers::VirtualCluster": {
        "prefix": "emrcontainers-virtualcluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMRContainers::VirtualCluster\"\r\n\tProperties:\r\n\t\tContainerProvider: #required\r\n\t\t\tContainerProvider\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EMRContainers::VirtualCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html"
    },
    "AWS::NetworkFirewall::Firewall": {
        "prefix": "networkfirewall-firewall",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::Firewall\"\r\n\tProperties:\r\n\t\tFirewallName: String #required\r\n\t\tFirewallPolicyArn: String #required\r\n\t\tVpcId: String #required\r\n\t\tSubnetMappings: #required\r\n\t\t\t- SubnetMapping\r\n\t\tDeleteProtection: Boolean\r\n\t\tSubnetChangeProtection: Boolean\r\n\t\tFirewallPolicyChangeProtection: Boolean\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::NetworkFirewall::Firewall\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html"
    },
    "AWS::RUM::AppMonitor": {
        "prefix": "rum-appmonitor",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RUM::AppMonitor\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDomain: String #required\r\n\t\tCwLogEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAppMonitorConfiguration:\r\n\t\t\tAppMonitorConfiguration\r\n",
        "description": "AWS::RUM::AppMonitor\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html"
    },
    "AWS::DocDB::DBSubnetGroup": {
        "prefix": "docdb-dbsubnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBSubnetGroup\"\r\n\tProperties:\r\n\t\tDBSubnetGroupName: String\r\n\t\tDBSubnetGroupDescription: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DocDB::DBSubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html"
    },
    "AWS::ImageBuilder::ImagePipeline": {
        "prefix": "imagebuilder-imagepipeline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::ImagePipeline\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tImageTestsConfiguration:\r\n\t\t\tImageTestsConfiguration\r\n\t\tStatus: String\r\n\t\tSchedule:\r\n\t\t\tSchedule\r\n\t\tImageRecipeArn: String\r\n\t\tContainerRecipeArn: String\r\n\t\tDistributionConfigurationArn: String\r\n\t\tInfrastructureConfigurationArn: String #required\r\n\t\tEnhancedImageMetadataEnabled: Boolean\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::ImagePipeline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html"
    },
    "AWS::EC2::TransitGatewayMulticastGroupMember": {
        "prefix": "ec2-transitgatewaymulticastgroupmember",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayMulticastGroupMember\"\r\n\tProperties:\r\n\t\tGroupIpAddress: String #required\r\n\t\tTransitGatewayMulticastDomainId: String #required\r\n\t\tNetworkInterfaceId: String #required\r\n",
        "description": "AWS::EC2::TransitGatewayMulticastGroupMember\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html"
    },
    "AWS::RDS::DBCluster": {
        "prefix": "rds-dbcluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBCluster\"\r\n\tProperties:\r\n\t\tAssociatedRoles:\r\n\t\t\t- DBClusterRole\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tBacktrackWindow: Long\r\n\t\tBackupRetentionPeriod: Integer\r\n\t\tCopyTagsToSnapshot: Boolean\r\n\t\tDBClusterIdentifier: String\r\n\t\tDBClusterParameterGroupName: String\r\n\t\tDBSubnetGroupName: String\r\n\t\tDatabaseName: String\r\n\t\tDeletionProtection: Boolean\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- String\r\n\t\tEnableHttpEndpoint: Boolean\r\n\t\tEnableIAMDatabaseAuthentication: Boolean\r\n\t\tEngine: String #required\r\n\t\tEngineMode: String\r\n\t\tEngineVersion: String\r\n\t\tGlobalClusterIdentifier: String\r\n\t\tKmsKeyId: String\r\n\t\tMasterUserPassword: String\r\n\t\tMasterUsername: String\r\n\t\tPort: Integer\r\n\t\tPreferredBackupWindow: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tReplicationSourceIdentifier: String\r\n\t\tRestoreType: String\r\n\t\tScalingConfiguration:\r\n\t\t\tScalingConfiguration\r\n\t\tSnapshotIdentifier: String\r\n\t\tSourceDBClusterIdentifier: String\r\n\t\tSourceRegion: String\r\n\t\tStorageEncrypted: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUseLatestRestorableTime: Boolean\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n",
        "description": "AWS::RDS::DBCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html"
    },
    "AWS::EC2::ClientVpnEndpoint": {
        "prefix": "ec2-clientvpnendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnEndpoint\"\r\n\tProperties:\r\n\t\tClientCidrBlock: String #required\r\n\t\tClientConnectOptions:\r\n\t\t\tClientConnectOptions\r\n\t\tDescription: String\r\n\t\tTagSpecifications:\r\n\t\t\t- TagSpecification\r\n\t\tAuthenticationOptions: #required\r\n\t\t\t- ClientAuthenticationRequest\r\n\t\tServerCertificateArn: String #required\r\n\t\tSessionTimeoutHours: Integer\r\n\t\tDnsServers:\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tConnectionLogOptions: #required\r\n\t\t\tConnectionLogOptions\r\n\t\tSplitTunnel: Boolean\r\n\t\tClientLoginBannerOptions:\r\n\t\t\tClientLoginBannerOptions\r\n\t\tVpcId: String\r\n\t\tSelfServicePortal: String\r\n\t\tTransportProtocol: String\r\n\t\tVpnPort: Integer\r\n",
        "description": "AWS::EC2::ClientVpnEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html"
    },
    "AWS::ECS::Service": {
        "prefix": "ecs-service",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::Service\"\r\n\tProperties:\r\n\t\tCapacityProviderStrategy:\r\n\t\t\t- CapacityProviderStrategyItem\r\n\t\tCluster: String\r\n\t\tDeploymentConfiguration:\r\n\t\t\tDeploymentConfiguration\r\n\t\tDeploymentController:\r\n\t\t\tDeploymentController\r\n\t\tDesiredCount: Integer\r\n\t\tEnableECSManagedTags: Boolean\r\n\t\tEnableExecuteCommand: Boolean\r\n\t\tHealthCheckGracePeriodSeconds: Integer\r\n\t\tLaunchType: String\r\n\t\tLoadBalancers:\r\n\t\t\t- LoadBalancer\r\n\t\tNetworkConfiguration:\r\n\t\t\tNetworkConfiguration\r\n\t\tPlacementConstraints:\r\n\t\t\t- PlacementConstraint\r\n\t\tPlacementStrategies:\r\n\t\t\t- PlacementStrategy\r\n\t\tPlatformVersion: String\r\n\t\tPropagateTags: String\r\n\t\tRole: String\r\n\t\tSchedulingStrategy: String\r\n\t\tServiceName: String\r\n\t\tServiceRegistries:\r\n\t\t\t- ServiceRegistry\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTaskDefinition: String\r\n",
        "description": "AWS::ECS::Service\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html"
    },
    "AWS::OpsWorksCM::Server": {
        "prefix": "opsworkscm-server",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorksCM::Server\"\r\n\tProperties:\r\n\t\tKeyPair: String\r\n\t\tEngineVersion: String\r\n\t\tServiceRoleArn: String #required\r\n\t\tDisableAutomatedBackup: Boolean\r\n\t\tBackupId: String\r\n\t\tEngineModel: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tAssociatePublicIpAddress: Boolean\r\n\t\tInstanceProfileArn: String #required\r\n\t\tCustomCertificate: String\r\n\t\tPreferredBackupWindow: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tSubnetIds:\r\n\t\t\t- String\r\n\t\tCustomDomain: String\r\n\t\tCustomPrivateKey: String\r\n\t\tServerName: String\r\n\t\tEngineAttributes:\r\n\t\t\t- EngineAttribute\r\n\t\tBackupRetentionCount: Integer\r\n\t\tInstanceType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEngine: String\r\n",
        "description": "AWS::OpsWorksCM::Server\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html"
    },
    "AWS::AppSync::DomainNameApiAssociation": {
        "prefix": "appsync-domainnameapiassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::DomainNameApiAssociation\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::AppSync::DomainNameApiAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html"
    },
    "AWS::Batch::JobQueue": {
        "prefix": "batch-jobqueue",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::JobQueue\"\r\n\tProperties:\r\n\t\tComputeEnvironmentOrder: #required\r\n\t\t\t- ComputeEnvironmentOrder\r\n\t\tPriority: Integer #required\r\n\t\tState: String\r\n\t\tSchedulingPolicyArn: String\r\n\t\tJobQueueName: String\r\n\t\tTags: Json\r\n",
        "description": "AWS::Batch::JobQueue\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html"
    },
    "AWS::IoT::Thing": {
        "prefix": "iot-thing",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Thing\"\r\n\tProperties:\r\n\t\tAttributePayload:\r\n\t\t\tAttributePayload\r\n\t\tThingName: String\r\n",
        "description": "AWS::IoT::Thing\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html"
    },
    "AWS::Logs::ResourcePolicy": {
        "prefix": "logs-resourcepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::ResourcePolicy\"\r\n\tProperties:\r\n\t\tPolicyName: String #required\r\n\t\tPolicyDocument: String #required\r\n",
        "description": "AWS::Logs::ResourcePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html"
    },
    "AWS::DMS::Certificate": {
        "prefix": "dms-certificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::Certificate\"\r\n\tProperties:\r\n\t\tCertificateIdentifier: String\r\n\t\tCertificatePem: String\r\n\t\tCertificateWallet: String\r\n",
        "description": "AWS::DMS::Certificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html"
    },
    "AWS::ApiGateway::ApiKey": {
        "prefix": "apigateway-apikey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::ApiKey\"\r\n\tProperties:\r\n\t\tCustomerId: String\r\n\t\tDescription: String\r\n\t\tEnabled: Boolean\r\n\t\tGenerateDistinctId: Boolean\r\n\t\tName: String\r\n\t\tStageKeys:\r\n\t\t\t- StageKey\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tValue: String\r\n",
        "description": "AWS::ApiGateway::ApiKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html"
    },
    "AWS::IoTWireless::DeviceProfile": {
        "prefix": "iotwireless-deviceprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::DeviceProfile\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tLoRaWAN:\r\n\t\t\tLoRaWANDeviceProfile\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTWireless::DeviceProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html"
    },
    "AWS::EC2::LocalGatewayRouteTableVPCAssociation": {
        "prefix": "ec2-localgatewayroutetablevpcassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LocalGatewayRouteTableVPCAssociation\"\r\n\tProperties:\r\n\t\tLocalGatewayRouteTableId: String #required\r\n\t\tVpcId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::LocalGatewayRouteTableVPCAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html"
    },
    "AWS::ApiGateway::Resource": {
        "prefix": "apigateway-resource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Resource\"\r\n\tProperties:\r\n\t\tRestApiId: String #required\r\n\t\tParentId: String #required\r\n\t\tPathPart: String #required\r\n",
        "description": "AWS::ApiGateway::Resource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html"
    },
    "AWS::Glue::Connection": {
        "prefix": "glue-connection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Connection\"\r\n\tProperties:\r\n\t\tConnectionInput: #required\r\n\t\t\tConnectionInput\r\n\t\tCatalogId: String #required\r\n",
        "description": "AWS::Glue::Connection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html"
    },
    "AWS::CloudFormation::TypeActivation": {
        "prefix": "cloudformation-typeactivation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::TypeActivation\"\r\n\tProperties:\r\n\t\tExecutionRoleArn: String\r\n\t\tPublisherId: String\r\n\t\tLoggingConfig:\r\n\t\t\tLoggingConfig\r\n\t\tPublicTypeArn: String\r\n\t\tAutoUpdate: Boolean\r\n\t\tTypeNameAlias: String\r\n\t\tVersionBump: String\r\n\t\tMajorVersion: String\r\n\t\tTypeName: String\r\n\t\tType: String\r\n",
        "description": "AWS::CloudFormation::TypeActivation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html"
    },
    "AWS::KinesisVideo::Stream": {
        "prefix": "kinesisvideo-stream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisVideo::Stream\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDataRetentionInHours: Integer\r\n\t\tDeviceName: String\r\n\t\tKmsKeyId: String\r\n\t\tMediaType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::KinesisVideo::Stream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html"
    },
    "AWS::CustomerProfiles::ObjectType": {
        "prefix": "customerprofiles-objecttype",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CustomerProfiles::ObjectType\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tObjectTypeName: String\r\n\t\tAllowProfileCreation: Boolean\r\n\t\tDescription: String\r\n\t\tEncryptionKey: String\r\n\t\tExpirationDays: Integer\r\n\t\tFields:\r\n\t\t\t- FieldMap\r\n\t\tKeys:\r\n\t\t\t- KeyMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTemplateId: String\r\n",
        "description": "AWS::CustomerProfiles::ObjectType\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html"
    },
    "AWS::S3Outposts::Endpoint": {
        "prefix": "s3outposts-endpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3Outposts::Endpoint\"\r\n\tProperties:\r\n\t\tOutpostId: String #required\r\n\t\tSecurityGroupId: String #required\r\n\t\tSubnetId: String #required\r\n\t\tAccessType: String\r\n\t\tCustomerOwnedIpv4Pool: String\r\n",
        "description": "AWS::S3Outposts::Endpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html"
    },
    "AWS::FraudDetector::Label": {
        "prefix": "frauddetector-label",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::Label\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n",
        "description": "AWS::FraudDetector::Label\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html"
    },
    "AWS::WAFv2::WebACL": {
        "prefix": "wafv2-webacl",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::WebACL\"\r\n\tProperties:\r\n\t\tDefaultAction: #required\r\n\t\t\tDefaultAction\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tScope: String #required\r\n\t\tRules:\r\n\t\t\t- Rule\r\n\t\tVisibilityConfig: #required\r\n\t\t\tVisibilityConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCustomResponseBodies:\r\n\t\t\tMap\r\n\t\tCaptchaConfig:\r\n\t\t\tCaptchaConfig\r\n",
        "description": "AWS::WAFv2::WebACL\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html"
    },
    "AWS::ElastiCache::SubnetGroup": {
        "prefix": "elasticache-subnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SubnetGroup\"\r\n\tProperties:\r\n\t\tCacheSubnetGroupName: String\r\n\t\tDescription: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ElastiCache::SubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html"
    },
    "AWS::Detective::Graph": {
        "prefix": "detective-graph",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Detective::Graph\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Detective::Graph\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html"
    },
    "AWS::EC2::NetworkInterface": {
        "prefix": "ec2-networkinterface",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInterface\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tPrivateIpAddress: String\r\n\t\tPrivateIpAddresses:\r\n\t\t\t- PrivateIpAddressSpecification\r\n\t\tSecondaryPrivateIpAddressCount: Integer\r\n\t\tGroupSet:\r\n\t\t\t- String\r\n\t\tIpv6Addresses:\r\n\t\t\t- InstanceIpv6Address\r\n\t\tSubnetId: String #required\r\n\t\tSourceDestCheck: Boolean\r\n\t\tInterfaceType: String\r\n\t\tIpv6AddressCount: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::NetworkInterface\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html"
    },
    "AWS::ApiGatewayV2::Deployment": {
        "prefix": "apigatewayv2-deployment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Deployment\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tStageName: String\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::ApiGatewayV2::Deployment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html"
    },
    "AWS::AppConfig::Environment": {
        "prefix": "appconfig-environment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Environment\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tMonitors:\r\n\t\t\t- Monitors\r\n\t\tApplicationId: String #required\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n",
        "description": "AWS::AppConfig::Environment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html"
    },
    "AWS::FSx::FileSystem": {
        "prefix": "fsx-filesystem",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FSx::FileSystem\"\r\n\tProperties:\r\n\t\tStorageType: String\r\n\t\tKmsKeyId: String\r\n\t\tStorageCapacity: Integer\r\n\t\tLustreConfiguration:\r\n\t\t\tLustreConfiguration\r\n\t\tBackupId: String\r\n\t\tOntapConfiguration:\r\n\t\t\tOntapConfiguration\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tWindowsConfiguration:\r\n\t\t\tWindowsConfiguration\r\n\t\tFileSystemTypeVersion: String\r\n\t\tOpenZFSConfiguration:\r\n\t\t\tOpenZFSConfiguration\r\n\t\tFileSystemType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::FSx::FileSystem\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html"
    },
    "AWS::IoTSiteWise::AccessPolicy": {
        "prefix": "iotsitewise-accesspolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::AccessPolicy\"\r\n\tProperties:\r\n\t\tAccessPolicyIdentity: #required\r\n\t\t\tAccessPolicyIdentity\r\n\t\tAccessPolicyPermission: String #required\r\n\t\tAccessPolicyResource: #required\r\n\t\t\tAccessPolicyResource\r\n",
        "description": "AWS::IoTSiteWise::AccessPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html"
    },
    "AWS::DataPipeline::Pipeline": {
        "prefix": "datapipeline-pipeline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataPipeline::Pipeline\"\r\n\tProperties:\r\n\t\tActivate: Boolean\r\n\t\tDescription: String\r\n\t\tName: String #required\r\n\t\tParameterObjects: #required\r\n\t\t\t- ParameterObject\r\n\t\tParameterValues:\r\n\t\t\t- ParameterValue\r\n\t\tPipelineObjects:\r\n\t\t\t- PipelineObject\r\n\t\tPipelineTags:\r\n\t\t\t- PipelineTag\r\n",
        "description": "AWS::DataPipeline::Pipeline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html"
    },
    "AWS::EC2::TransitGatewayMulticastGroupSource": {
        "prefix": "ec2-transitgatewaymulticastgroupsource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayMulticastGroupSource\"\r\n\tProperties:\r\n\t\tGroupIpAddress: String #required\r\n\t\tTransitGatewayMulticastDomainId: String #required\r\n\t\tNetworkInterfaceId: String #required\r\n",
        "description": "AWS::EC2::TransitGatewayMulticastGroupSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html"
    },
    "AWS::NetworkManager::LinkAssociation": {
        "prefix": "networkmanager-linkassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::LinkAssociation\"\r\n\tProperties:\r\n\t\tGlobalNetworkId: String #required\r\n\t\tDeviceId: String #required\r\n\t\tLinkId: String #required\r\n",
        "description": "AWS::NetworkManager::LinkAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html"
    },
    "AWS::Pinpoint::Campaign": {
        "prefix": "pinpoint-campaign",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::Campaign\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tSegmentId: String #required\r\n\t\tPriority: Integer\r\n\t\tIsPaused: Boolean\r\n\t\tAdditionalTreatments:\r\n\t\t\t- WriteTreatmentResource\r\n\t\tName: String #required\r\n\t\tSegmentVersion: Integer\r\n\t\tTreatmentDescription: String\r\n\t\tMessageConfiguration: #required\r\n\t\t\tMessageConfiguration\r\n\t\tLimits:\r\n\t\t\tLimits\r\n\t\tHoldoutPercent: Integer\r\n\t\tSchedule: #required\r\n\t\t\tSchedule\r\n\t\tApplicationId: String #required\r\n\t\tCampaignHook:\r\n\t\t\tCampaignHook\r\n\t\tTags: Json\r\n\t\tTreatmentName: String\r\n",
        "description": "AWS::Pinpoint::Campaign\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html"
    },
    "AWS::EC2::ClientVpnAuthorizationRule": {
        "prefix": "ec2-clientvpnauthorizationrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnAuthorizationRule\"\r\n\tProperties:\r\n\t\tClientVpnEndpointId: String #required\r\n\t\tDescription: String\r\n\t\tAccessGroupId: String\r\n\t\tTargetNetworkCidr: String #required\r\n\t\tAuthorizeAllGroups: Boolean\r\n",
        "description": "AWS::EC2::ClientVpnAuthorizationRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html"
    },
    "AWS::APS::RuleGroupsNamespace": {
        "prefix": "aps-rulegroupsnamespace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::APS::RuleGroupsNamespace\"\r\n\tProperties:\r\n\t\tWorkspace: String #required\r\n\t\tName: String #required\r\n\t\tData: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::APS::RuleGroupsNamespace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html"
    },
    "AWS::MemoryDB::ACL": {
        "prefix": "memorydb-acl",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MemoryDB::ACL\"\r\n\tProperties:\r\n\t\tACLName: String #required\r\n\t\tUserNames:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MemoryDB::ACL\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html"
    },
    "AWS::GameLift::Script": {
        "prefix": "gamelift-script",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Script\"\r\n\tProperties:\r\n\t\tVersion: String\r\n\t\tStorageLocation: #required\r\n\t\t\tS3Location\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::GameLift::Script\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html"
    },
    "AWS::ApiGateway::Account": {
        "prefix": "apigateway-account",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Account\"\r\n\tProperties:\r\n\t\tCloudWatchRoleArn: String\r\n",
        "description": "AWS::ApiGateway::Account\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html"
    },
    "AWS::Greengrass::LoggerDefinition": {
        "prefix": "greengrass-loggerdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::LoggerDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tLoggerDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::LoggerDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html"
    },
    "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
        "prefix": "servicecatalog-cloudformationprovisionedproduct",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::CloudFormationProvisionedProduct\"\r\n\tProperties:\r\n\t\tAcceptLanguage: String\r\n\t\tNotificationArns:\r\n\t\t\t- String\r\n\t\tPathId: String\r\n\t\tPathName: String\r\n\t\tProductId: String\r\n\t\tProductName: String\r\n\t\tProvisionedProductName: String\r\n\t\tProvisioningArtifactId: String\r\n\t\tProvisioningArtifactName: String\r\n\t\tProvisioningParameters:\r\n\t\t\t- ProvisioningParameter\r\n\t\tProvisioningPreferences:\r\n\t\t\tProvisioningPreferences\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ServiceCatalog::CloudFormationProvisionedProduct\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html"
    },
    "AWS::CloudFormation::PublicTypeVersion": {
        "prefix": "cloudformation-publictypeversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::PublicTypeVersion\"\r\n\tProperties:\r\n\t\tArn: String\r\n\t\tPublicVersionNumber: String\r\n\t\tTypeName: String\r\n\t\tLogDeliveryBucket: String\r\n\t\tType: String\r\n",
        "description": "AWS::CloudFormation::PublicTypeVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html"
    },
    "AWS::MediaLive::InputSecurityGroup": {
        "prefix": "medialive-inputsecuritygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::InputSecurityGroup\"\r\n\tProperties:\r\n\t\tWhitelistRules:\r\n\t\t\t- InputWhitelistRuleCidr\r\n\t\tTags: Json\r\n",
        "description": "AWS::MediaLive::InputSecurityGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html"
    },
    "AWS::EC2::NatGateway": {
        "prefix": "ec2-natgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NatGateway\"\r\n\tProperties:\r\n\t\tAllocationId: String\r\n\t\tConnectivityType: String\r\n\t\tSubnetId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::NatGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
    },
    "AWS::CodeArtifact::Domain": {
        "prefix": "codeartifact-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeArtifact::Domain\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tEncryptionKey: String\r\n\t\tPermissionsPolicyDocument: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeArtifact::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html"
    },
    "AWS::IoT::FleetMetric": {
        "prefix": "iot-fleetmetric",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::FleetMetric\"\r\n\tProperties:\r\n\t\tMetricName: String #required\r\n\t\tDescription: String\r\n\t\tQueryString: String\r\n\t\tPeriod: Integer\r\n\t\tAggregationField: String\r\n\t\tQueryVersion: String\r\n\t\tIndexName: String\r\n\t\tUnit: String\r\n\t\tAggregationType:\r\n\t\t\tAggregationType\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::FleetMetric\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html"
    },
    "AWS::ElastiCache::ReplicationGroup": {
        "prefix": "elasticache-replicationgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::ReplicationGroup\"\r\n\tProperties:\r\n\t\tAtRestEncryptionEnabled: Boolean\r\n\t\tAuthToken: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tAutomaticFailoverEnabled: Boolean\r\n\t\tCacheNodeType: String\r\n\t\tCacheParameterGroupName: String\r\n\t\tCacheSecurityGroupNames:\r\n\t\t\t- String\r\n\t\tCacheSubnetGroupName: String\r\n\t\tDataTieringEnabled: Boolean\r\n\t\tEngine: String\r\n\t\tEngineVersion: String\r\n\t\tGlobalReplicationGroupId: String\r\n\t\tKmsKeyId: String\r\n\t\tLogDeliveryConfigurations:\r\n\t\t\t- LogDeliveryConfigurationRequest\r\n\t\tMultiAZEnabled: Boolean\r\n\t\tNodeGroupConfiguration:\r\n\t\t\t- NodeGroupConfiguration\r\n\t\tNotificationTopicArn: String\r\n\t\tNumCacheClusters: Integer\r\n\t\tNumNodeGroups: Integer\r\n\t\tPort: Integer\r\n\t\tPreferredCacheClusterAZs:\r\n\t\t\t- String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tPrimaryClusterId: String\r\n\t\tReplicasPerNodeGroup: Integer\r\n\t\tReplicationGroupDescription: String #required\r\n\t\tReplicationGroupId: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tSnapshotArns:\r\n\t\t\t- String\r\n\t\tSnapshotName: String\r\n\t\tSnapshotRetentionLimit: Integer\r\n\t\tSnapshotWindow: String\r\n\t\tSnapshottingClusterId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTransitEncryptionEnabled: Boolean\r\n\t\tUserGroupIds:\r\n\t\t\t- String\r\n",
        "description": "AWS::ElastiCache::ReplicationGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html"
    },
    "AWS::Cognito::UserPoolUser": {
        "prefix": "cognito-userpooluser",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUser\"\r\n\tProperties:\r\n\t\tValidationData:\r\n\t\t\t- AttributeType\r\n\t\tUserPoolId: String #required\r\n\t\tUsername: String\r\n\t\tMessageAction: String\r\n\t\tClientMetadata: Json\r\n\t\tDesiredDeliveryMediums:\r\n\t\t\t- String\r\n\t\tForceAliasCreation: Boolean\r\n\t\tUserAttributes:\r\n\t\t\t- AttributeType\r\n",
        "description": "AWS::Cognito::UserPoolUser\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html"
    },
    "AWS::AppSync::FunctionConfiguration": {
        "prefix": "appsync-functionconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::FunctionConfiguration\"\r\n\tProperties:\r\n\t\tResponseMappingTemplateS3Location: String\r\n\t\tDescription: String\r\n\t\tDataSourceName: String #required\r\n\t\tRequestMappingTemplate: String\r\n\t\tResponseMappingTemplate: String\r\n\t\tFunctionVersion: String #required\r\n\t\tMaxBatchSize: Integer\r\n\t\tSyncConfig:\r\n\t\t\tSyncConfig\r\n\t\tRequestMappingTemplateS3Location: String\r\n\t\tApiId: String #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::AppSync::FunctionConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html"
    },
    "AWS::ApiGatewayV2::Model": {
        "prefix": "apigatewayv2-model",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Model\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tContentType: String\r\n\t\tSchema: Json #required\r\n\t\tApiId: String #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::ApiGatewayV2::Model\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html"
    },
    "AWS::CloudFormation::HookVersion": {
        "prefix": "cloudformation-hookversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::HookVersion\"\r\n\tProperties:\r\n\t\tExecutionRoleArn: String\r\n\t\tLoggingConfig:\r\n\t\t\tLoggingConfig\r\n\t\tSchemaHandlerPackage: String #required\r\n\t\tTypeName: String #required\r\n",
        "description": "AWS::CloudFormation::HookVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html"
    },
    "AWS::EKS::FargateProfile": {
        "prefix": "eks-fargateprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::FargateProfile\"\r\n\tProperties:\r\n\t\tClusterName: String #required\r\n\t\tFargateProfileName: String\r\n\t\tPodExecutionRoleArn: String #required\r\n\t\tSubnets:\r\n\t\t\t- String\r\n\t\tSelectors: #required\r\n\t\t\t- Selector\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EKS::FargateProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html"
    },
    "AWS::LookoutMetrics::AnomalyDetector": {
        "prefix": "lookoutmetrics-anomalydetector",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LookoutMetrics::AnomalyDetector\"\r\n\tProperties:\r\n\t\tAnomalyDetectorName: String\r\n\t\tAnomalyDetectorDescription: String\r\n\t\tAnomalyDetectorConfig: #required\r\n\t\t\tAnomalyDetectorConfig\r\n\t\tMetricSetList: #required\r\n\t\t\t- MetricSet\r\n\t\tKmsKeyArn: String\r\n",
        "description": "AWS::LookoutMetrics::AnomalyDetector\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html"
    },
    "AWS::CloudFormation::ResourceVersion": {
        "prefix": "cloudformation-resourceversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::ResourceVersion\"\r\n\tProperties:\r\n\t\tExecutionRoleArn: String\r\n\t\tLoggingConfig:\r\n\t\t\tLoggingConfig\r\n\t\tSchemaHandlerPackage: String #required\r\n\t\tTypeName: String #required\r\n",
        "description": "AWS::CloudFormation::ResourceVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html"
    },
    "AWS::Lightsail::Bucket": {
        "prefix": "lightsail-bucket",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Bucket\"\r\n\tProperties:\r\n\t\tBucketName: String #required\r\n\t\tBundleId: String #required\r\n\t\tObjectVersioning: Boolean\r\n\t\tAccessRules:\r\n\t\t\tAccessRules\r\n\t\tResourcesReceivingAccess:\r\n\t\t\t- String\r\n\t\tReadOnlyAccessAccounts:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::Bucket\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html"
    },
    "AWS::Wisdom::KnowledgeBase": {
        "prefix": "wisdom-knowledgebase",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Wisdom::KnowledgeBase\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tKnowledgeBaseType: String #required\r\n\t\tName: String #required\r\n\t\tRenderingConfiguration:\r\n\t\t\tRenderingConfiguration\r\n\t\tServerSideEncryptionConfiguration:\r\n\t\t\tServerSideEncryptionConfiguration\r\n\t\tSourceConfiguration:\r\n\t\t\tSourceConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Wisdom::KnowledgeBase\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html"
    },
    "AWS::EC2::TrafficMirrorFilterRule": {
        "prefix": "ec2-trafficmirrorfilterrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorFilterRule\"\r\n\tProperties:\r\n\t\tDestinationPortRange:\r\n\t\t\tTrafficMirrorPortRange\r\n\t\tDescription: String\r\n\t\tSourcePortRange:\r\n\t\t\tTrafficMirrorPortRange\r\n\t\tRuleAction: String #required\r\n\t\tSourceCidrBlock: String #required\r\n\t\tRuleNumber: Integer #required\r\n\t\tDestinationCidrBlock: String #required\r\n\t\tTrafficMirrorFilterId: String #required\r\n\t\tTrafficDirection: String #required\r\n\t\tProtocol: Integer\r\n",
        "description": "AWS::EC2::TrafficMirrorFilterRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html"
    },
    "AWS::AppConfig::DeploymentStrategy": {
        "prefix": "appconfig-deploymentstrategy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::DeploymentStrategy\"\r\n\tProperties:\r\n\t\tReplicateTo: String #required\r\n\t\tGrowthType: String\r\n\t\tDescription: String\r\n\t\tDeploymentDurationInMinutes: Double #required\r\n\t\tGrowthFactor: Double #required\r\n\t\tFinalBakeTimeInMinutes: Double\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n",
        "description": "AWS::AppConfig::DeploymentStrategy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html"
    },
    "AWS::Lambda::EventInvokeConfig": {
        "prefix": "lambda-eventinvokeconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::EventInvokeConfig\"\r\n\tProperties:\r\n\t\tFunctionName: String #required\r\n\t\tMaximumRetryAttempts: Integer\r\n\t\tDestinationConfig:\r\n\t\t\tDestinationConfig\r\n\t\tQualifier: String #required\r\n\t\tMaximumEventAgeInSeconds: Integer\r\n",
        "description": "AWS::Lambda::EventInvokeConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html"
    },
    "AWS::EC2::PrefixList": {
        "prefix": "ec2-prefixlist",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::PrefixList\"\r\n\tProperties:\r\n\t\tPrefixListName: String #required\r\n\t\tAddressFamily: String #required\r\n\t\tMaxEntries: Integer #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEntries:\r\n\t\t\t- Entry\r\n",
        "description": "AWS::EC2::PrefixList\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html"
    },
    "AWS::CodeGuruProfiler::ProfilingGroup": {
        "prefix": "codeguruprofiler-profilinggroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeGuruProfiler::ProfilingGroup\"\r\n\tProperties:\r\n\t\tProfilingGroupName: String #required\r\n\t\tComputePlatform: String\r\n\t\tAgentPermissions: Json\r\n\t\tAnomalyDetectionNotificationConfiguration:\r\n\t\t\t- Channel\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeGuruProfiler::ProfilingGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html"
    },
    "AWS::Athena::DataCatalog": {
        "prefix": "athena-datacatalog",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::DataCatalog\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tParameters:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String #required\r\n",
        "description": "AWS::Athena::DataCatalog\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html"
    },
    "AWS::NetworkFirewall::LoggingConfiguration": {
        "prefix": "networkfirewall-loggingconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::LoggingConfiguration\"\r\n\tProperties:\r\n\t\tFirewallName: String\r\n\t\tFirewallArn: String #required\r\n\t\tLoggingConfiguration: #required\r\n\t\t\tLoggingConfiguration\r\n",
        "description": "AWS::NetworkFirewall::LoggingConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html"
    },
    "AWS::ElastiCache::ParameterGroup": {
        "prefix": "elasticache-parametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::ParameterGroup\"\r\n\tProperties:\r\n\t\tCacheParameterGroupFamily: String #required\r\n\t\tDescription: String #required\r\n\t\tProperties:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ElastiCache::ParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html"
    },
    "AWS::SQS::QueuePolicy": {
        "prefix": "sqs-queuepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SQS::QueuePolicy\"\r\n\tProperties:\r\n\t\tPolicyDocument: Json #required\r\n\t\tQueues: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::SQS::QueuePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queuepolicy.html"
    },
    "AWS::WAF::SqlInjectionMatchSet": {
        "prefix": "waf-sqlinjectionmatchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::SqlInjectionMatchSet\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tSqlInjectionMatchTuples:\r\n\t\t\t- SqlInjectionMatchTuple\r\n",
        "description": "AWS::WAF::SqlInjectionMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html"
    },
    "AWS::CodeCommit::Repository": {
        "prefix": "codecommit-repository",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeCommit::Repository\"\r\n\tProperties:\r\n\t\tRepositoryName: String #required\r\n\t\tTriggers:\r\n\t\t\t- RepositoryTrigger\r\n\t\tCode:\r\n\t\t\tCode\r\n\t\tRepositoryDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeCommit::Repository\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html"
    },
    "AWS::SecretsManager::Secret": {
        "prefix": "secretsmanager-secret",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::Secret\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tKmsKeyId: String\r\n\t\tSecretString: String\r\n\t\tGenerateSecretString:\r\n\t\t\tGenerateSecretString\r\n\t\tReplicaRegions:\r\n\t\t\t- ReplicaRegion\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::SecretsManager::Secret\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html"
    },
    "AWS::Pinpoint::APNSVoipSandboxChannel": {
        "prefix": "pinpoint-apnsvoipsandboxchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSVoipSandboxChannel\"\r\n\tProperties:\r\n\t\tBundleId: String\r\n\t\tPrivateKey: String\r\n\t\tEnabled: Boolean\r\n\t\tDefaultAuthenticationMethod: String\r\n\t\tTokenKey: String\r\n\t\tApplicationId: String #required\r\n\t\tTeamId: String\r\n\t\tCertificate: String\r\n\t\tTokenKeyId: String\r\n",
        "description": "AWS::Pinpoint::APNSVoipSandboxChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html"
    },
    "AWS::ServiceCatalog::Portfolio": {
        "prefix": "servicecatalog-portfolio",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::Portfolio\"\r\n\tProperties:\r\n\t\tProviderName: String #required\r\n\t\tDescription: String\r\n\t\tDisplayName: String #required\r\n\t\tAcceptLanguage: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ServiceCatalog::Portfolio\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html"
    },
    "AWS::Greengrass::CoreDefinition": {
        "prefix": "greengrass-coredefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::CoreDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tCoreDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::CoreDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html"
    },
    "AWS::EMR::StudioSessionMapping": {
        "prefix": "emr-studiosessionmapping",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::StudioSessionMapping\"\r\n\tProperties:\r\n\t\tIdentityName: String #required\r\n\t\tIdentityType: String #required\r\n\t\tSessionPolicyArn: String #required\r\n\t\tStudioId: String #required\r\n",
        "description": "AWS::EMR::StudioSessionMapping\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html"
    },
    "AWS::Cognito::UserPoolUICustomizationAttachment": {
        "prefix": "cognito-userpooluicustomizationattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolUICustomizationAttachment\"\r\n\tProperties:\r\n\t\tCSS: String\r\n\t\tUserPoolId: String #required\r\n\t\tClientId: String #required\r\n",
        "description": "AWS::Cognito::UserPoolUICustomizationAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html"
    },
    "AWS::MediaStore::Container": {
        "prefix": "mediastore-container",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaStore::Container\"\r\n\tProperties:\r\n\t\tPolicy: String\r\n\t\tMetricPolicy:\r\n\t\t\tMetricPolicy\r\n\t\tContainerName: String #required\r\n\t\tCorsPolicy:\r\n\t\t\t- CorsRule\r\n\t\tLifecyclePolicy: String\r\n\t\tAccessLoggingEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MediaStore::Container\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html"
    },
    "AWS::Logs::LogStream": {
        "prefix": "logs-logstream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::LogStream\"\r\n\tProperties:\r\n\t\tLogGroupName: String #required\r\n\t\tLogStreamName: String\r\n",
        "description": "AWS::Logs::LogStream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html"
    },
    "AWS::Athena::WorkGroup": {
        "prefix": "athena-workgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::WorkGroup\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tWorkGroupConfiguration:\r\n\t\t\tWorkGroupConfiguration\r\n\t\tWorkGroupConfigurationUpdates:\r\n\t\t\tWorkGroupConfigurationUpdates\r\n\t\tState: String\r\n\t\tRecursiveDeleteOption: Boolean\r\n",
        "description": "AWS::Athena::WorkGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html"
    },
    "AWS::RoboMaker::RobotApplicationVersion": {
        "prefix": "robomaker-robotapplicationversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::RobotApplicationVersion\"\r\n\tProperties:\r\n\t\tCurrentRevisionId: String\r\n\t\tApplication: String #required\r\n",
        "description": "AWS::RoboMaker::RobotApplicationVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html"
    },
    "AWS::RDS::EventSubscription": {
        "prefix": "rds-eventsubscription",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::EventSubscription\"\r\n\tProperties:\r\n\t\tEnabled: Boolean\r\n\t\tEventCategories:\r\n\t\t\t- String\r\n\t\tSnsTopicArn: String #required\r\n\t\tSourceIds:\r\n\t\t\t- String\r\n\t\tSourceType: String\r\n",
        "description": "AWS::RDS::EventSubscription\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html"
    },
    "AWS::ElasticBeanstalk::Environment": {
        "prefix": "elasticbeanstalk-environment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::Environment\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tCNAMEPrefix: String\r\n\t\tDescription: String\r\n\t\tEnvironmentName: String\r\n\t\tOperationsRole: String\r\n\t\tOptionSettings:\r\n\t\t\t- OptionSetting\r\n\t\tPlatformArn: String\r\n\t\tSolutionStackName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTemplateName: String\r\n\t\tTier:\r\n\t\t\tTier\r\n\t\tVersionLabel: String\r\n",
        "description": "AWS::ElasticBeanstalk::Environment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html"
    },
    "AWS::IoTWireless::MulticastGroup": {
        "prefix": "iotwireless-multicastgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::MulticastGroup\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tLoRaWAN: #required\r\n\t\t\tLoRaWAN\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAssociateWirelessDevice: String\r\n\t\tDisassociateWirelessDevice: String\r\n",
        "description": "AWS::IoTWireless::MulticastGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html"
    },
    "AWS::Lambda::Function": {
        "prefix": "lambda-function",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Function\"\r\n\tProperties:\r\n\t\tCode: #required\r\n\t\t\tCode\r\n\t\tDeadLetterConfig:\r\n\t\t\tDeadLetterConfig\r\n\t\tDescription: String\r\n\t\tEnvironment:\r\n\t\t\tEnvironment\r\n\t\tFileSystemConfigs:\r\n\t\t\t- FileSystemConfig\r\n\t\tFunctionName: String\r\n\t\tHandler: String\r\n\t\tArchitectures:\r\n\t\t\t- String\r\n\t\tKmsKeyArn: String\r\n\t\tLayers:\r\n\t\t\t- String\r\n\t\tMemorySize: Integer\r\n\t\tReservedConcurrentExecutions: Integer\r\n\t\tRole: String #required\r\n\t\tRuntime: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTimeout: Integer\r\n\t\tTracingConfig:\r\n\t\t\tTracingConfig\r\n\t\tVpcConfig:\r\n\t\t\tVpcConfig\r\n\t\tCodeSigningConfigArn: String\r\n\t\tImageConfig:\r\n\t\t\tImageConfig\r\n\t\tPackageType: String\r\n",
        "description": "AWS::Lambda::Function\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html"
    },
    "AWS::EventSchemas::Schema": {
        "prefix": "eventschemas-schema",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Schema\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tDescription: String\r\n\t\tContent: String #required\r\n\t\tRegistryName: String #required\r\n\t\tSchemaName: String\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::EventSchemas::Schema\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html"
    },
    "AWS::IoTSiteWise::Project": {
        "prefix": "iotsitewise-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Project\"\r\n\tProperties:\r\n\t\tPortalId: String #required\r\n\t\tProjectName: String #required\r\n\t\tProjectDescription: String\r\n\t\tAssetIds:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTSiteWise::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html"
    },
    "AWS::Config::ConfigRule": {
        "prefix": "config-configrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigRule\"\r\n\tProperties:\r\n\t\tConfigRuleName: String\r\n\t\tDescription: String\r\n\t\tInputParameters: Json\r\n\t\tMaximumExecutionFrequency: String\r\n\t\tScope:\r\n\t\t\tScope\r\n\t\tSource: #required\r\n\t\t\tSource\r\n",
        "description": "AWS::Config::ConfigRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html"
    },
    "AWS::Glue::Partition": {
        "prefix": "glue-partition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Partition\"\r\n\tProperties:\r\n\t\tTableName: String #required\r\n\t\tDatabaseName: String #required\r\n\t\tCatalogId: String #required\r\n\t\tPartitionInput: #required\r\n\t\t\tPartitionInput\r\n",
        "description": "AWS::Glue::Partition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html"
    },
    "AWS::WAF::WebACL": {
        "prefix": "waf-webacl",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::WebACL\"\r\n\tProperties:\r\n\t\tDefaultAction: #required\r\n\t\t\tWafAction\r\n\t\tMetricName: String #required\r\n\t\tName: String #required\r\n\t\tRules:\r\n\t\t\t- ActivatedRule\r\n",
        "description": "AWS::WAF::WebACL\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html"
    },
    "AWS::AppSync::ApiCache": {
        "prefix": "appsync-apicache",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::ApiCache\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tTransitEncryptionEnabled: Boolean\r\n\t\tAtRestEncryptionEnabled: Boolean\r\n\t\tApiId: String #required\r\n\t\tApiCachingBehavior: String #required\r\n\t\tTtl: Double #required\r\n",
        "description": "AWS::AppSync::ApiCache\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html"
    },
    "AWS::Neptune::DBCluster": {
        "prefix": "neptune-dbcluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBCluster\"\r\n\tProperties:\r\n\t\tStorageEncrypted: Boolean\r\n\t\tRestoreToTime: String\r\n\t\tEngineVersion: String\r\n\t\tKmsKeyId: String\r\n\t\tAssociatedRoles:\r\n\t\t\t- DBClusterRole\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tSnapshotIdentifier: String\r\n\t\tPort: Integer\r\n\t\tDBClusterIdentifier: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tIamAuthEnabled: Boolean\r\n\t\tDBSubnetGroupName: String\r\n\t\tDeletionProtection: Boolean\r\n\t\tPreferredBackupWindow: String\r\n\t\tUseLatestRestorableTime: Boolean\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tSourceDBClusterIdentifier: String\r\n\t\tDBClusterParameterGroupName: String\r\n\t\tBackupRetentionPeriod: Integer\r\n\t\tRestoreType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- String\r\n",
        "description": "AWS::Neptune::DBCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html"
    },
    "AWS::GameLift::GameServerGroup": {
        "prefix": "gamelift-gameservergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::GameServerGroup\"\r\n\tProperties:\r\n\t\tAutoScalingPolicy:\r\n\t\t\tAutoScalingPolicy\r\n\t\tBalancingStrategy: String\r\n\t\tDeleteOption: String\r\n\t\tGameServerGroupName: String #required\r\n\t\tGameServerProtectionPolicy: String\r\n\t\tInstanceDefinitions: #required\r\n\t\t\t- InstanceDefinition\r\n\t\tLaunchTemplate: #required\r\n\t\t\tLaunchTemplate\r\n\t\tMaxSize: Double\r\n\t\tMinSize: Double\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcSubnets:\r\n\t\t\t- String\r\n",
        "description": "AWS::GameLift::GameServerGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html"
    },
    "AWS::ElastiCache::GlobalReplicationGroup": {
        "prefix": "elasticache-globalreplicationgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::GlobalReplicationGroup\"\r\n\tProperties:\r\n\t\tGlobalReplicationGroupIdSuffix: String\r\n\t\tAutomaticFailoverEnabled: Boolean\r\n\t\tCacheNodeType: String\r\n\t\tEngineVersion: String\r\n\t\tCacheParameterGroupName: String\r\n\t\tGlobalNodeGroupCount: Integer\r\n\t\tGlobalReplicationGroupDescription: String\r\n\t\tMembers: #required\r\n\t\t\t- GlobalReplicationGroupMember\r\n\t\tRegionalConfigurations:\r\n\t\t\t- RegionalConfiguration\r\n",
        "description": "AWS::ElastiCache::GlobalReplicationGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html"
    },
    "AWS::SSM::MaintenanceWindow": {
        "prefix": "ssm-maintenancewindow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindow\"\r\n\tProperties:\r\n\t\tStartDate: String\r\n\t\tDescription: String\r\n\t\tAllowUnassociatedTargets: Boolean #required\r\n\t\tCutoff: Integer #required\r\n\t\tSchedule: String #required\r\n\t\tDuration: Integer #required\r\n\t\tScheduleOffset: Integer\r\n\t\tEndDate: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n\t\tScheduleTimezone: String\r\n",
        "description": "AWS::SSM::MaintenanceWindow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html"
    },
    "AWS::CloudFormation::Macro": {
        "prefix": "cloudformation-macro",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::Macro\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tFunctionName: String #required\r\n\t\tLogGroupName: String\r\n\t\tLogRoleARN: String\r\n\t\tName: String #required\r\n",
        "description": "AWS::CloudFormation::Macro\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html"
    },
    "AWS::EC2::TransitGatewayMulticastDomain": {
        "prefix": "ec2-transitgatewaymulticastdomain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayMulticastDomain\"\r\n\tProperties:\r\n\t\tTransitGatewayId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tOptions: Json\r\n",
        "description": "AWS::EC2::TransitGatewayMulticastDomain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html"
    },
    "AWS::Route53::RecordSetGroup": {
        "prefix": "route53-recordsetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::RecordSetGroup\"\r\n\tProperties:\r\n\t\tComment: String\r\n\t\tHostedZoneId: String\r\n\t\tHostedZoneName: String\r\n\t\tRecordSets:\r\n\t\t\t- RecordSet\r\n",
        "description": "AWS::Route53::RecordSetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html"
    },
    "AWS::CloudFront::Function": {
        "prefix": "cloudfront-function",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::Function\"\r\n\tProperties:\r\n\t\tAutoPublish: Boolean\r\n\t\tFunctionCode: String\r\n\t\tFunctionConfig:\r\n\t\t\tFunctionConfig\r\n\t\tName: String #required\r\n",
        "description": "AWS::CloudFront::Function\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html"
    },
    "AWS::KinesisFirehose::DeliveryStream": {
        "prefix": "kinesisfirehose-deliverystream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisFirehose::DeliveryStream\"\r\n\tProperties:\r\n\t\tDeliveryStreamEncryptionConfigurationInput:\r\n\t\t\tDeliveryStreamEncryptionConfigurationInput\r\n\t\tDeliveryStreamName: String\r\n\t\tDeliveryStreamType: String\r\n\t\tElasticsearchDestinationConfiguration:\r\n\t\t\tElasticsearchDestinationConfiguration\r\n\t\tAmazonopensearchserviceDestinationConfiguration:\r\n\t\t\tAmazonopensearchserviceDestinationConfiguration\r\n\t\tExtendedS3DestinationConfiguration:\r\n\t\t\tExtendedS3DestinationConfiguration\r\n\t\tKinesisStreamSourceConfiguration:\r\n\t\t\tKinesisStreamSourceConfiguration\r\n\t\tRedshiftDestinationConfiguration:\r\n\t\t\tRedshiftDestinationConfiguration\r\n\t\tS3DestinationConfiguration:\r\n\t\t\tS3DestinationConfiguration\r\n\t\tSplunkDestinationConfiguration:\r\n\t\t\tSplunkDestinationConfiguration\r\n\t\tHttpEndpointDestinationConfiguration:\r\n\t\t\tHttpEndpointDestinationConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::KinesisFirehose::DeliveryStream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html"
    },
    "AWS::Greengrass::DeviceDefinitionVersion": {
        "prefix": "greengrass-devicedefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::DeviceDefinitionVersion\"\r\n\tProperties:\r\n\t\tDeviceDefinitionId: String #required\r\n\t\tDevices: #required\r\n\t\t\t- Device\r\n",
        "description": "AWS::Greengrass::DeviceDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html"
    },
    "AWS::ApplicationAutoScaling::ScalableTarget": {
        "prefix": "applicationautoscaling-scalabletarget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationAutoScaling::ScalableTarget\"\r\n\tProperties:\r\n\t\tMaxCapacity: Integer #required\r\n\t\tMinCapacity: Integer #required\r\n\t\tResourceId: String #required\r\n\t\tRoleARN: String #required\r\n\t\tScalableDimension: String #required\r\n\t\tScheduledActions:\r\n\t\t\t- ScheduledAction\r\n\t\tServiceNamespace: String #required\r\n\t\tSuspendedState:\r\n\t\t\tSuspendedState\r\n",
        "description": "AWS::ApplicationAutoScaling::ScalableTarget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html"
    },
    "AWS::Amplify::Domain": {
        "prefix": "amplify-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::Domain\"\r\n\tProperties:\r\n\t\tAppId: String #required\r\n\t\tAutoSubDomainCreationPatterns:\r\n\t\t\t- String\r\n\t\tAutoSubDomainIAMRole: String\r\n\t\tDomainName: String #required\r\n\t\tEnableAutoSubDomain: Boolean\r\n\t\tSubDomainSettings: #required\r\n\t\t\t- SubDomainSetting\r\n",
        "description": "AWS::Amplify::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html"
    },
    "AWS::ECS::ClusterCapacityProviderAssociations": {
        "prefix": "ecs-clustercapacityproviderassociations",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::ClusterCapacityProviderAssociations\"\r\n\tProperties:\r\n\t\tCapacityProviders: #required\r\n\t\t\t- String\r\n\t\tCluster: String #required\r\n\t\tDefaultCapacityProviderStrategy: #required\r\n\t\t\t- CapacityProviderStrategy\r\n",
        "description": "AWS::ECS::ClusterCapacityProviderAssociations\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html"
    },
    "AWS::Connect::ContactFlow": {
        "prefix": "connect-contactflow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::ContactFlow\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tName: String #required\r\n\t\tContent: String #required\r\n\t\tDescription: String\r\n\t\tState: String\r\n\t\tType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Connect::ContactFlow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html"
    },
    "AWS::ECR::RegistryPolicy": {
        "prefix": "ecr-registrypolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECR::RegistryPolicy\"\r\n\tProperties:\r\n\t\tPolicyText: Json #required\r\n",
        "description": "AWS::ECR::RegistryPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html"
    },
    "AWS::ApiGateway::Method": {
        "prefix": "apigateway-method",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Method\"\r\n\tProperties:\r\n\t\tApiKeyRequired: Boolean\r\n\t\tAuthorizationScopes:\r\n\t\t\t- String\r\n\t\tAuthorizationType: String\r\n\t\tAuthorizerId: String\r\n\t\tHttpMethod: String #required\r\n\t\tIntegration:\r\n\t\t\tIntegration\r\n\t\tMethodResponses:\r\n\t\t\t- MethodResponse\r\n\t\tOperationName: String\r\n\t\tRequestModels:\r\n\t\t\tMap\r\n\t\tRequestParameters:\r\n\t\t\tMap\r\n\t\tRequestValidatorId: String\r\n\t\tResourceId: String #required\r\n\t\tRestApiId: String #required\r\n",
        "description": "AWS::ApiGateway::Method\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
    },
    "AWS::DMS::Endpoint": {
        "prefix": "dms-endpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::Endpoint\"\r\n\tProperties:\r\n\t\tSybaseSettings:\r\n\t\t\tSybaseSettings\r\n\t\tRedisSettings:\r\n\t\t\tRedisSettings\r\n\t\tOracleSettings:\r\n\t\t\tOracleSettings\r\n\t\tKafkaSettings:\r\n\t\t\tKafkaSettings\r\n\t\tPort: Integer\r\n\t\tMySqlSettings:\r\n\t\t\tMySqlSettings\r\n\t\tS3Settings:\r\n\t\t\tS3Settings\r\n\t\tResourceIdentifier: String\r\n\t\tKinesisSettings:\r\n\t\t\tKinesisSettings\r\n\t\tSslMode: String\r\n\t\tRedshiftSettings:\r\n\t\t\tRedshiftSettings\r\n\t\tEndpointType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tPassword: String\r\n\t\tMongoDbSettings:\r\n\t\t\tMongoDbSettings\r\n\t\tIbmDb2Settings:\r\n\t\t\tIbmDb2Settings\r\n\t\tKmsKeyId: String\r\n\t\tDatabaseName: String\r\n\t\tNeptuneSettings:\r\n\t\t\tNeptuneSettings\r\n\t\tElasticsearchSettings:\r\n\t\t\tElasticsearchSettings\r\n\t\tEngineName: String #required\r\n\t\tDocDbSettings:\r\n\t\t\tDocDbSettings\r\n\t\tDynamoDbSettings:\r\n\t\t\tDynamoDbSettings\r\n\t\tUsername: String\r\n\t\tMicrosoftSqlServerSettings:\r\n\t\t\tMicrosoftSqlServerSettings\r\n\t\tGcpMySQLSettings:\r\n\t\t\tGcpMySQLSettings\r\n\t\tServerName: String\r\n\t\tExtraConnectionAttributes: String\r\n\t\tEndpointIdentifier: String\r\n\t\tCertificateArn: String\r\n\t\tPostgreSqlSettings:\r\n\t\t\tPostgreSqlSettings\r\n",
        "description": "AWS::DMS::Endpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html"
    },
    "AWS::ServiceCatalog::LaunchNotificationConstraint": {
        "prefix": "servicecatalog-launchnotificationconstraint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchNotificationConstraint\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tNotificationArns: #required\r\n\t\t\t- String\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n",
        "description": "AWS::ServiceCatalog::LaunchNotificationConstraint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html"
    },
    "AWS::Pinpoint::APNSVoipChannel": {
        "prefix": "pinpoint-apnsvoipchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSVoipChannel\"\r\n\tProperties:\r\n\t\tBundleId: String\r\n\t\tPrivateKey: String\r\n\t\tEnabled: Boolean\r\n\t\tDefaultAuthenticationMethod: String\r\n\t\tTokenKey: String\r\n\t\tApplicationId: String #required\r\n\t\tTeamId: String\r\n\t\tCertificate: String\r\n\t\tTokenKeyId: String\r\n",
        "description": "AWS::Pinpoint::APNSVoipChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html"
    },
    "AWS::AppStream::StackUserAssociation": {
        "prefix": "appstream-stackuserassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::StackUserAssociation\"\r\n\tProperties:\r\n\t\tSendEmailNotification: Boolean\r\n\t\tUserName: String #required\r\n\t\tStackName: String #required\r\n\t\tAuthenticationType: String #required\r\n",
        "description": "AWS::AppStream::StackUserAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html"
    },
    "AWS::Pinpoint::EmailChannel": {
        "prefix": "pinpoint-emailchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::EmailChannel\"\r\n\tProperties:\r\n\t\tConfigurationSet: String\r\n\t\tFromAddress: String #required\r\n\t\tEnabled: Boolean\r\n\t\tApplicationId: String #required\r\n\t\tIdentity: String #required\r\n\t\tRoleArn: String\r\n",
        "description": "AWS::Pinpoint::EmailChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html"
    },
    "AWS::EC2::NetworkInsightsAnalysis": {
        "prefix": "ec2-networkinsightsanalysis",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInsightsAnalysis\"\r\n\tProperties:\r\n\t\tNetworkInsightsPathId: String #required\r\n\t\tFilterInArns:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::NetworkInsightsAnalysis\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html"
    },
    "AWS::ApiGatewayV2::IntegrationResponse": {
        "prefix": "apigatewayv2-integrationresponse",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::IntegrationResponse\"\r\n\tProperties:\r\n\t\tResponseTemplates: Json\r\n\t\tTemplateSelectionExpression: String\r\n\t\tResponseParameters: Json\r\n\t\tContentHandlingStrategy: String\r\n\t\tIntegrationId: String #required\r\n\t\tIntegrationResponseKey: String #required\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::ApiGatewayV2::IntegrationResponse\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html"
    },
    "AWS::ECS::TaskDefinition": {
        "prefix": "ecs-taskdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::TaskDefinition\"\r\n\tProperties:\r\n\t\tFamily: String\r\n\t\tContainerDefinitions:\r\n\t\t\t- ContainerDefinition\r\n\t\tCpu: String\r\n\t\tExecutionRoleArn: String\r\n\t\tEphemeralStorage:\r\n\t\t\tEphemeralStorage\r\n\t\tInferenceAccelerators:\r\n\t\t\t- InferenceAccelerator\r\n\t\tMemory: String\r\n\t\tNetworkMode: String\r\n\t\tPlacementConstraints:\r\n\t\t\t- TaskDefinitionPlacementConstraint\r\n\t\tProxyConfiguration:\r\n\t\t\tProxyConfiguration\r\n\t\tRequiresCompatibilities:\r\n\t\t\t- String\r\n\t\tTaskRoleArn: String\r\n\t\tVolumes:\r\n\t\t\t- Volume\r\n\t\tPidMode: String\r\n\t\tRuntimePlatform:\r\n\t\t\tRuntimePlatform\r\n\t\tIpcMode: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ECS::TaskDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html"
    },
    "AWS::Forecast::DatasetGroup": {
        "prefix": "forecast-datasetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Forecast::DatasetGroup\"\r\n\tProperties:\r\n\t\tDatasetArns:\r\n\t\t\t- String\r\n\t\tDatasetGroupName: String #required\r\n\t\tDomain: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Forecast::DatasetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html"
    },
    "AWS::EC2::NetworkInsightsAccessScope": {
        "prefix": "ec2-networkinsightsaccessscope",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInsightsAccessScope\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tMatchPaths:\r\n\t\t\t- AccessScopePathRequest\r\n\t\tExcludePaths:\r\n\t\t\t- AccessScopePathRequest\r\n",
        "description": "AWS::EC2::NetworkInsightsAccessScope\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html"
    },
    "AWS::IAM::ServerCertificate": {
        "prefix": "iam-servercertificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::ServerCertificate\"\r\n\tProperties:\r\n\t\tCertificateBody: String\r\n\t\tCertificateChain: String\r\n\t\tServerCertificateName: String\r\n\t\tPath: String\r\n\t\tPrivateKey: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IAM::ServerCertificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html"
    },
    "AWS::ElastiCache::CacheCluster": {
        "prefix": "elasticache-cachecluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::CacheCluster\"\r\n\tProperties:\r\n\t\tAZMode: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tCacheNodeType: String #required\r\n\t\tCacheParameterGroupName: String\r\n\t\tCacheSecurityGroupNames:\r\n\t\t\t- String\r\n\t\tCacheSubnetGroupName: String\r\n\t\tClusterName: String\r\n\t\tEngine: String #required\r\n\t\tEngineVersion: String\r\n\t\tLogDeliveryConfigurations:\r\n\t\t\t- LogDeliveryConfigurationRequest\r\n\t\tNotificationTopicArn: String\r\n\t\tNumCacheNodes: Integer #required\r\n\t\tPort: Integer\r\n\t\tPreferredAvailabilityZone: String\r\n\t\tPreferredAvailabilityZones:\r\n\t\t\t- String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tSnapshotArns:\r\n\t\t\t- String\r\n\t\tSnapshotName: String\r\n\t\tSnapshotRetentionLimit: Integer\r\n\t\tSnapshotWindow: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n",
        "description": "AWS::ElastiCache::CacheCluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html"
    },
    "AWS::IoT::ThingPrincipalAttachment": {
        "prefix": "iot-thingprincipalattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ThingPrincipalAttachment\"\r\n\tProperties:\r\n\t\tPrincipal: String #required\r\n\t\tThingName: String #required\r\n",
        "description": "AWS::IoT::ThingPrincipalAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html"
    },
    "AWS::CloudFormation::ModuleDefaultVersion": {
        "prefix": "cloudformation-moduledefaultversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::ModuleDefaultVersion\"\r\n\tProperties:\r\n\t\tArn: String\r\n\t\tModuleName: String\r\n\t\tVersionId: String\r\n",
        "description": "AWS::CloudFormation::ModuleDefaultVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html"
    },
    "AWS::MSK::Cluster": {
        "prefix": "msk-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MSK::Cluster\"\r\n\tProperties:\r\n\t\tBrokerNodeGroupInfo: #required\r\n\t\t\tBrokerNodeGroupInfo\r\n\t\tEnhancedMonitoring: String\r\n\t\tKafkaVersion: String #required\r\n\t\tNumberOfBrokerNodes: Integer #required\r\n\t\tEncryptionInfo:\r\n\t\t\tEncryptionInfo\r\n\t\tOpenMonitoring:\r\n\t\t\tOpenMonitoring\r\n\t\tClusterName: String #required\r\n\t\tClientAuthentication:\r\n\t\t\tClientAuthentication\r\n\t\tLoggingInfo:\r\n\t\t\tLoggingInfo\r\n\t\tTags: Json\r\n\t\tConfigurationInfo:\r\n\t\t\tConfigurationInfo\r\n",
        "description": "AWS::MSK::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html"
    },
    "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "prefix": "elasticloadbalancingv2-targetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::TargetGroup\"\r\n\tProperties:\r\n\t\tHealthCheckEnabled: Boolean\r\n\t\tHealthCheckIntervalSeconds: Integer\r\n\t\tHealthCheckPath: String\r\n\t\tHealthCheckPort: String\r\n\t\tHealthCheckProtocol: String\r\n\t\tHealthCheckTimeoutSeconds: Integer\r\n\t\tHealthyThresholdCount: Integer\r\n\t\tIpAddressType: String\r\n\t\tMatcher:\r\n\t\t\tMatcher\r\n\t\tName: String\r\n\t\tPort: Integer\r\n\t\tProtocol: String\r\n\t\tProtocolVersion: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTargetGroupAttributes:\r\n\t\t\t- TargetGroupAttribute\r\n\t\tTargetType: String\r\n\t\tTargets:\r\n\t\t\t- TargetDescription\r\n\t\tUnhealthyThresholdCount: Integer\r\n\t\tVpcId: String\r\n",
        "description": "AWS::ElasticLoadBalancingV2::TargetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html"
    },
    "AWS::ImageBuilder::ContainerRecipe": {
        "prefix": "imagebuilder-containerrecipe",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::ContainerRecipe\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tVersion: String #required\r\n\t\tComponents: #required\r\n\t\t\t- ComponentConfiguration\r\n\t\tInstanceConfiguration:\r\n\t\t\tInstanceConfiguration\r\n\t\tDockerfileTemplateData: String\r\n\t\tDockerfileTemplateUri: String\r\n\t\tPlatformOverride: String\r\n\t\tContainerType: String #required\r\n\t\tImageOsVersionOverride: String\r\n\t\tTargetRepository: #required\r\n\t\t\tTargetContainerRepository\r\n\t\tKmsKeyId: String\r\n\t\tParentImage: String #required\r\n\t\tWorkingDirectory: String\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::ContainerRecipe\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html"
    },
    "AWS::RoboMaker::Robot": {
        "prefix": "robomaker-robot",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::Robot\"\r\n\tProperties:\r\n\t\tFleet: String\r\n\t\tArchitecture: String #required\r\n\t\tGreengrassGroupId: String #required\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::RoboMaker::Robot\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html"
    },
    "AWS::Glue::Trigger": {
        "prefix": "glue-trigger",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Trigger\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tStartOnCreation: Boolean\r\n\t\tDescription: String\r\n\t\tActions: #required\r\n\t\t\t- Action\r\n\t\tWorkflowName: String\r\n\t\tSchedule: String\r\n\t\tTags: Json\r\n\t\tName: String\r\n\t\tPredicate:\r\n\t\t\tPredicate\r\n",
        "description": "AWS::Glue::Trigger\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html"
    },
    "AWS::SSM::Parameter": {
        "prefix": "ssm-parameter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Parameter\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tDescription: String\r\n\t\tPolicies: String\r\n\t\tAllowedPattern: String\r\n\t\tTier: String\r\n\t\tValue: String #required\r\n\t\tDataType: String\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::SSM::Parameter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html"
    },
    "AWS::Inspector::AssessmentTemplate": {
        "prefix": "inspector-assessmenttemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::AssessmentTemplate\"\r\n\tProperties:\r\n\t\tAssessmentTargetArn: String #required\r\n\t\tDurationInSeconds: Integer #required\r\n\t\tAssessmentTemplateName: String\r\n\t\tRulesPackageArns: #required\r\n\t\t\t- String\r\n\t\tUserAttributesForFindings:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Inspector::AssessmentTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html"
    },
    "AWS::AppMesh::Mesh": {
        "prefix": "appmesh-mesh",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::Mesh\"\r\n\tProperties:\r\n\t\tMeshName: String\r\n\t\tSpec:\r\n\t\t\tMeshSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::Mesh\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html"
    },
    "AWS::SSM::ResourceDataSync": {
        "prefix": "ssm-resourcedatasync",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::ResourceDataSync\"\r\n\tProperties:\r\n\t\tS3Destination:\r\n\t\t\tS3Destination\r\n\t\tKMSKeyArn: String\r\n\t\tSyncSource:\r\n\t\t\tSyncSource\r\n\t\tBucketName: String\r\n\t\tBucketRegion: String\r\n\t\tSyncFormat: String\r\n\t\tSyncName: String #required\r\n\t\tSyncType: String\r\n\t\tBucketPrefix: String\r\n",
        "description": "AWS::SSM::ResourceDataSync\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html"
    },
    "AWS::KinesisAnalytics::Application": {
        "prefix": "kinesisanalytics-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::Application\"\r\n\tProperties:\r\n\t\tApplicationName: String\r\n\t\tInputs: #required\r\n\t\t\t- Input\r\n\t\tApplicationDescription: String\r\n\t\tApplicationCode: String\r\n",
        "description": "AWS::KinesisAnalytics::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html"
    },
    "AWS::DynamoDB::Table": {
        "prefix": "dynamodb-table",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DynamoDB::Table\"\r\n\tProperties:\r\n\t\tAttributeDefinitions:\r\n\t\t\t- AttributeDefinition\r\n\t\tBillingMode: String\r\n\t\tContributorInsightsSpecification:\r\n\t\t\tContributorInsightsSpecification\r\n\t\tGlobalSecondaryIndexes:\r\n\t\t\t- GlobalSecondaryIndex\r\n\t\tKeySchema: #required\r\n\t\t\t- KeySchema\r\n\t\tKinesisStreamSpecification:\r\n\t\t\tKinesisStreamSpecification\r\n\t\tLocalSecondaryIndexes:\r\n\t\t\t- LocalSecondaryIndex\r\n\t\tPointInTimeRecoverySpecification:\r\n\t\t\tPointInTimeRecoverySpecification\r\n\t\tProvisionedThroughput:\r\n\t\t\tProvisionedThroughput\r\n\t\tSSESpecification:\r\n\t\t\tSSESpecification\r\n\t\tStreamSpecification:\r\n\t\t\tStreamSpecification\r\n\t\tTableClass: String\r\n\t\tTableName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTimeToLiveSpecification:\r\n\t\t\tTimeToLiveSpecification\r\n",
        "description": "AWS::DynamoDB::Table\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html"
    },
    "AWS::EC2::EC2Fleet": {
        "prefix": "ec2-ec2fleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EC2Fleet\"\r\n\tProperties:\r\n\t\tTargetCapacitySpecification: #required\r\n\t\t\tTargetCapacitySpecificationRequest\r\n\t\tOnDemandOptions:\r\n\t\t\tOnDemandOptionsRequest\r\n\t\tType: String\r\n\t\tExcessCapacityTerminationPolicy: String\r\n\t\tTagSpecifications:\r\n\t\t\t- TagSpecification\r\n\t\tSpotOptions:\r\n\t\t\tSpotOptionsRequest\r\n\t\tValidFrom: String\r\n\t\tReplaceUnhealthyInstances: Boolean\r\n\t\tLaunchTemplateConfigs: #required\r\n\t\t\t- FleetLaunchTemplateConfigRequest\r\n\t\tTerminateInstancesWithExpiration: Boolean\r\n\t\tValidUntil: String\r\n\t\tContext: String\r\n",
        "description": "AWS::EC2::EC2Fleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html"
    },
    "AWS::Lambda::Permission": {
        "prefix": "lambda-permission",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Permission\"\r\n\tProperties:\r\n\t\tAction: String #required\r\n\t\tEventSourceToken: String\r\n\t\tFunctionName: String #required\r\n\t\tPrincipal: String #required\r\n\t\tSourceAccount: String\r\n\t\tSourceArn: String\r\n",
        "description": "AWS::Lambda::Permission\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html"
    },
    "AWS::CertificateManager::Account": {
        "prefix": "certificatemanager-account",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CertificateManager::Account\"\r\n\tProperties:\r\n\t\tExpiryEventsConfiguration: #required\r\n\t\t\tExpiryEventsConfiguration\r\n",
        "description": "AWS::CertificateManager::Account\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html"
    },
    "AWS::ImageBuilder::ImageRecipe": {
        "prefix": "imagebuilder-imagerecipe",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::ImageRecipe\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tVersion: String #required\r\n\t\tComponents: #required\r\n\t\t\t- ComponentConfiguration\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- InstanceBlockDeviceMapping\r\n\t\tParentImage: String #required\r\n\t\tWorkingDirectory: String\r\n\t\tAdditionalInstanceConfiguration:\r\n\t\t\tAdditionalInstanceConfiguration\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::ImageRecipe\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html"
    },
    "AWS::CodeStar::GitHubRepository": {
        "prefix": "codestar-githubrepository",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStar::GitHubRepository\"\r\n\tProperties:\r\n\t\tEnableIssues: Boolean\r\n\t\tConnectionArn: String\r\n\t\tRepositoryName: String #required\r\n\t\tRepositoryAccessToken: String\r\n\t\tRepositoryOwner: String #required\r\n\t\tIsPrivate: Boolean\r\n\t\tCode:\r\n\t\t\tCode\r\n\t\tRepositoryDescription: String\r\n",
        "description": "AWS::CodeStar::GitHubRepository\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html"
    },
    "AWS::Chatbot::SlackChannelConfiguration": {
        "prefix": "chatbot-slackchannelconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Chatbot::SlackChannelConfiguration\"\r\n\tProperties:\r\n\t\tSlackWorkspaceId: String #required\r\n\t\tSlackChannelId: String #required\r\n\t\tConfigurationName: String #required\r\n\t\tIamRoleArn: String #required\r\n\t\tSnsTopicArns:\r\n\t\t\t- String\r\n\t\tLoggingLevel: String\r\n\t\tGuardrailPolicies:\r\n\t\t\t- String\r\n\t\tUserRoleRequired: Boolean\r\n",
        "description": "AWS::Chatbot::SlackChannelConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html"
    },
    "AWS::AppStream::AppBlock": {
        "prefix": "appstream-appblock",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::AppBlock\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tDisplayName: String\r\n\t\tSourceS3Location: #required\r\n\t\t\tS3Location\r\n\t\tSetupScriptDetails: #required\r\n\t\t\tScriptDetails\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppStream::AppBlock\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html"
    },
    "AWS::AutoScaling::AutoScalingGroup": {
        "prefix": "autoscaling-autoscalinggroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::AutoScalingGroup\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: String\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tCapacityRebalance: Boolean\r\n\t\tContext: String\r\n\t\tCooldown: String\r\n\t\tDesiredCapacity: String\r\n\t\tDesiredCapacityType: String\r\n\t\tHealthCheckGracePeriod: Integer\r\n\t\tHealthCheckType: String\r\n\t\tInstanceId: String\r\n\t\tLaunchConfigurationName: String\r\n\t\tLaunchTemplate:\r\n\t\t\tLaunchTemplateSpecification\r\n\t\tLifecycleHookSpecificationList:\r\n\t\t\t- LifecycleHookSpecification\r\n\t\tLoadBalancerNames:\r\n\t\t\t- String\r\n\t\tMaxInstanceLifetime: Integer\r\n\t\tMaxSize: String #required\r\n\t\tMetricsCollection:\r\n\t\t\t- MetricsCollection\r\n\t\tMinSize: String #required\r\n\t\tMixedInstancesPolicy:\r\n\t\t\tMixedInstancesPolicy\r\n\t\tNewInstancesProtectedFromScaleIn: Boolean\r\n\t\tNotificationConfigurations:\r\n\t\t\t- NotificationConfiguration\r\n\t\tPlacementGroup: String\r\n\t\tServiceLinkedRoleARN: String\r\n\t\tTags:\r\n\t\t\t- TagProperty\r\n\t\tTargetGroupARNs:\r\n\t\t\t- String\r\n\t\tTerminationPolicies:\r\n\t\t\t- String\r\n\t\tVPCZoneIdentifier:\r\n\t\t\t- String\r\n",
        "description": "AWS::AutoScaling::AutoScalingGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html"
    },
    "AWS::FraudDetector::Variable": {
        "prefix": "frauddetector-variable",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::Variable\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDataSource: String #required\r\n\t\tDataType: String #required\r\n\t\tDefaultValue: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVariableType: String\r\n",
        "description": "AWS::FraudDetector::Variable\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html"
    },
    "AWS::QuickSight::Theme": {
        "prefix": "quicksight-theme",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::Theme\"\r\n\tProperties:\r\n\t\tAwsAccountId: String #required\r\n\t\tBaseThemeId: String\r\n\t\tConfiguration:\r\n\t\t\tThemeConfiguration\r\n\t\tName: String\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThemeId: String #required\r\n\t\tVersionDescription: String\r\n",
        "description": "AWS::QuickSight::Theme\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html"
    },
    "AWS::Cassandra::Keyspace": {
        "prefix": "cassandra-keyspace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cassandra::Keyspace\"\r\n\tProperties:\r\n\t\tKeyspaceName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Cassandra::Keyspace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html"
    },
    "AWS::EC2::VPCDHCPOptionsAssociation": {
        "prefix": "ec2-vpcdhcpoptionsassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCDHCPOptionsAssociation\"\r\n\tProperties:\r\n\t\tDhcpOptionsId: String #required\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::VPCDHCPOptionsAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html"
    },
    "AWS::SSO::InstanceAccessControlAttributeConfiguration": {
        "prefix": "sso-instanceaccesscontrolattributeconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSO::InstanceAccessControlAttributeConfiguration\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tAccessControlAttributes:\r\n\t\t\t- AccessControlAttribute\r\n",
        "description": "AWS::SSO::InstanceAccessControlAttributeConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html"
    },
    "AWS::EC2::EnclaveCertificateIamRoleAssociation": {
        "prefix": "ec2-enclavecertificateiamroleassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EnclaveCertificateIamRoleAssociation\"\r\n\tProperties:\r\n\t\tCertificateArn: String #required\r\n\t\tRoleArn: String #required\r\n",
        "description": "AWS::EC2::EnclaveCertificateIamRoleAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html"
    },
    "AWS::DMS::ReplicationTask": {
        "prefix": "dms-replicationtask",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationTask\"\r\n\tProperties:\r\n\t\tReplicationTaskSettings: String\r\n\t\tCdcStartPosition: String\r\n\t\tCdcStopPosition: String\r\n\t\tMigrationType: String #required\r\n\t\tTargetEndpointArn: String #required\r\n\t\tReplicationInstanceArn: String #required\r\n\t\tTaskData: String\r\n\t\tCdcStartTime: Double\r\n\t\tResourceIdentifier: String\r\n\t\tTableMappings: String #required\r\n\t\tReplicationTaskIdentifier: String\r\n\t\tSourceEndpointArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DMS::ReplicationTask\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html"
    },
    "AWS::ServiceDiscovery::PublicDnsNamespace": {
        "prefix": "servicediscovery-publicdnsnamespace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::PublicDnsNamespace\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tProperties:\r\n\t\t\tProperties\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::ServiceDiscovery::PublicDnsNamespace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html"
    },
    "AWS::EC2::TrafficMirrorTarget": {
        "prefix": "ec2-trafficmirrortarget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorTarget\"\r\n\tProperties:\r\n\t\tNetworkLoadBalancerArn: String\r\n\t\tDescription: String\r\n\t\tNetworkInterfaceId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TrafficMirrorTarget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html"
    },
    "AWS::Config::StoredQuery": {
        "prefix": "config-storedquery",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::StoredQuery\"\r\n\tProperties:\r\n\t\tQueryName: String #required\r\n\t\tQueryDescription: String\r\n\t\tQueryExpression: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Config::StoredQuery\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html"
    },
    "AWS::MediaPackage::PackagingConfiguration": {
        "prefix": "mediapackage-packagingconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::PackagingConfiguration\"\r\n\tProperties:\r\n\t\tId: String #required\r\n\t\tPackagingGroupId: String #required\r\n\t\tCmafPackage:\r\n\t\t\tCmafPackage\r\n\t\tDashPackage:\r\n\t\t\tDashPackage\r\n\t\tHlsPackage:\r\n\t\t\tHlsPackage\r\n\t\tMssPackage:\r\n\t\t\tMssPackage\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MediaPackage::PackagingConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html"
    },
    "AWS::Glue::SecurityConfiguration": {
        "prefix": "glue-securityconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SecurityConfiguration\"\r\n\tProperties:\r\n\t\tEncryptionConfiguration: #required\r\n\t\t\tEncryptionConfiguration\r\n\t\tName: String #required\r\n",
        "description": "AWS::Glue::SecurityConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html"
    },
    "AWS::DMS::ReplicationInstance": {
        "prefix": "dms-replicationinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DMS::ReplicationInstance\"\r\n\tProperties:\r\n\t\tReplicationInstanceIdentifier: String\r\n\t\tEngineVersion: String\r\n\t\tKmsKeyId: String\r\n\t\tAvailabilityZone: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tReplicationSubnetGroupIdentifier: String\r\n\t\tAllocatedStorage: Integer\r\n\t\tResourceIdentifier: String\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tAllowMajorVersionUpgrade: Boolean\r\n\t\tReplicationInstanceClass: String #required\r\n\t\tPubliclyAccessible: Boolean\r\n\t\tMultiAZ: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DMS::ReplicationInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html"
    },
    "AWS::AutoScaling::ScheduledAction": {
        "prefix": "autoscaling-scheduledaction",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::ScheduledAction\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: String #required\r\n\t\tDesiredCapacity: Integer\r\n\t\tEndTime: String\r\n\t\tMaxSize: Integer\r\n\t\tMinSize: Integer\r\n\t\tRecurrence: String\r\n\t\tStartTime: String\r\n\t\tTimeZone: String\r\n",
        "description": "AWS::AutoScaling::ScheduledAction\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html"
    },
    "AWS::EC2::RouteTable": {
        "prefix": "ec2-routetable",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::RouteTable\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::RouteTable\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html"
    },
    "AWS::GlobalAccelerator::Accelerator": {
        "prefix": "globalaccelerator-accelerator",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::Accelerator\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tIpAddressType: String\r\n\t\tIpAddresses:\r\n\t\t\t- String\r\n\t\tEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::GlobalAccelerator::Accelerator\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html"
    },
    "AWS::AppStream::ApplicationFleetAssociation": {
        "prefix": "appstream-applicationfleetassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::ApplicationFleetAssociation\"\r\n\tProperties:\r\n\t\tFleetName: String #required\r\n\t\tApplicationArn: String #required\r\n",
        "description": "AWS::AppStream::ApplicationFleetAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html"
    },
    "AWS::AccessAnalyzer::Analyzer": {
        "prefix": "accessanalyzer-analyzer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AccessAnalyzer::Analyzer\"\r\n\tProperties:\r\n\t\tAnalyzerName: String\r\n\t\tArchiveRules:\r\n\t\t\t- ArchiveRule\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String #required\r\n",
        "description": "AWS::AccessAnalyzer::Analyzer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html"
    },
    "AWS::WAFRegional::RateBasedRule": {
        "prefix": "wafregional-ratebasedrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::RateBasedRule\"\r\n\tProperties:\r\n\t\tMetricName: String #required\r\n\t\tRateLimit: Integer #required\r\n\t\tMatchPredicates:\r\n\t\t\t- Predicate\r\n\t\tRateKey: String #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::RateBasedRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html"
    },
    "AWS::Lightsail::Instance": {
        "prefix": "lightsail-instance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Instance\"\r\n\tProperties:\r\n\t\tHardware:\r\n\t\t\tHardware\r\n\t\tNetworking:\r\n\t\t\tNetworking\r\n\t\tInstanceName: String #required\r\n\t\tAvailabilityZone: String\r\n\t\tBundleId: String #required\r\n\t\tBlueprintId: String #required\r\n\t\tAddOns:\r\n\t\t\t- AddOn\r\n\t\tUserData: String\r\n\t\tKeyPairName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::Instance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html"
    },
    "AWS::MemoryDB::User": {
        "prefix": "memorydb-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MemoryDB::User\"\r\n\tProperties:\r\n\t\tUserName: String #required\r\n\t\tAccessString: String #required\r\n\t\tAuthenticationMode: Json #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MemoryDB::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html"
    },
    "AWS::Pinpoint::SMSChannel": {
        "prefix": "pinpoint-smschannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::SMSChannel\"\r\n\tProperties:\r\n\t\tShortCode: String\r\n\t\tEnabled: Boolean\r\n\t\tApplicationId: String #required\r\n\t\tSenderId: String\r\n",
        "description": "AWS::Pinpoint::SMSChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html"
    },
    "AWS::EMR::InstanceFleetConfig": {
        "prefix": "emr-instancefleetconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::InstanceFleetConfig\"\r\n\tProperties:\r\n\t\tClusterId: String #required\r\n\t\tInstanceFleetType: String #required\r\n\t\tInstanceTypeConfigs:\r\n\t\t\t- InstanceTypeConfig\r\n\t\tLaunchSpecifications:\r\n\t\t\tInstanceFleetProvisioningSpecifications\r\n\t\tName: String\r\n\t\tTargetOnDemandCapacity: Integer\r\n\t\tTargetSpotCapacity: Integer\r\n",
        "description": "AWS::EMR::InstanceFleetConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html"
    },
    "AWS::WorkSpaces::Workspace": {
        "prefix": "workspaces-workspace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WorkSpaces::Workspace\"\r\n\tProperties:\r\n\t\tBundleId: String #required\r\n\t\tDirectoryId: String #required\r\n\t\tRootVolumeEncryptionEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUserName: String #required\r\n\t\tUserVolumeEncryptionEnabled: Boolean\r\n\t\tVolumeEncryptionKey: String\r\n\t\tWorkspaceProperties:\r\n\t\t\tWorkspaceProperties\r\n",
        "description": "AWS::WorkSpaces::Workspace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html"
    },
    "AWS::MediaPackage::Asset": {
        "prefix": "mediapackage-asset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::Asset\"\r\n\tProperties:\r\n\t\tId: String #required\r\n\t\tPackagingGroupId: String #required\r\n\t\tResourceId: String\r\n\t\tSourceArn: String #required\r\n\t\tSourceRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MediaPackage::Asset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html"
    },
    "AWS::ApiGatewayV2::Route": {
        "prefix": "apigatewayv2-route",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Route\"\r\n\tProperties:\r\n\t\tTarget: String\r\n\t\tRouteResponseSelectionExpression: String\r\n\t\tAuthorizerId: String\r\n\t\tRequestModels: Json\r\n\t\tOperationName: String\r\n\t\tAuthorizationScopes:\r\n\t\t\t- String\r\n\t\tApiKeyRequired: Boolean\r\n\t\tRouteKey: String #required\r\n\t\tAuthorizationType: String\r\n\t\tModelSelectionExpression: String\r\n\t\tApiId: String #required\r\n\t\tRequestParameters: Json\r\n",
        "description": "AWS::ApiGatewayV2::Route\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html"
    },
    "AWS::SageMaker::Workteam": {
        "prefix": "sagemaker-workteam",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Workteam\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tNotificationConfiguration:\r\n\t\t\tNotificationConfiguration\r\n\t\tWorkteamName: String\r\n\t\tMemberDefinitions:\r\n\t\t\t- MemberDefinition\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::Workteam\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html"
    },
    "AWS::AutoScaling::LaunchConfiguration": {
        "prefix": "autoscaling-launchconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::LaunchConfiguration\"\r\n\tProperties:\r\n\t\tAssociatePublicIpAddress: Boolean\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- BlockDeviceMapping\r\n\t\tClassicLinkVPCId: String\r\n\t\tClassicLinkVPCSecurityGroups:\r\n\t\t\t- String\r\n\t\tEbsOptimized: Boolean\r\n\t\tIamInstanceProfile: String\r\n\t\tImageId: String #required\r\n\t\tInstanceId: String\r\n\t\tInstanceMonitoring: Boolean\r\n\t\tInstanceType: String #required\r\n\t\tKernelId: String\r\n\t\tKeyName: String\r\n\t\tLaunchConfigurationName: String\r\n\t\tMetadataOptions:\r\n\t\t\tMetadataOptions\r\n\t\tPlacementTenancy: String\r\n\t\tRamDiskId: String\r\n\t\tSecurityGroups:\r\n\t\t\t- String\r\n\t\tSpotPrice: String\r\n\t\tUserData: String\r\n",
        "description": "AWS::AutoScaling::LaunchConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html"
    },
    "AWS::SQS::Queue": {
        "prefix": "sqs-queue",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SQS::Queue\"\r\n\tProperties:\r\n\t\tContentBasedDeduplication: Boolean\r\n\t\tDeduplicationScope: String\r\n\t\tDelaySeconds: Integer\r\n\t\tFifoQueue: Boolean\r\n\t\tFifoThroughputLimit: String\r\n\t\tKmsDataKeyReusePeriodSeconds: Integer\r\n\t\tKmsMasterKeyId: String\r\n\t\tMaximumMessageSize: Integer\r\n\t\tMessageRetentionPeriod: Integer\r\n\t\tQueueName: String\r\n\t\tReceiveMessageWaitTimeSeconds: Integer\r\n\t\tRedriveAllowPolicy: Json\r\n\t\tRedrivePolicy: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVisibilityTimeout: Integer\r\n",
        "description": "AWS::SQS::Queue\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html"
    },
    "AWS::EC2::TransitGateway": {
        "prefix": "ec2-transitgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGateway\"\r\n\tProperties:\r\n\t\tDefaultRouteTablePropagation: String\r\n\t\tDescription: String\r\n\t\tAutoAcceptSharedAttachments: String\r\n\t\tDefaultRouteTableAssociation: String\r\n\t\tVpnEcmpSupport: String\r\n\t\tDnsSupport: String\r\n\t\tMulticastSupport: String\r\n\t\tAmazonSideAsn: Integer\r\n\t\tTransitGatewayCidrBlocks:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAssociationDefaultRouteTableId: String\r\n\t\tPropagationDefaultRouteTableId: String\r\n",
        "description": "AWS::EC2::TransitGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html"
    },
    "AWS::EC2::CapacityReservationFleet": {
        "prefix": "ec2-capacityreservationfleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::CapacityReservationFleet\"\r\n\tProperties:\r\n\t\tAllocationStrategy: String\r\n\t\tTagSpecifications:\r\n\t\t\t- TagSpecification\r\n\t\tInstanceTypeSpecifications:\r\n\t\t\t- InstanceTypeSpecification\r\n\t\tTotalTargetCapacity: Integer\r\n\t\tEndDate: String\r\n\t\tInstanceMatchCriteria: String\r\n\t\tTenancy: String\r\n\t\tRemoveEndDate: Boolean\r\n\t\tNoRemoveEndDate: Boolean\r\n",
        "description": "AWS::EC2::CapacityReservationFleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html"
    },
    "AWS::CloudWatch::Dashboard": {
        "prefix": "cloudwatch-dashboard",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::Dashboard\"\r\n\tProperties:\r\n\t\tDashboardName: String\r\n\t\tDashboardBody: String #required\r\n",
        "description": "AWS::CloudWatch::Dashboard\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html"
    },
    "AWS::ServiceCatalog::ServiceActionAssociation": {
        "prefix": "servicecatalog-serviceactionassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::ServiceActionAssociation\"\r\n\tProperties:\r\n\t\tProductId: String #required\r\n\t\tProvisioningArtifactId: String #required\r\n\t\tServiceActionId: String #required\r\n",
        "description": "AWS::ServiceCatalog::ServiceActionAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html"
    },
    "AWS::IAM::Policy": {
        "prefix": "iam-policy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::Policy\"\r\n\tProperties:\r\n\t\tGroups:\r\n\t\t\t- String\r\n\t\tPolicyDocument: Json #required\r\n\t\tPolicyName: String #required\r\n\t\tRoles:\r\n\t\t\t- String\r\n\t\tUsers:\r\n\t\t\t- String\r\n",
        "description": "AWS::IAM::Policy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html"
    },
    "AWS::StepFunctions::Activity": {
        "prefix": "stepfunctions-activity",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::StepFunctions::Activity\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::StepFunctions::Activity\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html"
    },
    "AWS::CodeStarConnections::Connection": {
        "prefix": "codestarconnections-connection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStarConnections::Connection\"\r\n\tProperties:\r\n\t\tConnectionName: String #required\r\n\t\tProviderType: String\r\n\t\tHostArn: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeStarConnections::Connection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html"
    },
    "AWS::CloudFront::KeyGroup": {
        "prefix": "cloudfront-keygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::KeyGroup\"\r\n\tProperties:\r\n\t\tKeyGroupConfig: #required\r\n\t\t\tKeyGroupConfig\r\n",
        "description": "AWS::CloudFront::KeyGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html"
    },
    "AWS::Connect::UserHierarchyGroup": {
        "prefix": "connect-userhierarchygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::UserHierarchyGroup\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tParentGroupArn: String\r\n\t\tName: String #required\r\n",
        "description": "AWS::Connect::UserHierarchyGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html"
    },
    "AWS::Glue::SchemaVersion": {
        "prefix": "glue-schemaversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::SchemaVersion\"\r\n\tProperties:\r\n\t\tSchema: #required\r\n\t\t\tSchema\r\n\t\tSchemaDefinition: String #required\r\n",
        "description": "AWS::Glue::SchemaVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html"
    },
    "AWS::EC2::Volume": {
        "prefix": "ec2-volume",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Volume\"\r\n\tProperties:\r\n\t\tAutoEnableIO: Boolean\r\n\t\tAvailabilityZone: String #required\r\n\t\tEncrypted: Boolean\r\n\t\tIops: Integer\r\n\t\tKmsKeyId: String\r\n\t\tMultiAttachEnabled: Boolean\r\n\t\tOutpostArn: String\r\n\t\tSize: Integer\r\n\t\tSnapshotId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThroughput: Integer\r\n\t\tVolumeType: String\r\n",
        "description": "AWS::EC2::Volume\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
    },
    "AWS::IAM::ServiceLinkedRole": {
        "prefix": "iam-servicelinkedrole",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::ServiceLinkedRole\"\r\n\tProperties:\r\n\t\tCustomSuffix: String\r\n\t\tDescription: String\r\n\t\tAWSServiceName: String #required\r\n",
        "description": "AWS::IAM::ServiceLinkedRole\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html"
    },
    "AWS::GroundStation::Config": {
        "prefix": "groundstation-config",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GroundStation::Config\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tConfigData: #required\r\n\t\t\tConfigData\r\n",
        "description": "AWS::GroundStation::Config\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html"
    },
    "AWS::GuardDuty::Filter": {
        "prefix": "guardduty-filter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Filter\"\r\n\tProperties:\r\n\t\tAction: String #required\r\n\t\tDescription: String #required\r\n\t\tDetectorId: String #required\r\n\t\tFindingCriteria: #required\r\n\t\t\tFindingCriteria\r\n\t\tRank: Integer #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::GuardDuty::Filter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html"
    },
    "AWS::Budgets::BudgetsAction": {
        "prefix": "budgets-budgetsaction",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Budgets::BudgetsAction\"\r\n\tProperties:\r\n\t\tBudgetName: String #required\r\n\t\tNotificationType: String #required\r\n\t\tActionType: String #required\r\n\t\tActionThreshold: #required\r\n\t\t\tActionThreshold\r\n\t\tExecutionRoleArn: String #required\r\n\t\tApprovalModel: String\r\n\t\tSubscribers: #required\r\n\t\t\t- Subscriber\r\n\t\tDefinition: #required\r\n\t\t\tDefinition\r\n",
        "description": "AWS::Budgets::BudgetsAction\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html"
    },
    "AWS::S3::AccessPoint": {
        "prefix": "s3-accesspoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::AccessPoint\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tBucket: String #required\r\n\t\tVpcConfiguration:\r\n\t\t\tVpcConfiguration\r\n\t\tPublicAccessBlockConfiguration:\r\n\t\t\tPublicAccessBlockConfiguration\r\n\t\tPolicy: Json\r\n\t\tPolicyStatus: Json\r\n",
        "description": "AWS::S3::AccessPoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
    },
    "AWS::SNS::Subscription": {
        "prefix": "sns-subscription",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::Subscription\"\r\n\tProperties:\r\n\t\tDeliveryPolicy: Json\r\n\t\tEndpoint: String\r\n\t\tFilterPolicy: Json\r\n\t\tProtocol: String #required\r\n\t\tRawMessageDelivery: Boolean\r\n\t\tRedrivePolicy: Json\r\n\t\tRegion: String\r\n\t\tSubscriptionRoleArn: String\r\n\t\tTopicArn: String #required\r\n",
        "description": "AWS::SNS::Subscription\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html"
    },
    "AWS::EFS::MountTarget": {
        "prefix": "efs-mounttarget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::MountTarget\"\r\n\tProperties:\r\n\t\tIpAddress: String\r\n\t\tFileSystemId: String #required\r\n\t\tSecurityGroups: #required\r\n\t\t\t- String\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EFS::MountTarget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html"
    },
    "AWS::Glue::DataCatalogEncryptionSettings": {
        "prefix": "glue-datacatalogencryptionsettings",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::DataCatalogEncryptionSettings\"\r\n\tProperties:\r\n\t\tDataCatalogEncryptionSettings: #required\r\n\t\t\tDataCatalogEncryptionSettings\r\n\t\tCatalogId: String #required\r\n",
        "description": "AWS::Glue::DataCatalogEncryptionSettings\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html"
    },
    "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
        "prefix": "sagemaker-notebookinstancelifecycleconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::NotebookInstanceLifecycleConfig\"\r\n\tProperties:\r\n\t\tOnStart:\r\n\t\t\t- NotebookInstanceLifecycleHook\r\n\t\tNotebookInstanceLifecycleConfigName: String\r\n\t\tOnCreate:\r\n\t\t\t- NotebookInstanceLifecycleHook\r\n",
        "description": "AWS::SageMaker::NotebookInstanceLifecycleConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html"
    },
    "AWS::MediaConnect::FlowSource": {
        "prefix": "mediaconnect-flowsource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConnect::FlowSource\"\r\n\tProperties:\r\n\t\tFlowArn: String\r\n\t\tDecryption:\r\n\t\t\tEncryption\r\n\t\tDescription: String #required\r\n\t\tEntitlementArn: String\r\n\t\tIngestPort: Integer\r\n\t\tMaxBitrate: Integer\r\n\t\tMaxLatency: Integer\r\n\t\tName: String #required\r\n\t\tProtocol: String\r\n\t\tStreamId: String\r\n\t\tVpcInterfaceName: String\r\n\t\tWhitelistCidr: String\r\n",
        "description": "AWS::MediaConnect::FlowSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html"
    },
    "AWS::ApiGateway::Deployment": {
        "prefix": "apigateway-deployment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Deployment\"\r\n\tProperties:\r\n\t\tDeploymentCanarySettings:\r\n\t\t\tDeploymentCanarySettings\r\n\t\tDescription: String\r\n\t\tRestApiId: String #required\r\n\t\tStageDescription:\r\n\t\t\tStageDescription\r\n\t\tStageName: String\r\n",
        "description": "AWS::ApiGateway::Deployment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html"
    },
    "AWS::Cognito::UserPoolGroup": {
        "prefix": "cognito-userpoolgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolGroup\"\r\n\tProperties:\r\n\t\tGroupName: String\r\n\t\tDescription: String\r\n\t\tUserPoolId: String #required\r\n\t\tPrecedence: Double\r\n\t\tRoleArn: String\r\n",
        "description": "AWS::Cognito::UserPoolGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html"
    },
    "AWS::LakeFormation::Permissions": {
        "prefix": "lakeformation-permissions",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LakeFormation::Permissions\"\r\n\tProperties:\r\n\t\tDataLakePrincipal: #required\r\n\t\t\tDataLakePrincipal\r\n\t\tResource: #required\r\n\t\t\tResource\r\n\t\tPermissions:\r\n\t\t\t- String\r\n\t\tPermissionsWithGrantOption:\r\n\t\t\t- String\r\n",
        "description": "AWS::LakeFormation::Permissions\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html"
    },
    "AWS::KMS::Key": {
        "prefix": "kms-key",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KMS::Key\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tEnabled: Boolean\r\n\t\tEnableKeyRotation: Boolean\r\n\t\tKeyPolicy: Json #required\r\n\t\tKeyUsage: String\r\n\t\tKeySpec: String\r\n\t\tMultiRegion: Boolean\r\n\t\tPendingWindowInDays: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::KMS::Key\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html"
    },
    "AWS::CustomerProfiles::Domain": {
        "prefix": "customerprofiles-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CustomerProfiles::Domain\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tDeadLetterQueueUrl: String\r\n\t\tDefaultEncryptionKey: String\r\n\t\tDefaultExpirationDays: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CustomerProfiles::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html"
    },
    "AWS::ApplicationInsights::Application": {
        "prefix": "applicationinsights-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationInsights::Application\"\r\n\tProperties:\r\n\t\tResourceGroupName: String #required\r\n\t\tCWEMonitorEnabled: Boolean\r\n\t\tOpsCenterEnabled: Boolean\r\n\t\tOpsItemSNSTopicArn: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCustomComponents:\r\n\t\t\t- CustomComponent\r\n\t\tLogPatternSets:\r\n\t\t\t- LogPatternSet\r\n\t\tAutoConfigurationEnabled: Boolean\r\n\t\tComponentMonitoringSettings:\r\n\t\t\t- ComponentMonitoringSetting\r\n",
        "description": "AWS::ApplicationInsights::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html"
    },
    "AWS::NimbleStudio::StreamingImage": {
        "prefix": "nimblestudio-streamingimage",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NimbleStudio::StreamingImage\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tEc2ImageId: String #required\r\n\t\tName: String #required\r\n\t\tStudioId: String #required\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::NimbleStudio::StreamingImage\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-streamingimage.html"
    },
    "AWS::OpsWorks::App": {
        "prefix": "opsworks-app",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::App\"\r\n\tProperties:\r\n\t\tAppSource:\r\n\t\t\tSource\r\n\t\tAttributes:\r\n\t\t\tMap\r\n\t\tDataSources:\r\n\t\t\t- DataSource\r\n\t\tDescription: String\r\n\t\tDomains:\r\n\t\t\t- String\r\n\t\tEnableSsl: Boolean\r\n\t\tEnvironment:\r\n\t\t\t- EnvironmentVariable\r\n\t\tName: String #required\r\n\t\tShortname: String\r\n\t\tSslConfiguration:\r\n\t\t\tSslConfiguration\r\n\t\tStackId: String #required\r\n\t\tType: String #required\r\n",
        "description": "AWS::OpsWorks::App\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html"
    },
    "AWS::Lambda::EventSourceMapping": {
        "prefix": "lambda-eventsourcemapping",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::EventSourceMapping\"\r\n\tProperties:\r\n\t\tBatchSize: Integer\r\n\t\tBisectBatchOnFunctionError: Boolean\r\n\t\tDestinationConfig:\r\n\t\t\tDestinationConfig\r\n\t\tEnabled: Boolean\r\n\t\tEventSourceArn: String\r\n\t\tFilterCriteria: Json\r\n\t\tFunctionName: String #required\r\n\t\tMaximumBatchingWindowInSeconds: Integer\r\n\t\tMaximumRecordAgeInSeconds: Integer\r\n\t\tMaximumRetryAttempts: Integer\r\n\t\tParallelizationFactor: Integer\r\n\t\tStartingPosition: String\r\n\t\tStartingPositionTimestamp: Double\r\n\t\tTopics:\r\n\t\t\t- String\r\n\t\tQueues:\r\n\t\t\t- String\r\n\t\tSourceAccessConfigurations:\r\n\t\t\t- SourceAccessConfiguration\r\n\t\tTumblingWindowInSeconds: Integer\r\n\t\tFunctionResponseTypes:\r\n\t\t\t- String\r\n\t\tSelfManagedEventSource:\r\n\t\t\tSelfManagedEventSource\r\n",
        "description": "AWS::Lambda::EventSourceMapping\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html"
    },
    "AWS::AppConfig::Deployment": {
        "prefix": "appconfig-deployment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Deployment\"\r\n\tProperties:\r\n\t\tDeploymentStrategyId: String #required\r\n\t\tConfigurationProfileId: String #required\r\n\t\tEnvironmentId: String #required\r\n\t\tDescription: String\r\n\t\tConfigurationVersion: String #required\r\n\t\tApplicationId: String #required\r\n\t\tTags:\r\n\t\t\t- Tags\r\n",
        "description": "AWS::AppConfig::Deployment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html"
    },
    "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": {
        "prefix": "apigatewayv2-apigatewaymanagedoverrides",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::ApiGatewayManagedOverrides\"\r\n\tProperties:\r\n\t\tIntegration:\r\n\t\t\tIntegrationOverrides\r\n\t\tStage:\r\n\t\t\tStageOverrides\r\n\t\tApiId: String #required\r\n\t\tRoute:\r\n\t\t\tRouteOverrides\r\n",
        "description": "AWS::ApiGatewayV2::ApiGatewayManagedOverrides\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html"
    },
    "AWS::ApiGateway::Authorizer": {
        "prefix": "apigateway-authorizer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Authorizer\"\r\n\tProperties:\r\n\t\tRestApiId: String #required\r\n\t\tAuthType: String\r\n\t\tAuthorizerCredentials: String\r\n\t\tAuthorizerResultTtlInSeconds: Integer\r\n\t\tAuthorizerUri: String\r\n\t\tIdentitySource: String\r\n\t\tIdentityValidationExpression: String\r\n\t\tName: String #required\r\n\t\tProviderARNs:\r\n\t\t\t- String\r\n\t\tType: String #required\r\n",
        "description": "AWS::ApiGateway::Authorizer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html"
    },
    "AWS::EC2::LocalGatewayRoute": {
        "prefix": "ec2-localgatewayroute",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::LocalGatewayRoute\"\r\n\tProperties:\r\n\t\tDestinationCidrBlock: String #required\r\n\t\tLocalGatewayRouteTableId: String #required\r\n\t\tLocalGatewayVirtualInterfaceGroupId: String #required\r\n",
        "description": "AWS::EC2::LocalGatewayRoute\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html"
    },
    "AWS::QLDB::Stream": {
        "prefix": "qldb-stream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QLDB::Stream\"\r\n\tProperties:\r\n\t\tLedgerName: String #required\r\n\t\tStreamName: String #required\r\n\t\tRoleArn: String #required\r\n\t\tInclusiveStartTime: String #required\r\n\t\tExclusiveEndTime: String\r\n\t\tKinesisConfiguration: #required\r\n\t\t\tKinesisConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::QLDB::Stream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html"
    },
    "AWS::WAFRegional::GeoMatchSet": {
        "prefix": "wafregional-geomatchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::GeoMatchSet\"\r\n\tProperties:\r\n\t\tGeoMatchConstraints:\r\n\t\t\t- GeoMatchConstraint\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::GeoMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html"
    },
    "AWS::Batch::JobDefinition": {
        "prefix": "batch-jobdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::JobDefinition\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tParameters: Json\r\n\t\tNodeProperties:\r\n\t\t\tNodeProperties\r\n\t\tSchedulingPriority: Integer\r\n\t\tTimeout:\r\n\t\t\tTimeout\r\n\t\tContainerProperties:\r\n\t\t\tContainerProperties\r\n\t\tJobDefinitionName: String\r\n\t\tPropagateTags: Boolean\r\n\t\tPlatformCapabilities:\r\n\t\t\t- String\r\n\t\tRetryStrategy:\r\n\t\t\tRetryStrategy\r\n\t\tTags: Json\r\n",
        "description": "AWS::Batch::JobDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html"
    },
    "AWS::Evidently::Launch": {
        "prefix": "evidently-launch",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Evidently::Launch\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tProject: String #required\r\n\t\tDescription: String\r\n\t\tRandomizationSalt: String\r\n\t\tScheduledSplitsConfig: #required\r\n\t\t\t- StepConfig\r\n\t\tGroups: #required\r\n\t\t\t- LaunchGroupObject\r\n\t\tMetricMonitors:\r\n\t\t\t- MetricDefinitionObject\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Evidently::Launch\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html"
    },
    "AWS::DataBrew::Dataset": {
        "prefix": "databrew-dataset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Dataset\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tFormat: String\r\n\t\tFormatOptions:\r\n\t\t\tFormatOptions\r\n\t\tInput: #required\r\n\t\t\tInput\r\n\t\tPathOptions:\r\n\t\t\tPathOptions\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataBrew::Dataset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html"
    },
    "AWS::EC2::TransitGatewayVpcAttachment": {
        "prefix": "ec2-transitgatewayvpcattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayVpcAttachment\"\r\n\tProperties:\r\n\t\tTransitGatewayId: String\r\n\t\tVpcId: String\r\n\t\tSubnetIds:\r\n\t\t\t- String\r\n\t\tAddSubnetIds:\r\n\t\t\t- String\r\n\t\tRemoveSubnetIds:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tOptions: Json\r\n",
        "description": "AWS::EC2::TransitGatewayVpcAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html"
    },
    "AWS::GameLift::Fleet": {
        "prefix": "gamelift-fleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::Fleet\"\r\n\tProperties:\r\n\t\tCertificateConfiguration:\r\n\t\t\tCertificateConfiguration\r\n\t\tDescription: String\r\n\t\tDesiredEC2Instances: Integer\r\n\t\tEC2InboundPermissions:\r\n\t\t\t- IpPermission\r\n\t\tEC2InstanceType: String\r\n\t\tFleetType: String\r\n\t\tInstanceRoleARN: String\r\n\t\tLocations:\r\n\t\t\t- LocationConfiguration\r\n\t\tMaxSize: Integer\r\n\t\tMetricGroups:\r\n\t\t\t- String\r\n\t\tMinSize: Integer\r\n\t\tName: String\r\n\t\tNewGameSessionProtectionPolicy: String\r\n\t\tPeerVpcAwsAccountId: String\r\n\t\tPeerVpcId: String\r\n\t\tResourceCreationLimitPolicy:\r\n\t\t\tResourceCreationLimitPolicy\r\n\t\tBuildId: String\r\n\t\tScriptId: String\r\n\t\tRuntimeConfiguration:\r\n\t\t\tRuntimeConfiguration\r\n",
        "description": "AWS::GameLift::Fleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html"
    },
    "AWS::EC2::VPCEndpointConnectionNotification": {
        "prefix": "ec2-vpcendpointconnectionnotification",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointConnectionNotification\"\r\n\tProperties:\r\n\t\tConnectionEvents: #required\r\n\t\t\t- String\r\n\t\tVPCEndpointId: String\r\n\t\tServiceId: String\r\n\t\tConnectionNotificationArn: String #required\r\n",
        "description": "AWS::EC2::VPCEndpointConnectionNotification\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html"
    },
    "AWS::AppMesh::GatewayRoute": {
        "prefix": "appmesh-gatewayroute",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::GatewayRoute\"\r\n\tProperties:\r\n\t\tMeshName: String #required\r\n\t\tVirtualGatewayName: String #required\r\n\t\tMeshOwner: String\r\n\t\tGatewayRouteName: String\r\n\t\tSpec: #required\r\n\t\t\tGatewayRouteSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::GatewayRoute\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html"
    },
    "AWS::ElastiCache::User": {
        "prefix": "elasticache-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::User\"\r\n\tProperties:\r\n\t\tUserId: String #required\r\n\t\tUserName: String #required\r\n\t\tEngine: String #required\r\n\t\tAccessString: String\r\n\t\tNoPasswordRequired: Boolean\r\n\t\tPasswords:\r\n\t\t\t- String\r\n",
        "description": "AWS::ElastiCache::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html"
    },
    "AWS::SageMaker::UserProfile": {
        "prefix": "sagemaker-userprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::UserProfile\"\r\n\tProperties:\r\n\t\tDomainId: String #required\r\n\t\tSingleSignOnUserIdentifier: String\r\n\t\tSingleSignOnUserValue: String\r\n\t\tUserProfileName: String #required\r\n\t\tUserSettings:\r\n\t\t\tUserSettings\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::UserProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html"
    },
    "AWS::EC2::IPAMAllocation": {
        "prefix": "ec2-ipamallocation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::IPAMAllocation\"\r\n\tProperties:\r\n\t\tIpamPoolId: String #required\r\n\t\tCidr: String\r\n\t\tNetmaskLength: Integer\r\n\t\tDescription: String\r\n",
        "description": "AWS::EC2::IPAMAllocation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html"
    },
    "AWS::ElasticLoadBalancing::LoadBalancer": {
        "prefix": "elasticloadbalancing-loadbalancer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancing::LoadBalancer\"\r\n\tProperties:\r\n\t\tAccessLoggingPolicy:\r\n\t\t\tAccessLoggingPolicy\r\n\t\tAppCookieStickinessPolicy:\r\n\t\t\t- AppCookieStickinessPolicy\r\n\t\tAvailabilityZones:\r\n\t\t\t- String\r\n\t\tConnectionDrainingPolicy:\r\n\t\t\tConnectionDrainingPolicy\r\n\t\tConnectionSettings:\r\n\t\t\tConnectionSettings\r\n\t\tCrossZone: Boolean\r\n\t\tHealthCheck:\r\n\t\t\tHealthCheck\r\n\t\tInstances:\r\n\t\t\t- String\r\n\t\tLBCookieStickinessPolicy:\r\n\t\t\t- LBCookieStickinessPolicy\r\n\t\tListeners: #required\r\n\t\t\t- Listeners\r\n\t\tLoadBalancerName: String\r\n\t\tPolicies:\r\n\t\t\t- Policies\r\n\t\tScheme: String\r\n\t\tSecurityGroups:\r\n\t\t\t- String\r\n\t\tSubnets:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ElasticLoadBalancing::LoadBalancer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html"
    },
    "AWS::AppStream::ApplicationEntitlementAssociation": {
        "prefix": "appstream-applicationentitlementassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::ApplicationEntitlementAssociation\"\r\n\tProperties:\r\n\t\tStackName: String #required\r\n\t\tEntitlementName: String #required\r\n\t\tApplicationIdentifier: String #required\r\n",
        "description": "AWS::AppStream::ApplicationEntitlementAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html"
    },
    "AWS::IoT::JobTemplate": {
        "prefix": "iot-jobtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::JobTemplate\"\r\n\tProperties:\r\n\t\tJobArn: String\r\n\t\tTimeoutConfig: Json\r\n\t\tJobExecutionsRolloutConfig: Json\r\n\t\tDescription: String #required\r\n\t\tJobExecutionsRetryConfig: Json\r\n\t\tDocumentSource: String\r\n\t\tAbortConfig: Json\r\n\t\tJobTemplateId: String #required\r\n\t\tDocument: String\r\n\t\tPresignedUrlConfig: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::JobTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html"
    },
    "AWS::Evidently::Experiment": {
        "prefix": "evidently-experiment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Evidently::Experiment\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tProject: String #required\r\n\t\tDescription: String\r\n\t\tRandomizationSalt: String\r\n\t\tTreatments: #required\r\n\t\t\t- TreatmentObject\r\n\t\tMetricGoals: #required\r\n\t\t\t- MetricGoalObject\r\n\t\tSamplingRate: Integer\r\n\t\tOnlineAbConfig: #required\r\n\t\t\tOnlineAbConfigObject\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Evidently::Experiment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html"
    },
    "AWS::CodeArtifact::Repository": {
        "prefix": "codeartifact-repository",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeArtifact::Repository\"\r\n\tProperties:\r\n\t\tRepositoryName: String #required\r\n\t\tDomainName: String #required\r\n\t\tDomainOwner: String\r\n\t\tDescription: String\r\n\t\tExternalConnections:\r\n\t\t\t- String\r\n\t\tUpstreams:\r\n\t\t\t- String\r\n\t\tPermissionsPolicyDocument: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeArtifact::Repository\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html"
    },
    "AWS::ApiGatewayV2::Stage": {
        "prefix": "apigatewayv2-stage",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Stage\"\r\n\tProperties:\r\n\t\tClientCertificateId: String\r\n\t\tDeploymentId: String\r\n\t\tDescription: String\r\n\t\tAccessLogSettings:\r\n\t\t\tAccessLogSettings\r\n\t\tAutoDeploy: Boolean\r\n\t\tRouteSettings: Json\r\n\t\tStageName: String #required\r\n\t\tStageVariables: Json\r\n\t\tAccessPolicyId: String\r\n\t\tApiId: String #required\r\n\t\tDefaultRouteSettings:\r\n\t\t\tRouteSettings\r\n\t\tTags: Json\r\n",
        "description": "AWS::ApiGatewayV2::Stage\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html"
    },
    "AWS::ApiGateway::Model": {
        "prefix": "apigateway-model",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Model\"\r\n\tProperties:\r\n\t\tContentType: String\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tRestApiId: String #required\r\n\t\tSchema: Json\r\n",
        "description": "AWS::ApiGateway::Model\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html"
    },
    "AWS::Forecast::Dataset": {
        "prefix": "forecast-dataset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Forecast::Dataset\"\r\n\tProperties:\r\n\t\tDatasetName: String #required\r\n\t\tDatasetType: String #required\r\n\t\tDataFrequency: String\r\n\t\tDomain: String #required\r\n\t\tEncryptionConfig: Json\r\n\t\tSchema: Json #required\r\n\t\tTags:\r\n\t\t\t- Json\r\n",
        "description": "AWS::Forecast::Dataset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html"
    },
    "AWS::SageMaker::ModelExplainabilityJobDefinition": {
        "prefix": "sagemaker-modelexplainabilityjobdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::ModelExplainabilityJobDefinition\"\r\n\tProperties:\r\n\t\tJobDefinitionName: String\r\n\t\tModelExplainabilityBaselineConfig:\r\n\t\t\tModelExplainabilityBaselineConfig\r\n\t\tModelExplainabilityAppSpecification: #required\r\n\t\t\tModelExplainabilityAppSpecification\r\n\t\tModelExplainabilityJobInput: #required\r\n\t\t\tModelExplainabilityJobInput\r\n\t\tModelExplainabilityJobOutputConfig: #required\r\n\t\t\tMonitoringOutputConfig\r\n\t\tJobResources: #required\r\n\t\t\tMonitoringResources\r\n\t\tNetworkConfig:\r\n\t\t\tNetworkConfig\r\n\t\tRoleArn: String #required\r\n\t\tStoppingCondition:\r\n\t\t\tStoppingCondition\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::ModelExplainabilityJobDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html"
    },
    "AWS::MediaPackage::PackagingGroup": {
        "prefix": "mediapackage-packaginggroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::PackagingGroup\"\r\n\tProperties:\r\n\t\tId: String #required\r\n\t\tAuthorization:\r\n\t\t\tAuthorization\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tEgressAccessLogs:\r\n\t\t\tLogConfiguration\r\n",
        "description": "AWS::MediaPackage::PackagingGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html"
    },
    "AWS::Config::RemediationConfiguration": {
        "prefix": "config-remediationconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::RemediationConfiguration\"\r\n\tProperties:\r\n\t\tTargetVersion: String\r\n\t\tExecutionControls:\r\n\t\t\tExecutionControls\r\n\t\tParameters: Json\r\n\t\tTargetType: String #required\r\n\t\tConfigRuleName: String #required\r\n\t\tResourceType: String\r\n\t\tRetryAttemptSeconds: Integer\r\n\t\tMaximumAutomaticAttempts: Integer\r\n\t\tTargetId: String #required\r\n\t\tAutomatic: Boolean\r\n",
        "description": "AWS::Config::RemediationConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html"
    },
    "AWS::GroundStation::DataflowEndpointGroup": {
        "prefix": "groundstation-dataflowendpointgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GroundStation::DataflowEndpointGroup\"\r\n\tProperties:\r\n\t\tEndpointDetails: #required\r\n\t\t\t- EndpointDetails\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::GroundStation::DataflowEndpointGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html"
    },
    "AWS::Glue::Workflow": {
        "prefix": "glue-workflow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Workflow\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tDefaultRunProperties: Json\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::Glue::Workflow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html"
    },
    "AWS::EC2::FlowLog": {
        "prefix": "ec2-flowlog",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::FlowLog\"\r\n\tProperties:\r\n\t\tDeliverLogsPermissionArn: String\r\n\t\tLogDestination: String\r\n\t\tLogDestinationType: String\r\n\t\tLogFormat: String\r\n\t\tLogGroupName: String\r\n\t\tMaxAggregationInterval: Integer\r\n\t\tResourceId: String #required\r\n\t\tResourceType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTrafficType: String #required\r\n\t\tDestinationOptions: Json\r\n",
        "description": "AWS::EC2::FlowLog\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html"
    },
    "AWS::Greengrass::ResourceDefinition": {
        "prefix": "greengrass-resourcedefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ResourceDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tResourceDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::ResourceDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html"
    },
    "AWS::Lex::ResourcePolicy": {
        "prefix": "lex-resourcepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lex::ResourcePolicy\"\r\n\tProperties:\r\n\t\tResourceArn: String #required\r\n\t\tPolicy: #required\r\n\t\t\tPolicy\r\n",
        "description": "AWS::Lex::ResourcePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html"
    },
    "AWS::IAM::AccessKey": {
        "prefix": "iam-accesskey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::AccessKey\"\r\n\tProperties:\r\n\t\tSerial: Integer\r\n\t\tStatus: String\r\n\t\tUserName: String #required\r\n",
        "description": "AWS::IAM::AccessKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"
    },
    "AWS::GameLift::MatchmakingConfiguration": {
        "prefix": "gamelift-matchmakingconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::MatchmakingConfiguration\"\r\n\tProperties:\r\n\t\tGameProperties:\r\n\t\t\t- GameProperty\r\n\t\tGameSessionData: String\r\n\t\tDescription: String\r\n\t\tAcceptanceTimeoutSeconds: Integer\r\n\t\tNotificationTarget: String\r\n\t\tCustomEventData: String\r\n\t\tName: String #required\r\n\t\tAdditionalPlayerCount: Integer\r\n\t\tBackfillMode: String\r\n\t\tRequestTimeoutSeconds: Integer #required\r\n\t\tAcceptanceRequired: Boolean #required\r\n\t\tFlexMatchMode: String\r\n\t\tRuleSetName: String #required\r\n\t\tGameSessionQueueArns:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::GameLift::MatchmakingConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html"
    },
    "AWS::AppIntegrations::DataIntegration": {
        "prefix": "appintegrations-dataintegration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppIntegrations::DataIntegration\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tName: String #required\r\n\t\tKmsKey: String #required\r\n\t\tScheduleConfig: #required\r\n\t\t\tScheduleConfig\r\n\t\tSourceURI: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppIntegrations::DataIntegration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html"
    },
    "AWS::AmazonMQ::ConfigurationAssociation": {
        "prefix": "amazonmq-configurationassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::ConfigurationAssociation\"\r\n\tProperties:\r\n\t\tBroker: String #required\r\n\t\tConfiguration: #required\r\n\t\t\tConfigurationId\r\n",
        "description": "AWS::AmazonMQ::ConfigurationAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html"
    },
    "AWS::ECS::CapacityProvider": {
        "prefix": "ecs-capacityprovider",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::CapacityProvider\"\r\n\tProperties:\r\n\t\tAutoScalingGroupProvider: #required\r\n\t\t\tAutoScalingGroupProvider\r\n\t\tName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ECS::CapacityProvider\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html"
    },
    "AWS::AppStream::Application": {
        "prefix": "appstream-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Application\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDisplayName: String\r\n\t\tDescription: String\r\n\t\tLaunchPath: String #required\r\n\t\tLaunchParameters: String\r\n\t\tWorkingDirectory: String\r\n\t\tInstanceFamilies: #required\r\n\t\t\t- String\r\n\t\tIconS3Location: #required\r\n\t\t\tS3Location\r\n\t\tAppBlockArn: String #required\r\n\t\tPlatforms: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAttributesToDelete:\r\n\t\t\t- String\r\n",
        "description": "AWS::AppStream::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html"
    },
    "AWS::CodeBuild::Project": {
        "prefix": "codebuild-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeBuild::Project\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tResourceAccessRole: String\r\n\t\tVpcConfig:\r\n\t\t\tVpcConfig\r\n\t\tSecondarySources:\r\n\t\t\t- Source\r\n\t\tEncryptionKey: String\r\n\t\tSourceVersion: String\r\n\t\tTriggers:\r\n\t\t\tProjectTriggers\r\n\t\tSecondaryArtifacts:\r\n\t\t\t- Artifacts\r\n\t\tSource: #required\r\n\t\t\tSource\r\n\t\tName: String\r\n\t\tArtifacts: #required\r\n\t\t\tArtifacts\r\n\t\tBadgeEnabled: Boolean\r\n\t\tLogsConfig:\r\n\t\t\tLogsConfig\r\n\t\tServiceRole: String #required\r\n\t\tQueuedTimeoutInMinutes: Integer\r\n\t\tFileSystemLocations:\r\n\t\t\t- ProjectFileSystemLocation\r\n\t\tEnvironment: #required\r\n\t\t\tEnvironment\r\n\t\tSecondarySourceVersions:\r\n\t\t\t- ProjectSourceVersion\r\n\t\tConcurrentBuildLimit: Integer\r\n\t\tVisibility: String\r\n\t\tBuildBatchConfig:\r\n\t\t\tProjectBuildBatchConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTimeoutInMinutes: Integer\r\n\t\tCache:\r\n\t\t\tProjectCache\r\n",
        "description": "AWS::CodeBuild::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html"
    },
    "AWS::Budgets::Budget": {
        "prefix": "budgets-budget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Budgets::Budget\"\r\n\tProperties:\r\n\t\tNotificationsWithSubscribers:\r\n\t\t\t- NotificationWithSubscribers\r\n\t\tBudget: #required\r\n\t\t\tBudgetData\r\n",
        "description": "AWS::Budgets::Budget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html"
    },
    "AWS::S3ObjectLambda::AccessPoint": {
        "prefix": "s3objectlambda-accesspoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3ObjectLambda::AccessPoint\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tObjectLambdaConfiguration: #required\r\n\t\t\tObjectLambdaConfiguration\r\n",
        "description": "AWS::S3ObjectLambda::AccessPoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html"
    },
    "AWS::NetworkFirewall::RuleGroup": {
        "prefix": "networkfirewall-rulegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkFirewall::RuleGroup\"\r\n\tProperties:\r\n\t\tRuleGroupName: String #required\r\n\t\tRuleGroup:\r\n\t\t\tRuleGroup\r\n\t\tType: String #required\r\n\t\tCapacity: Integer #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::NetworkFirewall::RuleGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html"
    },
    "AWS::SNS::TopicPolicy": {
        "prefix": "sns-topicpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SNS::TopicPolicy\"\r\n\tProperties:\r\n\t\tPolicyDocument: Json #required\r\n\t\tTopics: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::SNS::TopicPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html"
    },
    "AWS::ElasticLoadBalancingV2::Listener": {
        "prefix": "elasticloadbalancingv2-listener",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::Listener\"\r\n\tProperties:\r\n\t\tSslPolicy: String\r\n\t\tLoadBalancerArn: String #required\r\n\t\tDefaultActions: #required\r\n\t\t\t- Action\r\n\t\tPort: Integer\r\n\t\tCertificates:\r\n\t\t\t- Certificate\r\n\t\tProtocol: String\r\n\t\tAlpnPolicy:\r\n\t\t\t- String\r\n",
        "description": "AWS::ElasticLoadBalancingV2::Listener\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html"
    },
    "AWS::SageMaker::EndpointConfig": {
        "prefix": "sagemaker-endpointconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::EndpointConfig\"\r\n\tProperties:\r\n\t\tDataCaptureConfig:\r\n\t\t\tDataCaptureConfig\r\n\t\tProductionVariants: #required\r\n\t\t\t- ProductionVariant\r\n\t\tKmsKeyId: String\r\n\t\tAsyncInferenceConfig:\r\n\t\t\tAsyncInferenceConfig\r\n\t\tEndpointConfigName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::EndpointConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html"
    },
    "AWS::Events::Connection": {
        "prefix": "events-connection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::Connection\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tAuthorizationType: String #required\r\n\t\tAuthParameters: Json #required\r\n",
        "description": "AWS::Events::Connection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html"
    },
    "AWS::Greengrass::DeviceDefinition": {
        "prefix": "greengrass-devicedefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::DeviceDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tDeviceDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::DeviceDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html"
    },
    "AWS::MemoryDB::SubnetGroup": {
        "prefix": "memorydb-subnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MemoryDB::SubnetGroup\"\r\n\tProperties:\r\n\t\tSubnetGroupName: String #required\r\n\t\tDescription: String\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MemoryDB::SubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html"
    },
    "AWS::DataSync::LocationFSxWindows": {
        "prefix": "datasync-locationfsxwindows",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationFSxWindows\"\r\n\tProperties:\r\n\t\tDomain: String\r\n\t\tFsxFilesystemArn: String #required\r\n\t\tPassword: String #required\r\n\t\tSecurityGroupArns: #required\r\n\t\t\t- String\r\n\t\tSubdirectory: String\r\n\t\tUser: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationFSxWindows\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html"
    },
    "AWS::MediaConnect::FlowVpcInterface": {
        "prefix": "mediaconnect-flowvpcinterface",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConnect::FlowVpcInterface\"\r\n\tProperties:\r\n\t\tFlowArn: String #required\r\n\t\tName: String #required\r\n\t\tRoleArn: String #required\r\n\t\tSecurityGroupIds: #required\r\n\t\t\t- String\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::MediaConnect::FlowVpcInterface\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html"
    },
    "AWS::Config::ConfigurationAggregator": {
        "prefix": "config-configurationaggregator",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigurationAggregator\"\r\n\tProperties:\r\n\t\tAccountAggregationSources:\r\n\t\t\t- AccountAggregationSource\r\n\t\tConfigurationAggregatorName: String\r\n\t\tOrganizationAggregationSource:\r\n\t\t\tOrganizationAggregationSource\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Config::ConfigurationAggregator\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html"
    },
    "AWS::DataSync::LocationS3": {
        "prefix": "datasync-locations3",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationS3\"\r\n\tProperties:\r\n\t\tS3Config: #required\r\n\t\t\tS3Config\r\n\t\tS3BucketArn: String #required\r\n\t\tSubdirectory: String\r\n\t\tS3StorageClass: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationS3\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html"
    },
    "AWS::Location::Map": {
        "prefix": "location-map",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::Map\"\r\n\tProperties:\r\n\t\tConfiguration: #required\r\n\t\t\tMapConfiguration\r\n\t\tDescription: String\r\n\t\tMapName: String #required\r\n\t\tPricingPlan: String\r\n",
        "description": "AWS::Location::Map\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html"
    },
    "AWS::Rekognition::Project": {
        "prefix": "rekognition-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Rekognition::Project\"\r\n\tProperties:\r\n\t\tProjectName: String #required\r\n",
        "description": "AWS::Rekognition::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-project.html"
    },
    "AWS::CloudTrail::Trail": {
        "prefix": "cloudtrail-trail",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudTrail::Trail\"\r\n\tProperties:\r\n\t\tCloudWatchLogsLogGroupArn: String\r\n\t\tCloudWatchLogsRoleArn: String\r\n\t\tEnableLogFileValidation: Boolean\r\n\t\tEventSelectors:\r\n\t\t\t- EventSelector\r\n\t\tIncludeGlobalServiceEvents: Boolean\r\n\t\tIsLogging: Boolean #required\r\n\t\tIsMultiRegionTrail: Boolean\r\n\t\tIsOrganizationTrail: Boolean\r\n\t\tKMSKeyId: String\r\n\t\tS3BucketName: String #required\r\n\t\tS3KeyPrefix: String\r\n\t\tSnsTopicName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTrailName: String\r\n\t\tInsightSelectors:\r\n\t\t\t- InsightSelector\r\n",
        "description": "AWS::CloudTrail::Trail\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html"
    },
    "AWS::Neptune::DBClusterParameterGroup": {
        "prefix": "neptune-dbclusterparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tParameters: Json #required\r\n\t\tFamily: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::Neptune::DBClusterParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html"
    },
    "AWS::DataBrew::Ruleset": {
        "prefix": "databrew-ruleset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Ruleset\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tTargetArn: String #required\r\n\t\tRules: #required\r\n\t\t\t- Rule\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataBrew::Ruleset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html"
    },
    "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "prefix": "opsworks-elasticloadbalancerattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::ElasticLoadBalancerAttachment\"\r\n\tProperties:\r\n\t\tElasticLoadBalancerName: String #required\r\n\t\tLayerId: String #required\r\n",
        "description": "AWS::OpsWorks::ElasticLoadBalancerAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html"
    },
    "AWS::DocDB::DBInstance": {
        "prefix": "docdb-dbinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBInstance\"\r\n\tProperties:\r\n\t\tDBInstanceClass: String #required\r\n\t\tDBClusterIdentifier: String #required\r\n\t\tAvailabilityZone: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tDBInstanceIdentifier: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DocDB::DBInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html"
    },
    "AWS::ServiceCatalogAppRegistry::Application": {
        "prefix": "servicecatalogappregistry-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalogAppRegistry::Application\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ServiceCatalogAppRegistry::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html"
    },
    "AWS::Backup::ReportPlan": {
        "prefix": "backup-reportplan",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::ReportPlan\"\r\n\tProperties:\r\n\t\tReportPlanName: String\r\n\t\tReportPlanDescription: String\r\n\t\tReportPlanTags:\r\n\t\t\t- Tag\r\n\t\tReportDeliveryChannel: Json #required\r\n\t\tReportSetting: Json #required\r\n",
        "description": "AWS::Backup::ReportPlan\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html"
    },
    "AWS::AmplifyUIBuilder::Component": {
        "prefix": "amplifyuibuilder-component",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmplifyUIBuilder::Component\"\r\n\tProperties:\r\n\t\tBindingProperties:\r\n\t\t\tMap\r\n\t\tChildren:\r\n\t\t\t- ComponentChild\r\n\t\tCollectionProperties:\r\n\t\t\tMap\r\n\t\tComponentType: String\r\n\t\tName: String\r\n\t\tOverrides:\r\n\t\t\tMap\r\n\t\tProperties:\r\n\t\t\tMap\r\n\t\tSourceId: String\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tVariants:\r\n\t\t\t- ComponentVariant\r\n",
        "description": "AWS::AmplifyUIBuilder::Component\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html"
    },
    "AWS::RoboMaker::SimulationApplication": {
        "prefix": "robomaker-simulationapplication",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RoboMaker::SimulationApplication\"\r\n\tProperties:\r\n\t\tRenderingEngine: #required\r\n\t\t\tRenderingEngine\r\n\t\tSimulationSoftwareSuite: #required\r\n\t\t\tSimulationSoftwareSuite\r\n\t\tCurrentRevisionId: String\r\n\t\tRobotSoftwareSuite: #required\r\n\t\t\tRobotSoftwareSuite\r\n\t\tSources: #required\r\n\t\t\t- SourceConfig\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::RoboMaker::SimulationApplication\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html"
    },
    "AWS::Batch::SchedulingPolicy": {
        "prefix": "batch-schedulingpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::SchedulingPolicy\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tFairsharePolicy:\r\n\t\t\tFairsharePolicy\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::Batch::SchedulingPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html"
    },
    "AWS::EventSchemas::Discoverer": {
        "prefix": "eventschemas-discoverer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Discoverer\"\r\n\tProperties:\r\n\t\tCrossAccount: Boolean\r\n\t\tDescription: String\r\n\t\tSourceArn: String #required\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::EventSchemas::Discoverer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html"
    },
    "AWS::WAFRegional::WebACL": {
        "prefix": "wafregional-webacl",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::WebACL\"\r\n\tProperties:\r\n\t\tMetricName: String #required\r\n\t\tDefaultAction: #required\r\n\t\t\tAction\r\n\t\tRules:\r\n\t\t\t- Rule\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::WebACL\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html"
    },
    "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
        "prefix": "cloudfront-cloudfrontoriginaccessidentity",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::CloudFrontOriginAccessIdentity\"\r\n\tProperties:\r\n\t\tCloudFrontOriginAccessIdentityConfig: #required\r\n\t\t\tCloudFrontOriginAccessIdentityConfig\r\n",
        "description": "AWS::CloudFront::CloudFrontOriginAccessIdentity\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html"
    },
    "AWS::SageMaker::Endpoint": {
        "prefix": "sagemaker-endpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Endpoint\"\r\n\tProperties:\r\n\t\tRetainAllVariantProperties: Boolean\r\n\t\tEndpointName: String\r\n\t\tExcludeRetainedVariantProperties:\r\n\t\t\t- VariantProperty\r\n\t\tEndpointConfigName: String #required\r\n\t\tDeploymentConfig:\r\n\t\t\tDeploymentConfig\r\n\t\tRetainDeploymentConfig: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::Endpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html"
    },
    "AWS::AppSync::DomainName": {
        "prefix": "appsync-domainname",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::DomainName\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tDescription: String\r\n\t\tCertificateArn: String #required\r\n",
        "description": "AWS::AppSync::DomainName\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html"
    },
    "AWS::EC2::Subnet": {
        "prefix": "ec2-subnet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Subnet\"\r\n\tProperties:\r\n\t\tAssignIpv6AddressOnCreation: Boolean\r\n\t\tAvailabilityZone: String\r\n\t\tAvailabilityZoneId: String\r\n\t\tCidrBlock: String #required\r\n\t\tEnableDns64: Boolean\r\n\t\tIpv6CidrBlock: String\r\n\t\tIpv6Native: Boolean\r\n\t\tMapPublicIpOnLaunch: Boolean\r\n\t\tOutpostArn: String\r\n\t\tPrivateDnsNameOptionsOnLaunch:\r\n\t\t\tPrivateDnsNameOptionsOnLaunch\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::Subnet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html"
    },
    "AWS::CodeDeploy::Application": {
        "prefix": "codedeploy-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::Application\"\r\n\tProperties:\r\n\t\tApplicationName: String\r\n\t\tComputePlatform: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CodeDeploy::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html"
    },
    "AWS::ServiceDiscovery::Instance": {
        "prefix": "servicediscovery-instance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::Instance\"\r\n\tProperties:\r\n\t\tInstanceAttributes: Json #required\r\n\t\tInstanceId: String\r\n\t\tServiceId: String #required\r\n",
        "description": "AWS::ServiceDiscovery::Instance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html"
    },
    "AWS::AppConfig::HostedConfigurationVersion": {
        "prefix": "appconfig-hostedconfigurationversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::HostedConfigurationVersion\"\r\n\tProperties:\r\n\t\tConfigurationProfileId: String #required\r\n\t\tDescription: String\r\n\t\tContentType: String #required\r\n\t\tLatestVersionNumber: Double\r\n\t\tContent: String #required\r\n\t\tApplicationId: String #required\r\n",
        "description": "AWS::AppConfig::HostedConfigurationVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html"
    },
    "AWS::EC2::Instance": {
        "prefix": "ec2-instance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Instance\"\r\n\tProperties:\r\n\t\tAdditionalInfo: String\r\n\t\tAffinity: String\r\n\t\tAvailabilityZone: String\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- BlockDeviceMapping\r\n\t\tCpuOptions:\r\n\t\t\tCpuOptions\r\n\t\tCreditSpecification:\r\n\t\t\tCreditSpecification\r\n\t\tDisableApiTermination: Boolean\r\n\t\tEbsOptimized: Boolean\r\n\t\tElasticGpuSpecifications:\r\n\t\t\t- ElasticGpuSpecification\r\n\t\tElasticInferenceAccelerators:\r\n\t\t\t- ElasticInferenceAccelerator\r\n\t\tEnclaveOptions:\r\n\t\t\tEnclaveOptions\r\n\t\tHibernationOptions:\r\n\t\t\tHibernationOptions\r\n\t\tHostId: String\r\n\t\tHostResourceGroupArn: String\r\n\t\tIamInstanceProfile: String\r\n\t\tImageId: String\r\n\t\tInstanceInitiatedShutdownBehavior: String\r\n\t\tInstanceType: String\r\n\t\tIpv6AddressCount: Integer\r\n\t\tIpv6Addresses:\r\n\t\t\t- InstanceIpv6Address\r\n\t\tKernelId: String\r\n\t\tKeyName: String\r\n\t\tLaunchTemplate:\r\n\t\t\tLaunchTemplateSpecification\r\n\t\tLicenseSpecifications:\r\n\t\t\t- LicenseSpecification\r\n\t\tMonitoring: Boolean\r\n\t\tNetworkInterfaces:\r\n\t\t\t- NetworkInterface\r\n\t\tPlacementGroupName: String\r\n\t\tPrivateIpAddress: String\r\n\t\tPropagateTagsToVolumeOnCreation: Boolean\r\n\t\tRamdiskId: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tSecurityGroups:\r\n\t\t\t- String\r\n\t\tSourceDestCheck: Boolean\r\n\t\tSsmAssociations:\r\n\t\t\t- SsmAssociation\r\n\t\tSubnetId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTenancy: String\r\n\t\tUserData: String\r\n\t\tVolumes:\r\n\t\t\t- Volume\r\n",
        "description": "AWS::EC2::Instance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html"
    },
    "AWS::Events::EventBusPolicy": {
        "prefix": "events-eventbuspolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::EventBusPolicy\"\r\n\tProperties:\r\n\t\tEventBusName: String\r\n\t\tCondition:\r\n\t\t\tCondition\r\n\t\tAction: String\r\n\t\tStatementId: String #required\r\n\t\tStatement: Json\r\n\t\tPrincipal: String\r\n",
        "description": "AWS::Events::EventBusPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html"
    },
    "AWS::CloudFormation::Stack": {
        "prefix": "cloudformation-stack",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::Stack\"\r\n\tProperties:\r\n\t\tNotificationARNs:\r\n\t\t\t- String\r\n\t\tParameters:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTemplateURL: String #required\r\n\t\tTimeoutInMinutes: Integer\r\n",
        "description": "AWS::CloudFormation::Stack\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html"
    },
    "AWS::Config::AggregationAuthorization": {
        "prefix": "config-aggregationauthorization",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::AggregationAuthorization\"\r\n\tProperties:\r\n\t\tAuthorizedAccountId: String #required\r\n\t\tAuthorizedAwsRegion: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Config::AggregationAuthorization\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html"
    },
    "AWS::WAF::ByteMatchSet": {
        "prefix": "waf-bytematchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAF::ByteMatchSet\"\r\n\tProperties:\r\n\t\tByteMatchTuples:\r\n\t\t\t- ByteMatchTuple\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAF::ByteMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html"
    },
    "AWS::FIS::ExperimentTemplate": {
        "prefix": "fis-experimenttemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FIS::ExperimentTemplate\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tTargets: #required\r\n\t\t\tMap\r\n\t\tActions:\r\n\t\t\tMap\r\n\t\tStopConditions: #required\r\n\t\t\t- ExperimentTemplateStopCondition\r\n\t\tRoleArn: String #required\r\n\t\tTags: #required\r\n\t\t\tMap\r\n",
        "description": "AWS::FIS::ExperimentTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html"
    },
    "AWS::AppMesh::VirtualGateway": {
        "prefix": "appmesh-virtualgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualGateway\"\r\n\tProperties:\r\n\t\tVirtualGatewayName: String\r\n\t\tMeshName: String #required\r\n\t\tMeshOwner: String\r\n\t\tSpec: #required\r\n\t\t\tVirtualGatewaySpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::VirtualGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html"
    },
    "AWS::DevOpsGuru::NotificationChannel": {
        "prefix": "devopsguru-notificationchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DevOpsGuru::NotificationChannel\"\r\n\tProperties:\r\n\t\tConfig: #required\r\n\t\t\tNotificationChannelConfig\r\n",
        "description": "AWS::DevOpsGuru::NotificationChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html"
    },
    "AWS::SecretsManager::ResourcePolicy": {
        "prefix": "secretsmanager-resourcepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::ResourcePolicy\"\r\n\tProperties:\r\n\t\tBlockPublicPolicy: Boolean\r\n\t\tSecretId: String #required\r\n\t\tResourcePolicy: Json #required\r\n",
        "description": "AWS::SecretsManager::ResourcePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html"
    },
    "AWS::AuditManager::Assessment": {
        "prefix": "auditmanager-assessment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AuditManager::Assessment\"\r\n\tProperties:\r\n\t\tFrameworkId: String\r\n\t\tAwsAccount:\r\n\t\t\tAWSAccount\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tRoles:\r\n\t\t\t- Role\r\n\t\tScope:\r\n\t\t\tScope\r\n\t\tAssessmentReportsDestination:\r\n\t\t\tAssessmentReportsDestination\r\n\t\tStatus: String\r\n\t\tName: String\r\n\t\tDescription: String\r\n",
        "description": "AWS::AuditManager::Assessment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html"
    },
    "AWS::EMR::Step": {
        "prefix": "emr-step",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::Step\"\r\n\tProperties:\r\n\t\tActionOnFailure: String #required\r\n\t\tHadoopJarStep: #required\r\n\t\t\tHadoopJarStepConfig\r\n\t\tJobFlowId: String #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::EMR::Step\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html"
    },
    "AWS::Config::ConfigurationRecorder": {
        "prefix": "config-configurationrecorder",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConfigurationRecorder\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tRecordingGroup:\r\n\t\t\tRecordingGroup\r\n\t\tRoleARN: String #required\r\n",
        "description": "AWS::Config::ConfigurationRecorder\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html"
    },
    "AWS::AppConfig::ConfigurationProfile": {
        "prefix": "appconfig-configurationprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::ConfigurationProfile\"\r\n\tProperties:\r\n\t\tLocationUri: String #required\r\n\t\tType: String\r\n\t\tDescription: String\r\n\t\tValidators:\r\n\t\t\t- Validators\r\n\t\tRetrievalRoleArn: String\r\n\t\tApplicationId: String #required\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n",
        "description": "AWS::AppConfig::ConfigurationProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html"
    },
    "AWS::KinesisVideo::SignalingChannel": {
        "prefix": "kinesisvideo-signalingchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisVideo::SignalingChannel\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tType: String\r\n\t\tMessageTtlSeconds: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::KinesisVideo::SignalingChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html"
    },
    "AWS::SSM::MaintenanceWindowTarget": {
        "prefix": "ssm-maintenancewindowtarget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::MaintenanceWindowTarget\"\r\n\tProperties:\r\n\t\tOwnerInformation: String\r\n\t\tDescription: String\r\n\t\tWindowId: String #required\r\n\t\tResourceType: String #required\r\n\t\tTargets: #required\r\n\t\t\t- Targets\r\n\t\tName: String\r\n",
        "description": "AWS::SSM::MaintenanceWindowTarget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html"
    },
    "AWS::EC2::IPAMPool": {
        "prefix": "ec2-ipampool",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::IPAMPool\"\r\n\tProperties:\r\n\t\tSourceIpamPoolId: String\r\n\t\tIpamScopeId: String #required\r\n\t\tLocale: String\r\n\t\tDescription: String\r\n\t\tAutoImport: Boolean\r\n\t\tPubliclyAdvertisable: Boolean\r\n\t\tAddressFamily: String #required\r\n\t\tAllocationMinNetmaskLength: Integer\r\n\t\tAllocationDefaultNetmaskLength: Integer\r\n\t\tAllocationMaxNetmaskLength: Integer\r\n\t\tAllocationResourceTags:\r\n\t\t\t- Tag\r\n\t\tProvisionedCidrs:\r\n\t\t\t- ProvisionedCidr\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::IPAMPool\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html"
    },
    "AWS::Cognito::UserPoolResourceServer": {
        "prefix": "cognito-userpoolresourceserver",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolResourceServer\"\r\n\tProperties:\r\n\t\tUserPoolId: String #required\r\n\t\tIdentifier: String #required\r\n\t\tScopes:\r\n\t\t\t- ResourceServerScopeType\r\n\t\tName: String #required\r\n",
        "description": "AWS::Cognito::UserPoolResourceServer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html"
    },
    "AWS::OpsWorks::Instance": {
        "prefix": "opsworks-instance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Instance\"\r\n\tProperties:\r\n\t\tAgentVersion: String\r\n\t\tAmiId: String\r\n\t\tArchitecture: String\r\n\t\tAutoScalingType: String\r\n\t\tAvailabilityZone: String\r\n\t\tBlockDeviceMappings:\r\n\t\t\t- BlockDeviceMapping\r\n\t\tEbsOptimized: Boolean\r\n\t\tElasticIps:\r\n\t\t\t- String\r\n\t\tHostname: String\r\n\t\tInstallUpdatesOnBoot: Boolean\r\n\t\tInstanceType: String #required\r\n\t\tLayerIds: #required\r\n\t\t\t- String\r\n\t\tOs: String\r\n\t\tRootDeviceType: String\r\n\t\tSshKeyName: String\r\n\t\tStackId: String #required\r\n\t\tSubnetId: String\r\n\t\tTenancy: String\r\n\t\tTimeBasedAutoScaling:\r\n\t\t\tTimeBasedAutoScaling\r\n\t\tVirtualizationType: String\r\n\t\tVolumes:\r\n\t\t\t- String\r\n",
        "description": "AWS::OpsWorks::Instance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html"
    },
    "AWS::Redshift::EventSubscription": {
        "prefix": "redshift-eventsubscription",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::EventSubscription\"\r\n\tProperties:\r\n\t\tSubscriptionName: String #required\r\n\t\tSnsTopicArn: String\r\n\t\tSourceType: String\r\n\t\tSourceIds:\r\n\t\t\t- String\r\n\t\tEventCategories:\r\n\t\t\t- String\r\n\t\tSeverity: String\r\n\t\tEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Redshift::EventSubscription\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html"
    },
    "AWS::Glue::Job": {
        "prefix": "glue-job",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Job\"\r\n\tProperties:\r\n\t\tConnections:\r\n\t\t\tConnectionsList\r\n\t\tMaxRetries: Double\r\n\t\tDescription: String\r\n\t\tTimeout: Integer\r\n\t\tAllocatedCapacity: Double\r\n\t\tName: String\r\n\t\tRole: String #required\r\n\t\tDefaultArguments: Json\r\n\t\tNotificationProperty:\r\n\t\t\tNotificationProperty\r\n\t\tWorkerType: String\r\n\t\tLogUri: String\r\n\t\tCommand: #required\r\n\t\t\tJobCommand\r\n\t\tGlueVersion: String\r\n\t\tExecutionProperty:\r\n\t\t\tExecutionProperty\r\n\t\tSecurityConfiguration: String\r\n\t\tNumberOfWorkers: Integer\r\n\t\tTags: Json\r\n\t\tMaxCapacity: Double\r\n",
        "description": "AWS::Glue::Job\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html"
    },
    "AWS::Lambda::Version": {
        "prefix": "lambda-version",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::Version\"\r\n\tProperties:\r\n\t\tCodeSha256: String\r\n\t\tDescription: String\r\n\t\tFunctionName: String #required\r\n\t\tProvisionedConcurrencyConfig:\r\n\t\t\tProvisionedConcurrencyConfiguration\r\n",
        "description": "AWS::Lambda::Version\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html"
    },
    "AWS::ApiGateway::BasePathMapping": {
        "prefix": "apigateway-basepathmapping",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::BasePathMapping\"\r\n\tProperties:\r\n\t\tBasePath: String\r\n\t\tDomainName: String #required\r\n\t\tRestApiId: String\r\n\t\tStage: String\r\n",
        "description": "AWS::ApiGateway::BasePathMapping\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html"
    },
    "AWS::DataSync::Task": {
        "prefix": "datasync-task",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::Task\"\r\n\tProperties:\r\n\t\tExcludes:\r\n\t\t\t- FilterRule\r\n\t\tIncludes:\r\n\t\t\t- FilterRule\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCloudWatchLogGroupArn: String\r\n\t\tDestinationLocationArn: String #required\r\n\t\tName: String\r\n\t\tOptions:\r\n\t\t\tOptions\r\n\t\tSchedule:\r\n\t\t\tTaskSchedule\r\n\t\tSourceLocationArn: String #required\r\n",
        "description": "AWS::DataSync::Task\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html"
    },
    "AWS::EMR::Studio": {
        "prefix": "emr-studio",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EMR::Studio\"\r\n\tProperties:\r\n\t\tAuthMode: String #required\r\n\t\tDefaultS3Location: String #required\r\n\t\tDescription: String\r\n\t\tEngineSecurityGroupId: String #required\r\n\t\tName: String #required\r\n\t\tServiceRole: String #required\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUserRole: String\r\n\t\tVpcId: String #required\r\n\t\tWorkspaceSecurityGroupId: String #required\r\n\t\tIdpAuthUrl: String\r\n\t\tIdpRelayStateParameterName: String\r\n",
        "description": "AWS::EMR::Studio\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html"
    },
    "AWS::DataSync::LocationObjectStorage": {
        "prefix": "datasync-locationobjectstorage",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationObjectStorage\"\r\n\tProperties:\r\n\t\tAccessKey: String\r\n\t\tAgentArns: #required\r\n\t\t\t- String\r\n\t\tBucketName: String #required\r\n\t\tSecretKey: String\r\n\t\tServerHostname: String #required\r\n\t\tServerPort: Integer\r\n\t\tServerProtocol: String\r\n\t\tSubdirectory: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationObjectStorage\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html"
    },
    "AWS::DataBrew::Project": {
        "prefix": "databrew-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Project\"\r\n\tProperties:\r\n\t\tDatasetName: String #required\r\n\t\tName: String #required\r\n\t\tRecipeName: String #required\r\n\t\tRoleArn: String #required\r\n\t\tSample:\r\n\t\t\tSample\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataBrew::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html"
    },
    "AWS::DLM::LifecyclePolicy": {
        "prefix": "dlm-lifecyclepolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DLM::LifecyclePolicy\"\r\n\tProperties:\r\n\t\tExecutionRoleArn: String\r\n\t\tDescription: String\r\n\t\tState: String\r\n\t\tPolicyDetails:\r\n\t\t\tPolicyDetails\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DLM::LifecyclePolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html"
    },
    "AWS::Lightsail::Alarm": {
        "prefix": "lightsail-alarm",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Alarm\"\r\n\tProperties:\r\n\t\tAlarmName: String #required\r\n\t\tMonitoredResourceName: String #required\r\n\t\tMetricName: String #required\r\n\t\tComparisonOperator: String #required\r\n\t\tContactProtocols:\r\n\t\t\t- String\r\n\t\tDatapointsToAlarm: Integer\r\n\t\tEvaluationPeriods: Integer #required\r\n\t\tNotificationEnabled: Boolean\r\n\t\tNotificationTriggers:\r\n\t\t\t- String\r\n\t\tThreshold: Double #required\r\n\t\tTreatMissingData: String\r\n",
        "description": "AWS::Lightsail::Alarm\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html"
    },
    "AWS::RDS::DBInstance": {
        "prefix": "rds-dbinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBInstance\"\r\n\tProperties:\r\n\t\tAllocatedStorage: String\r\n\t\tAllowMajorVersionUpgrade: Boolean\r\n\t\tAssociatedRoles:\r\n\t\t\t- DBInstanceRole\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tAvailabilityZone: String\r\n\t\tBackupRetentionPeriod: Integer\r\n\t\tCACertificateIdentifier: String\r\n\t\tCharacterSetName: String\r\n\t\tCopyTagsToSnapshot: Boolean\r\n\t\tDBClusterIdentifier: String\r\n\t\tDBInstanceClass: String #required\r\n\t\tDBInstanceIdentifier: String\r\n\t\tDBName: String\r\n\t\tDBParameterGroupName: String\r\n\t\tDBSecurityGroups:\r\n\t\t\t- String\r\n\t\tDBSnapshotIdentifier: String\r\n\t\tDBSubnetGroupName: String\r\n\t\tDeleteAutomatedBackups: Boolean\r\n\t\tDeletionProtection: Boolean\r\n\t\tDomain: String\r\n\t\tDomainIAMRoleName: String\r\n\t\tEnableCloudwatchLogsExports:\r\n\t\t\t- String\r\n\t\tEnableIAMDatabaseAuthentication: Boolean\r\n\t\tEnablePerformanceInsights: Boolean\r\n\t\tEngine: String\r\n\t\tEngineVersion: String\r\n\t\tIops: Integer\r\n\t\tKmsKeyId: String\r\n\t\tLicenseModel: String\r\n\t\tMasterUserPassword: String\r\n\t\tMasterUsername: String\r\n\t\tMaxAllocatedStorage: Integer\r\n\t\tMonitoringInterval: Integer\r\n\t\tMonitoringRoleArn: String\r\n\t\tMultiAZ: Boolean\r\n\t\tOptionGroupName: String\r\n\t\tPerformanceInsightsKMSKeyId: String\r\n\t\tPerformanceInsightsRetentionPeriod: Integer\r\n\t\tPort: String\r\n\t\tPreferredBackupWindow: String\r\n\t\tPreferredMaintenanceWindow: String\r\n\t\tProcessorFeatures:\r\n\t\t\t- ProcessorFeature\r\n\t\tPromotionTier: Integer\r\n\t\tPubliclyAccessible: Boolean\r\n\t\tSourceDBInstanceIdentifier: String\r\n\t\tSourceRegion: String\r\n\t\tStorageEncrypted: Boolean\r\n\t\tStorageType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTimezone: String\r\n\t\tUseDefaultProcessorFeatures: Boolean\r\n\t\tVPCSecurityGroups:\r\n\t\t\t- String\r\n",
        "description": "AWS::RDS::DBInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html"
    },
    "AWS::WAFRegional::IPSet": {
        "prefix": "wafregional-ipset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::IPSet\"\r\n\tProperties:\r\n\t\tIPSetDescriptors:\r\n\t\t\t- IPSetDescriptor\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::IPSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html"
    },
    "AWS::ServiceDiscovery::HttpNamespace": {
        "prefix": "servicediscovery-httpnamespace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::HttpNamespace\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::ServiceDiscovery::HttpNamespace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html"
    },
    "AWS::SageMaker::CodeRepository": {
        "prefix": "sagemaker-coderepository",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::CodeRepository\"\r\n\tProperties:\r\n\t\tCodeRepositoryName: String\r\n\t\tGitConfig: #required\r\n\t\t\tGitConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::CodeRepository\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html"
    },
    "AWS::ApiGateway::Stage": {
        "prefix": "apigateway-stage",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::Stage\"\r\n\tProperties:\r\n\t\tAccessLogSetting:\r\n\t\t\tAccessLogSetting\r\n\t\tCacheClusterEnabled: Boolean\r\n\t\tCacheClusterSize: String\r\n\t\tCanarySetting:\r\n\t\t\tCanarySetting\r\n\t\tClientCertificateId: String\r\n\t\tDeploymentId: String\r\n\t\tDescription: String\r\n\t\tDocumentationVersion: String\r\n\t\tMethodSettings:\r\n\t\t\t- MethodSetting\r\n\t\tRestApiId: String #required\r\n\t\tStageName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTracingEnabled: Boolean\r\n\t\tVariables:\r\n\t\t\tMap\r\n",
        "description": "AWS::ApiGateway::Stage\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html"
    },
    "AWS::SDB::Domain": {
        "prefix": "sdb-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SDB::Domain\"\r\n\tProperties:\r\n\t\tDescription: String\r\n",
        "description": "AWS::SDB::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html"
    },
    "AWS::Cognito::UserPoolClient": {
        "prefix": "cognito-userpoolclient",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolClient\"\r\n\tProperties:\r\n\t\tAnalyticsConfiguration:\r\n\t\t\tAnalyticsConfiguration\r\n\t\tGenerateSecret: Boolean\r\n\t\tCallbackURLs:\r\n\t\t\t- String\r\n\t\tIdTokenValidity: Integer\r\n\t\tAllowedOAuthScopes:\r\n\t\t\t- String\r\n\t\tTokenValidityUnits:\r\n\t\t\tTokenValidityUnits\r\n\t\tReadAttributes:\r\n\t\t\t- String\r\n\t\tAllowedOAuthFlowsUserPoolClient: Boolean\r\n\t\tDefaultRedirectURI: String\r\n\t\tSupportedIdentityProviders:\r\n\t\t\t- String\r\n\t\tClientName: String\r\n\t\tUserPoolId: String #required\r\n\t\tAllowedOAuthFlows:\r\n\t\t\t- String\r\n\t\tExplicitAuthFlows:\r\n\t\t\t- String\r\n\t\tLogoutURLs:\r\n\t\t\t- String\r\n\t\tAccessTokenValidity: Integer\r\n\t\tRefreshTokenValidity: Integer\r\n\t\tWriteAttributes:\r\n\t\t\t- String\r\n\t\tPreventUserExistenceErrors: String\r\n\t\tEnableTokenRevocation: Boolean\r\n",
        "description": "AWS::Cognito::UserPoolClient\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html"
    },
    "AWS::FraudDetector::EventType": {
        "prefix": "frauddetector-eventtype",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FraudDetector::EventType\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDescription: String\r\n\t\tEventVariables: #required\r\n\t\t\t- EventVariable\r\n\t\tLabels: #required\r\n\t\t\t- Label\r\n\t\tEntityTypes: #required\r\n\t\t\t- EntityType\r\n",
        "description": "AWS::FraudDetector::EventType\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html"
    },
    "AWS::IoTEvents::Input": {
        "prefix": "iotevents-input",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTEvents::Input\"\r\n\tProperties:\r\n\t\tInputDefinition: #required\r\n\t\t\tInputDefinition\r\n\t\tInputDescription: String\r\n\t\tInputName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTEvents::Input\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html"
    },
    "AWS::EC2::NetworkInsightsPath": {
        "prefix": "ec2-networkinsightspath",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInsightsPath\"\r\n\tProperties:\r\n\t\tSourceIp: String\r\n\t\tDestinationIp: String\r\n\t\tSource: String #required\r\n\t\tDestination: String #required\r\n\t\tProtocol: String #required\r\n\t\tDestinationPort: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::NetworkInsightsPath\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html"
    },
    "AWS::Glue::Database": {
        "prefix": "glue-database",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Database\"\r\n\tProperties:\r\n\t\tDatabaseInput: #required\r\n\t\t\tDatabaseInput\r\n\t\tCatalogId: String #required\r\n",
        "description": "AWS::Glue::Database\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html"
    },
    "AWS::RefactorSpaces::Route": {
        "prefix": "refactorspaces-route",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RefactorSpaces::Route\"\r\n\tProperties:\r\n\t\tApplicationIdentifier: String #required\r\n\t\tEnvironmentIdentifier: String #required\r\n\t\tRouteType: String\r\n\t\tServiceIdentifier: String #required\r\n\t\tUriPathRoute:\r\n\t\t\tUriPathRouteInput\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RefactorSpaces::Route\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html"
    },
    "AWS::ApiGateway::ClientCertificate": {
        "prefix": "apigateway-clientcertificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::ClientCertificate\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ApiGateway::ClientCertificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html"
    },
    "AWS::IAM::OIDCProvider": {
        "prefix": "iam-oidcprovider",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::OIDCProvider\"\r\n\tProperties:\r\n\t\tClientIdList:\r\n\t\t\t- String\r\n\t\tUrl: String\r\n\t\tThumbprintList: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IAM::OIDCProvider\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html"
    },
    "AWS::Evidently::Project": {
        "prefix": "evidently-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Evidently::Project\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tDataDelivery:\r\n\t\t\tDataDeliveryObject\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Evidently::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html"
    },
    "AWS::Wisdom::AssistantAssociation": {
        "prefix": "wisdom-assistantassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Wisdom::AssistantAssociation\"\r\n\tProperties:\r\n\t\tAssistantId: String #required\r\n\t\tAssociation: #required\r\n\t\t\tAssociationData\r\n\t\tAssociationType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Wisdom::AssistantAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html"
    },
    "AWS::Lambda::CodeSigningConfig": {
        "prefix": "lambda-codesigningconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lambda::CodeSigningConfig\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tAllowedPublishers: #required\r\n\t\t\tAllowedPublishers\r\n\t\tCodeSigningPolicies:\r\n\t\t\tCodeSigningPolicies\r\n",
        "description": "AWS::Lambda::CodeSigningConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html"
    },
    "AWS::RDS::DBSecurityGroup": {
        "prefix": "rds-dbsecuritygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBSecurityGroup\"\r\n\tProperties:\r\n\t\tDBSecurityGroupIngress: #required\r\n\t\t\t- Ingress\r\n\t\tEC2VpcId: String\r\n\t\tGroupDescription: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RDS::DBSecurityGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html"
    },
    "AWS::QuickSight::Analysis": {
        "prefix": "quicksight-analysis",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::Analysis\"\r\n\tProperties:\r\n\t\tAnalysisId: String #required\r\n\t\tAwsAccountId: String #required\r\n\t\tErrors:\r\n\t\t\t- AnalysisError\r\n\t\tName: String\r\n\t\tParameters:\r\n\t\t\tParameters\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tSourceEntity: #required\r\n\t\t\tAnalysisSourceEntity\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tThemeArn: String\r\n",
        "description": "AWS::QuickSight::Analysis\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html"
    },
    "AWS::Lightsail::LoadBalancerTlsCertificate": {
        "prefix": "lightsail-loadbalancertlscertificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::LoadBalancerTlsCertificate\"\r\n\tProperties:\r\n\t\tLoadBalancerName: String #required\r\n\t\tCertificateName: String #required\r\n\t\tCertificateDomainName: String #required\r\n\t\tCertificateAlternativeNames:\r\n\t\t\t- String\r\n\t\tIsAttached: Boolean\r\n",
        "description": "AWS::Lightsail::LoadBalancerTlsCertificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html"
    },
    "AWS::EC2::EIPAssociation": {
        "prefix": "ec2-eipassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::EIPAssociation\"\r\n\tProperties:\r\n\t\tAllocationId: String\r\n\t\tEIP: String\r\n\t\tInstanceId: String\r\n\t\tNetworkInterfaceId: String\r\n\t\tPrivateIpAddress: String\r\n",
        "description": "AWS::EC2::EIPAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
    },
    "AWS::EC2::VPNGateway": {
        "prefix": "ec2-vpngateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNGateway\"\r\n\tProperties:\r\n\t\tAmazonSideAsn: Long\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String #required\r\n",
        "description": "AWS::EC2::VPNGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
    },
    "AWS::IoTWireless::WirelessGateway": {
        "prefix": "iotwireless-wirelessgateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::WirelessGateway\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tLoRaWAN: #required\r\n\t\t\tLoRaWANGateway\r\n\t\tThingArn: String\r\n\t\tLastUplinkReceivedAt: String\r\n",
        "description": "AWS::IoTWireless::WirelessGateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html"
    },
    "AWS::GuardDuty::Detector": {
        "prefix": "guardduty-detector",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::Detector\"\r\n\tProperties:\r\n\t\tFindingPublishingFrequency: String\r\n\t\tDataSources:\r\n\t\t\tCFNDataSourceConfigurations\r\n\t\tEnable: Boolean #required\r\n",
        "description": "AWS::GuardDuty::Detector\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html"
    },
    "AWS::Wisdom::Assistant": {
        "prefix": "wisdom-assistant",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Wisdom::Assistant\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tDescription: String\r\n\t\tServerSideEncryptionConfiguration:\r\n\t\t\tServerSideEncryptionConfiguration\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::Wisdom::Assistant\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html"
    },
    "AWS::ServiceDiscovery::PrivateDnsNamespace": {
        "prefix": "servicediscovery-privatednsnamespace",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceDiscovery::PrivateDnsNamespace\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tVpc: String #required\r\n\t\tProperties:\r\n\t\t\tProperties\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::ServiceDiscovery::PrivateDnsNamespace\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html"
    },
    "AWS::S3Outposts::AccessPoint": {
        "prefix": "s3outposts-accesspoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3Outposts::AccessPoint\"\r\n\tProperties:\r\n\t\tBucket: String #required\r\n\t\tName: String #required\r\n\t\tVpcConfiguration: #required\r\n\t\t\tVpcConfiguration\r\n\t\tPolicy: Json\r\n",
        "description": "AWS::S3Outposts::AccessPoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html"
    },
    "AWS::MediaPackage::OriginEndpoint": {
        "prefix": "mediapackage-originendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaPackage::OriginEndpoint\"\r\n\tProperties:\r\n\t\tId: String #required\r\n\t\tChannelId: String #required\r\n\t\tDescription: String\r\n\t\tWhitelist:\r\n\t\t\t- String\r\n\t\tStartoverWindowSeconds: Integer\r\n\t\tTimeDelaySeconds: Integer\r\n\t\tManifestName: String\r\n\t\tOrigination: String\r\n\t\tAuthorization:\r\n\t\t\tAuthorization\r\n\t\tHlsPackage:\r\n\t\t\tHlsPackage\r\n\t\tDashPackage:\r\n\t\t\tDashPackage\r\n\t\tMssPackage:\r\n\t\t\tMssPackage\r\n\t\tCmafPackage:\r\n\t\t\tCmafPackage\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MediaPackage::OriginEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html"
    },
    "AWS::EC2::VPNConnection": {
        "prefix": "ec2-vpnconnection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNConnection\"\r\n\tProperties:\r\n\t\tCustomerGatewayId: String #required\r\n\t\tStaticRoutesOnly: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTransitGatewayId: String\r\n\t\tType: String #required\r\n\t\tVpnGatewayId: String\r\n\t\tVpnTunnelOptionsSpecifications:\r\n\t\t\t- VpnTunnelOptionsSpecification\r\n",
        "description": "AWS::EC2::VPNConnection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
    },
    "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": {
        "prefix": "route53resolver-resolverqueryloggingconfigassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\"\r\n\tProperties:\r\n\t\tResolverQueryLogConfigId: String\r\n\t\tResourceId: String\r\n",
        "description": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html"
    },
    "AWS::GlobalAccelerator::Listener": {
        "prefix": "globalaccelerator-listener",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::Listener\"\r\n\tProperties:\r\n\t\tAcceleratorArn: String #required\r\n\t\tPortRanges: #required\r\n\t\t\t- PortRange\r\n\t\tProtocol: String #required\r\n\t\tClientAffinity: String\r\n",
        "description": "AWS::GlobalAccelerator::Listener\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html"
    },
    "AWS::AppStream::Fleet": {
        "prefix": "appstream-fleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Fleet\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tComputeCapacity:\r\n\t\t\tComputeCapacity\r\n\t\tPlatform: String\r\n\t\tVpcConfig:\r\n\t\t\tVpcConfig\r\n\t\tFleetType: String\r\n\t\tEnableDefaultInternetAccess: Boolean\r\n\t\tDomainJoinInfo:\r\n\t\t\tDomainJoinInfo\r\n\t\tName: String #required\r\n\t\tImageName: String\r\n\t\tMaxUserDurationInSeconds: Integer\r\n\t\tIdleDisconnectTimeoutInSeconds: Integer\r\n\t\tUsbDeviceFilterStrings:\r\n\t\t\t- String\r\n\t\tDisconnectTimeoutInSeconds: Integer\r\n\t\tDisplayName: String\r\n\t\tStreamView: String\r\n\t\tIamRoleArn: String\r\n\t\tInstanceType: String #required\r\n\t\tMaxConcurrentSessions: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tImageArn: String\r\n",
        "description": "AWS::AppStream::Fleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html"
    },
    "AWS::FMS::NotificationChannel": {
        "prefix": "fms-notificationchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FMS::NotificationChannel\"\r\n\tProperties:\r\n\t\tSnsRoleName: String #required\r\n\t\tSnsTopicArn: String #required\r\n",
        "description": "AWS::FMS::NotificationChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html"
    },
    "AWS::Logs::SubscriptionFilter": {
        "prefix": "logs-subscriptionfilter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::SubscriptionFilter\"\r\n\tProperties:\r\n\t\tDestinationArn: String #required\r\n\t\tFilterPattern: String #required\r\n\t\tLogGroupName: String #required\r\n\t\tRoleArn: String\r\n",
        "description": "AWS::Logs::SubscriptionFilter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html"
    },
    "AWS::ServiceCatalogAppRegistry::ResourceAssociation": {
        "prefix": "servicecatalogappregistry-resourceassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalogAppRegistry::ResourceAssociation\"\r\n\tProperties:\r\n\t\tApplication: String #required\r\n\t\tResource: String #required\r\n\t\tResourceType: String #required\r\n",
        "description": "AWS::ServiceCatalogAppRegistry::ResourceAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html"
    },
    "AWS::EventSchemas::RegistryPolicy": {
        "prefix": "eventschemas-registrypolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::RegistryPolicy\"\r\n\tProperties:\r\n\t\tPolicy: Json #required\r\n\t\tRegistryName: String #required\r\n\t\tRevisionId: String\r\n",
        "description": "AWS::EventSchemas::RegistryPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html"
    },
    "AWS::AmazonMQ::Configuration": {
        "prefix": "amazonmq-configuration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::Configuration\"\r\n\tProperties:\r\n\t\tEngineVersion: String #required\r\n\t\tDescription: String\r\n\t\tAuthenticationStrategy: String\r\n\t\tEngineType: String #required\r\n\t\tData: String #required\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n\t\tName: String #required\r\n",
        "description": "AWS::AmazonMQ::Configuration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html"
    },
    "AWS::EC2::TransitGatewayRouteTable": {
        "prefix": "ec2-transitgatewayroutetable",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTable\"\r\n\tProperties:\r\n\t\tTransitGatewayId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TransitGatewayRouteTable\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html"
    },
    "AWS::CloudFront::RealtimeLogConfig": {
        "prefix": "cloudfront-realtimelogconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::RealtimeLogConfig\"\r\n\tProperties:\r\n\t\tEndPoints: #required\r\n\t\t\t- EndPoint\r\n\t\tFields: #required\r\n\t\t\t- String\r\n\t\tName: String #required\r\n\t\tSamplingRate: Double #required\r\n",
        "description": "AWS::CloudFront::RealtimeLogConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html"
    },
    "AWS::Evidently::Feature": {
        "prefix": "evidently-feature",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Evidently::Feature\"\r\n\tProperties:\r\n\t\tProject: String #required\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tEvaluationStrategy: String\r\n\t\tVariations: #required\r\n\t\t\t- VariationObject\r\n\t\tDefaultVariation: String\r\n\t\tEntityOverrides:\r\n\t\t\t- EntityOverride\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Evidently::Feature\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html"
    },
    "AWS::Route53::HealthCheck": {
        "prefix": "route53-healthcheck",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::HealthCheck\"\r\n\tProperties:\r\n\t\tHealthCheckConfig: Json #required\r\n\t\tHealthCheckTags:\r\n\t\t\t- HealthCheckTag\r\n",
        "description": "AWS::Route53::HealthCheck\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html"
    },
    "AWS::MediaLive::Channel": {
        "prefix": "medialive-channel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::Channel\"\r\n\tProperties:\r\n\t\tInputAttachments:\r\n\t\t\t- InputAttachment\r\n\t\tInputSpecification:\r\n\t\t\tInputSpecification\r\n\t\tChannelClass: String\r\n\t\tEncoderSettings:\r\n\t\t\tEncoderSettings\r\n\t\tDestinations:\r\n\t\t\t- OutputDestination\r\n\t\tVpc:\r\n\t\t\tVpcOutputSettings\r\n\t\tCdiInputSpecification:\r\n\t\t\tCdiInputSpecification\r\n\t\tLogLevel: String\r\n\t\tRoleArn: String\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::MediaLive::Channel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html"
    },
    "AWS::S3Outposts::Bucket": {
        "prefix": "s3outposts-bucket",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3Outposts::Bucket\"\r\n\tProperties:\r\n\t\tBucketName: String #required\r\n\t\tOutpostId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tLifecycleConfiguration:\r\n\t\t\tLifecycleConfiguration\r\n",
        "description": "AWS::S3Outposts::Bucket\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html"
    },
    "AWS::NetworkManager::Device": {
        "prefix": "networkmanager-device",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Device\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tGlobalNetworkId: String #required\r\n\t\tLocation:\r\n\t\t\tLocation\r\n\t\tModel: String\r\n\t\tSerialNumber: String\r\n\t\tSiteId: String\r\n\t\tType: String\r\n\t\tVendor: String\r\n",
        "description": "AWS::NetworkManager::Device\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html"
    },
    "AWS::RDS::DBClusterParameterGroup": {
        "prefix": "rds-dbclusterparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tFamily: String #required\r\n\t\tParameters: Json #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RDS::DBClusterParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html"
    },
    "AWS::EC2::VPCEndpointService": {
        "prefix": "ec2-vpcendpointservice",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpointService\"\r\n\tProperties:\r\n\t\tNetworkLoadBalancerArns:\r\n\t\t\t- String\r\n\t\tPayerResponsibility: String\r\n\t\tAcceptanceRequired: Boolean\r\n\t\tGatewayLoadBalancerArns:\r\n\t\t\t- String\r\n",
        "description": "AWS::EC2::VPCEndpointService\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html"
    },
    "AWS::MemoryDB::Cluster": {
        "prefix": "memorydb-cluster",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MemoryDB::Cluster\"\r\n\tProperties:\r\n\t\tClusterName: String #required\r\n\t\tDescription: String\r\n\t\tNodeType: String #required\r\n\t\tNumShards: Integer\r\n\t\tNumReplicasPerShard: Integer\r\n\t\tSubnetGroupName: String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tMaintenanceWindow: String\r\n\t\tParameterGroupName: String\r\n\t\tPort: Integer\r\n\t\tSnapshotRetentionLimit: Integer\r\n\t\tSnapshotWindow: String\r\n\t\tACLName: String #required\r\n\t\tSnsTopicArn: String\r\n\t\tSnsTopicStatus: String\r\n\t\tTLSEnabled: Boolean\r\n\t\tKmsKeyId: String\r\n\t\tSnapshotArns:\r\n\t\t\t- String\r\n\t\tSnapshotName: String\r\n\t\tFinalSnapshotName: String\r\n\t\tEngineVersion: String\r\n\t\tAutoMinorVersionUpgrade: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::MemoryDB::Cluster\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html"
    },
    "AWS::ServiceCatalog::StackSetConstraint": {
        "prefix": "servicecatalog-stacksetconstraint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::StackSetConstraint\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tStackInstanceControl: String #required\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n\t\tRegionList: #required\r\n\t\t\t- String\r\n\t\tAdminRole: String #required\r\n\t\tAccountList: #required\r\n\t\t\t- String\r\n\t\tExecutionRole: String #required\r\n",
        "description": "AWS::ServiceCatalog::StackSetConstraint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html"
    },
    "AWS::Glue::Crawler": {
        "prefix": "glue-crawler",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Crawler\"\r\n\tProperties:\r\n\t\tClassifiers:\r\n\t\t\t- String\r\n\t\tDescription: String\r\n\t\tSchemaChangePolicy:\r\n\t\t\tSchemaChangePolicy\r\n\t\tConfiguration: String\r\n\t\tRecrawlPolicy:\r\n\t\t\tRecrawlPolicy\r\n\t\tDatabaseName: String\r\n\t\tTargets: #required\r\n\t\t\tTargets\r\n\t\tCrawlerSecurityConfiguration: String\r\n\t\tName: String\r\n\t\tRole: String #required\r\n\t\tSchedule:\r\n\t\t\tSchedule\r\n\t\tTablePrefix: String\r\n\t\tTags: Json\r\n",
        "description": "AWS::Glue::Crawler\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html"
    },
    "AWS::MediaConnect::FlowOutput": {
        "prefix": "mediaconnect-flowoutput",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConnect::FlowOutput\"\r\n\tProperties:\r\n\t\tFlowArn: String #required\r\n\t\tCidrAllowList:\r\n\t\t\t- String\r\n\t\tEncryption:\r\n\t\t\tEncryption\r\n\t\tDescription: String\r\n\t\tDestination: String\r\n\t\tMaxLatency: Integer\r\n\t\tMinLatency: Integer\r\n\t\tName: String\r\n\t\tPort: Integer\r\n\t\tProtocol: String #required\r\n\t\tRemoteId: String\r\n\t\tSmoothingLatency: Integer\r\n\t\tStreamId: String\r\n\t\tVpcInterfaceAttachment:\r\n\t\t\tVpcInterfaceAttachment\r\n",
        "description": "AWS::MediaConnect::FlowOutput\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html"
    },
    "AWS::ApiGateway::DocumentationVersion": {
        "prefix": "apigateway-documentationversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::DocumentationVersion\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tDocumentationVersion: String #required\r\n\t\tRestApiId: String #required\r\n",
        "description": "AWS::ApiGateway::DocumentationVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html"
    },
    "AWS::EC2::NetworkInsightsAccessScopeAnalysis": {
        "prefix": "ec2-networkinsightsaccessscopeanalysis",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkInsightsAccessScopeAnalysis\"\r\n\tProperties:\r\n\t\tNetworkInsightsAccessScopeId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::NetworkInsightsAccessScopeAnalysis\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html"
    },
    "AWS::Transfer::Server": {
        "prefix": "transfer-server",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Transfer::Server\"\r\n\tProperties:\r\n\t\tLoggingRole: String\r\n\t\tProtocols:\r\n\t\t\t- Protocol\r\n\t\tIdentityProviderDetails:\r\n\t\t\tIdentityProviderDetails\r\n\t\tEndpointType: String\r\n\t\tSecurityPolicyName: String\r\n\t\tProtocolDetails:\r\n\t\t\tProtocolDetails\r\n\t\tWorkflowDetails:\r\n\t\t\tWorkflowDetails\r\n\t\tDomain: String\r\n\t\tEndpointDetails:\r\n\t\t\tEndpointDetails\r\n\t\tIdentityProviderType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCertificate: String\r\n",
        "description": "AWS::Transfer::Server\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html"
    },
    "AWS::Route53Resolver::ResolverConfig": {
        "prefix": "route53resolver-resolverconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverConfig\"\r\n\tProperties:\r\n\t\tResourceId: String #required\r\n\t\tAutodefinedReverseFlag: String #required\r\n",
        "description": "AWS::Route53Resolver::ResolverConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html"
    },
    "AWS::NimbleStudio::LaunchProfile": {
        "prefix": "nimblestudio-launchprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NimbleStudio::LaunchProfile\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tEc2SubnetIds: #required\r\n\t\t\t- String\r\n\t\tLaunchProfileProtocolVersions: #required\r\n\t\t\t- String\r\n\t\tName: String #required\r\n\t\tStreamConfiguration: #required\r\n\t\t\tStreamConfiguration\r\n\t\tStudioComponentIds: #required\r\n\t\t\t- String\r\n\t\tStudioId: String #required\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::NimbleStudio::LaunchProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html"
    },
    "AWS::Glue::Classifier": {
        "prefix": "glue-classifier",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Classifier\"\r\n\tProperties:\r\n\t\tXMLClassifier:\r\n\t\t\tXMLClassifier\r\n\t\tJsonClassifier:\r\n\t\t\tJsonClassifier\r\n\t\tCsvClassifier:\r\n\t\t\tCsvClassifier\r\n\t\tGrokClassifier:\r\n\t\t\tGrokClassifier\r\n",
        "description": "AWS::Glue::Classifier\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html"
    },
    "AWS::AmazonMQ::Broker": {
        "prefix": "amazonmq-broker",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmazonMQ::Broker\"\r\n\tProperties:\r\n\t\tSecurityGroups:\r\n\t\t\t- String\r\n\t\tStorageType: String\r\n\t\tEngineVersion: String #required\r\n\t\tConfiguration:\r\n\t\t\tConfigurationId\r\n\t\tAuthenticationStrategy: String\r\n\t\tMaintenanceWindowStartTime:\r\n\t\t\tMaintenanceWindow\r\n\t\tHostInstanceType: String #required\r\n\t\tAutoMinorVersionUpgrade: Boolean #required\r\n\t\tUsers: #required\r\n\t\t\t- User\r\n\t\tLogs:\r\n\t\t\tLogList\r\n\t\tSubnetIds:\r\n\t\t\t- String\r\n\t\tBrokerName: String #required\r\n\t\tLdapServerMetadata:\r\n\t\t\tLdapServerMetadata\r\n\t\tDeploymentMode: String #required\r\n\t\tEngineType: String #required\r\n\t\tPubliclyAccessible: Boolean #required\r\n\t\tEncryptionOptions:\r\n\t\t\tEncryptionOptions\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::AmazonMQ::Broker\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html"
    },
    "AWS::Lightsail::Disk": {
        "prefix": "lightsail-disk",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Disk\"\r\n\tProperties:\r\n\t\tDiskName: String #required\r\n\t\tAvailabilityZone: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAddOns:\r\n\t\t\t- AddOn\r\n\t\tSizeInGb: Integer #required\r\n",
        "description": "AWS::Lightsail::Disk\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html"
    },
    "AWS::AppSync::DataSource": {
        "prefix": "appsync-datasource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppSync::DataSource\"\r\n\tProperties:\r\n\t\tType: String #required\r\n\t\tOpenSearchServiceConfig:\r\n\t\t\tOpenSearchServiceConfig\r\n\t\tDescription: String\r\n\t\tServiceRoleArn: String\r\n\t\tHttpConfig:\r\n\t\t\tHttpConfig\r\n\t\tRelationalDatabaseConfig:\r\n\t\t\tRelationalDatabaseConfig\r\n\t\tLambdaConfig:\r\n\t\t\tLambdaConfig\r\n\t\tApiId: String #required\r\n\t\tName: String #required\r\n\t\tDynamoDBConfig:\r\n\t\t\tDynamoDBConfig\r\n\t\tElasticsearchConfig:\r\n\t\t\tElasticsearchConfig\r\n",
        "description": "AWS::AppSync::DataSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroup": {
        "prefix": "servicecatalogappregistry-attributegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalogAppRegistry::AttributeGroup\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tAttributes: Json #required\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ServiceCatalogAppRegistry::AttributeGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html"
    },
    "AWS::ECS::PrimaryTaskSet": {
        "prefix": "ecs-primarytaskset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::PrimaryTaskSet\"\r\n\tProperties:\r\n\t\tCluster: String #required\r\n\t\tTaskSetId: String #required\r\n\t\tService: String #required\r\n",
        "description": "AWS::ECS::PrimaryTaskSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html"
    },
    "AWS::Greengrass::Group": {
        "prefix": "greengrass-group",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::Group\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tGroupVersion\r\n\t\tRoleArn: String\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::Group\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html"
    },
    "AWS::Cognito::IdentityPoolRoleAttachment": {
        "prefix": "cognito-identitypoolroleattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::IdentityPoolRoleAttachment\"\r\n\tProperties:\r\n\t\tRoleMappings: Json\r\n\t\tIdentityPoolId: String #required\r\n\t\tRoles: Json\r\n",
        "description": "AWS::Cognito::IdentityPoolRoleAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html"
    },
    "AWS::Lightsail::Container": {
        "prefix": "lightsail-container",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::Container\"\r\n\tProperties:\r\n\t\tServiceName: String #required\r\n\t\tPower: String #required\r\n\t\tScale: Integer #required\r\n\t\tPublicDomainNames:\r\n\t\t\t- PublicDomainName\r\n\t\tContainerServiceDeployment:\r\n\t\t\tContainerServiceDeployment\r\n\t\tIsDisabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Lightsail::Container\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html"
    },
    "AWS::MediaLive::Input": {
        "prefix": "medialive-input",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaLive::Input\"\r\n\tProperties:\r\n\t\tType: String\r\n\t\tDestinations:\r\n\t\t\t- InputDestinationRequest\r\n\t\tVpc:\r\n\t\t\tInputVpcRequest\r\n\t\tMediaConnectFlows:\r\n\t\t\t- MediaConnectFlowRequest\r\n\t\tInputSecurityGroups:\r\n\t\t\t- String\r\n\t\tInputDevices:\r\n\t\t\t- InputDeviceSettings\r\n\t\tSources:\r\n\t\t\t- InputSourceRequest\r\n\t\tRoleArn: String\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::MediaLive::Input\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html"
    },
    "AWS::Route53::KeySigningKey": {
        "prefix": "route53-keysigningkey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53::KeySigningKey\"\r\n\tProperties:\r\n\t\tHostedZoneId: String #required\r\n\t\tStatus: String #required\r\n\t\tName: String #required\r\n\t\tKeyManagementServiceArn: String #required\r\n",
        "description": "AWS::Route53::KeySigningKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html"
    },
    "AWS::Route53Resolver::ResolverDNSSECConfig": {
        "prefix": "route53resolver-resolverdnssecconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverDNSSECConfig\"\r\n\tProperties:\r\n\t\tResourceId: String\r\n",
        "description": "AWS::Route53Resolver::ResolverDNSSECConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html"
    },
    "AWS::AppMesh::VirtualService": {
        "prefix": "appmesh-virtualservice",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppMesh::VirtualService\"\r\n\tProperties:\r\n\t\tMeshName: String #required\r\n\t\tMeshOwner: String\r\n\t\tVirtualServiceName: String #required\r\n\t\tSpec: #required\r\n\t\t\tVirtualServiceSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppMesh::VirtualService\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html"
    },
    "AWS::EC2::GatewayRouteTableAssociation": {
        "prefix": "ec2-gatewayroutetableassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::GatewayRouteTableAssociation\"\r\n\tProperties:\r\n\t\tRouteTableId: String #required\r\n\t\tGatewayId: String #required\r\n",
        "description": "AWS::EC2::GatewayRouteTableAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html"
    },
    "AWS::Kendra::Faq": {
        "prefix": "kendra-faq",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Kendra::Faq\"\r\n\tProperties:\r\n\t\tIndexId: String #required\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tFileFormat: String\r\n\t\tS3Path: #required\r\n\t\t\tS3Path\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Kendra::Faq\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html"
    },
    "AWS::AppStream::ImageBuilder": {
        "prefix": "appstream-imagebuilder",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::ImageBuilder\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tVpcConfig:\r\n\t\t\tVpcConfig\r\n\t\tEnableDefaultInternetAccess: Boolean\r\n\t\tDomainJoinInfo:\r\n\t\t\tDomainJoinInfo\r\n\t\tAppstreamAgentVersion: String\r\n\t\tName: String #required\r\n\t\tImageName: String\r\n\t\tDisplayName: String\r\n\t\tIamRoleArn: String\r\n\t\tInstanceType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tImageArn: String\r\n\t\tAccessEndpoints:\r\n\t\t\t- AccessEndpoint\r\n",
        "description": "AWS::AppStream::ImageBuilder\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html"
    },
    "AWS::CloudWatch::MetricStream": {
        "prefix": "cloudwatch-metricstream",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::MetricStream\"\r\n\tProperties:\r\n\t\tExcludeFilters:\r\n\t\t\t- MetricStreamFilter\r\n\t\tFirehoseArn: String #required\r\n\t\tIncludeFilters:\r\n\t\t\t- MetricStreamFilter\r\n\t\tName: String\r\n\t\tRoleArn: String #required\r\n\t\tOutputFormat: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::CloudWatch::MetricStream\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html"
    },
    "AWS::ImageBuilder::InfrastructureConfiguration": {
        "prefix": "imagebuilder-infrastructureconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::InfrastructureConfiguration\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tInstanceTypes:\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tLogging:\r\n\t\t\tLogging\r\n\t\tSubnetId: String\r\n\t\tKeyPair: String\r\n\t\tTerminateInstanceOnFailure: Boolean\r\n\t\tInstanceProfileName: String #required\r\n\t\tInstanceMetadataOptions:\r\n\t\t\tInstanceMetadataOptions\r\n\t\tSnsTopicArn: String\r\n\t\tResourceTags:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::InfrastructureConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html"
    },
    "AWS::EC2::NetworkAclEntry": {
        "prefix": "ec2-networkaclentry",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkAclEntry\"\r\n\tProperties:\r\n\t\tPortRange:\r\n\t\t\tPortRange\r\n\t\tNetworkAclId: String #required\r\n\t\tRuleAction: String #required\r\n\t\tCidrBlock: String\r\n\t\tEgress: Boolean\r\n\t\tRuleNumber: Integer #required\r\n\t\tIpv6CidrBlock: String\r\n\t\tProtocol: Integer #required\r\n\t\tIcmp:\r\n\t\t\tIcmp\r\n",
        "description": "AWS::EC2::NetworkAclEntry\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html"
    },
    "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
        "prefix": "elasticloadbalancingv2-listenercertificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticLoadBalancingV2::ListenerCertificate\"\r\n\tProperties:\r\n\t\tCertificates: #required\r\n\t\t\t- Certificate\r\n\t\tListenerArn: String #required\r\n",
        "description": "AWS::ElasticLoadBalancingV2::ListenerCertificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html"
    },
    "AWS::Neptune::DBParameterGroup": {
        "prefix": "neptune-dbparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Neptune::DBParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tParameters: Json #required\r\n\t\tFamily: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::Neptune::DBParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html"
    },
    "AWS::Lightsail::StaticIp": {
        "prefix": "lightsail-staticip",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lightsail::StaticIp\"\r\n\tProperties:\r\n\t\tStaticIpName: String #required\r\n\t\tAttachedTo: String\r\n",
        "description": "AWS::Lightsail::StaticIp\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html"
    },
    "AWS::EKS::Addon": {
        "prefix": "eks-addon",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EKS::Addon\"\r\n\tProperties:\r\n\t\tClusterName: String #required\r\n\t\tAddonName: String #required\r\n\t\tAddonVersion: String\r\n\t\tResolveConflicts: String\r\n\t\tServiceAccountRoleArn: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EKS::Addon\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html"
    },
    "AWS::Pinpoint::SmsTemplate": {
        "prefix": "pinpoint-smstemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::SmsTemplate\"\r\n\tProperties:\r\n\t\tTemplateName: String #required\r\n\t\tTemplateDescription: String\r\n\t\tDefaultSubstitutions: String\r\n\t\tBody: String #required\r\n\t\tTags: Json\r\n",
        "description": "AWS::Pinpoint::SmsTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html"
    },
    "AWS::ServiceCatalog::TagOptionAssociation": {
        "prefix": "servicecatalog-tagoptionassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::TagOptionAssociation\"\r\n\tProperties:\r\n\t\tTagOptionId: String #required\r\n\t\tResourceId: String #required\r\n",
        "description": "AWS::ServiceCatalog::TagOptionAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html"
    },
    "AWS::Glue::Schema": {
        "prefix": "glue-schema",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Schema\"\r\n\tProperties:\r\n\t\tRegistry:\r\n\t\t\tRegistry\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tDataFormat: String #required\r\n\t\tCompatibility: String #required\r\n\t\tSchemaDefinition: String #required\r\n\t\tCheckpointVersion:\r\n\t\t\tSchemaVersion\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Glue::Schema\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html"
    },
    "AWS::QuickSight::Template": {
        "prefix": "quicksight-template",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::Template\"\r\n\tProperties:\r\n\t\tAwsAccountId: String #required\r\n\t\tName: String\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tSourceEntity: #required\r\n\t\t\tTemplateSourceEntity\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTemplateId: String #required\r\n\t\tVersionDescription: String\r\n",
        "description": "AWS::QuickSight::Template\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html"
    },
    "AWS::ApiGatewayV2::VpcLink": {
        "prefix": "apigatewayv2-vpclink",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::VpcLink\"\r\n\tProperties:\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::ApiGatewayV2::VpcLink\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html"
    },
    "AWS::QuickSight::DataSource": {
        "prefix": "quicksight-datasource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::DataSource\"\r\n\tProperties:\r\n\t\tAlternateDataSourceParameters:\r\n\t\t\t- DataSourceParameters\r\n\t\tAwsAccountId: String\r\n\t\tCredentials:\r\n\t\t\tDataSourceCredentials\r\n\t\tDataSourceId: String\r\n\t\tDataSourceParameters:\r\n\t\t\tDataSourceParameters\r\n\t\tErrorInfo:\r\n\t\t\tDataSourceErrorInfo\r\n\t\tName: String\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tSslProperties:\r\n\t\t\tSslProperties\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String\r\n\t\tVpcConnectionProperties:\r\n\t\t\tVpcConnectionProperties\r\n",
        "description": "AWS::QuickSight::DataSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html"
    },
    "AWS::EC2::SpotFleet": {
        "prefix": "ec2-spotfleet",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SpotFleet\"\r\n\tProperties:\r\n\t\tSpotFleetRequestConfigData: #required\r\n\t\t\tSpotFleetRequestConfigData\r\n",
        "description": "AWS::EC2::SpotFleet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html"
    },
    "AWS::S3ObjectLambda::AccessPointPolicy": {
        "prefix": "s3objectlambda-accesspointpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3ObjectLambda::AccessPointPolicy\"\r\n\tProperties:\r\n\t\tObjectLambdaAccessPoint: String #required\r\n\t\tPolicyDocument: Json #required\r\n",
        "description": "AWS::S3ObjectLambda::AccessPointPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html"
    },
    "AWS::SSM::Document": {
        "prefix": "ssm-document",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Document\"\r\n\tProperties:\r\n\t\tContent: Json #required\r\n\t\tAttachments:\r\n\t\t\t- AttachmentsSource\r\n\t\tName: String\r\n\t\tVersionName: String\r\n\t\tDocumentType: String\r\n\t\tDocumentFormat: String\r\n\t\tTargetType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tRequires:\r\n\t\t\t- DocumentRequires\r\n",
        "description": "AWS::SSM::Document\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html"
    },
    "AWS::SageMaker::Model": {
        "prefix": "sagemaker-model",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Model\"\r\n\tProperties:\r\n\t\tExecutionRoleArn: String #required\r\n\t\tEnableNetworkIsolation: Boolean\r\n\t\tPrimaryContainer:\r\n\t\t\tContainerDefinition\r\n\t\tModelName: String\r\n\t\tVpcConfig:\r\n\t\t\tVpcConfig\r\n\t\tContainers:\r\n\t\t\t- ContainerDefinition\r\n\t\tInferenceExecutionConfig:\r\n\t\t\tInferenceExecutionConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::Model\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html"
    },
    "AWS::EC2::TrafficMirrorFilter": {
        "prefix": "ec2-trafficmirrorfilter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorFilter\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tNetworkServices:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TrafficMirrorFilter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html"
    },
    "AWS::Connect::User": {
        "prefix": "connect-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::User\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tDirectoryUserId: String\r\n\t\tHierarchyGroupArn: String\r\n\t\tUsername: String #required\r\n\t\tPassword: String\r\n\t\tRoutingProfileArn: String #required\r\n\t\tIdentityInfo:\r\n\t\t\tUserIdentityInfo\r\n\t\tPhoneConfig: #required\r\n\t\t\tUserPhoneConfig\r\n\t\tSecurityProfileArns: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Connect::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html"
    },
    "AWS::QLDB::Ledger": {
        "prefix": "qldb-ledger",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QLDB::Ledger\"\r\n\tProperties:\r\n\t\tPermissionsMode: String #required\r\n\t\tDeletionProtection: Boolean\r\n\t\tKmsKey: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::QLDB::Ledger\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html"
    },
    "AWS::CloudWatch::Alarm": {
        "prefix": "cloudwatch-alarm",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudWatch::Alarm\"\r\n\tProperties:\r\n\t\tActionsEnabled: Boolean\r\n\t\tAlarmActions:\r\n\t\t\t- String\r\n\t\tAlarmDescription: String\r\n\t\tAlarmName: String\r\n\t\tComparisonOperator: String #required\r\n\t\tDatapointsToAlarm: Integer\r\n\t\tDimensions:\r\n\t\t\t- Dimension\r\n\t\tEvaluateLowSampleCountPercentile: String\r\n\t\tEvaluationPeriods: Integer #required\r\n\t\tExtendedStatistic: String\r\n\t\tInsufficientDataActions:\r\n\t\t\t- String\r\n\t\tMetricName: String\r\n\t\tMetrics:\r\n\t\t\t- MetricDataQuery\r\n\t\tNamespace: String\r\n\t\tOKActions:\r\n\t\t\t- String\r\n\t\tPeriod: Integer\r\n\t\tStatistic: String\r\n\t\tThreshold: Double\r\n\t\tThresholdMetricId: String\r\n\t\tTreatMissingData: String\r\n\t\tUnit: String\r\n",
        "description": "AWS::CloudWatch::Alarm\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html"
    },
    "AWS::Backup::BackupSelection": {
        "prefix": "backup-backupselection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Backup::BackupSelection\"\r\n\tProperties:\r\n\t\tBackupPlanId: String #required\r\n\t\tBackupSelection: #required\r\n\t\t\tBackupSelectionResourceType\r\n",
        "description": "AWS::Backup::BackupSelection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html"
    },
    "AWS::Pinpoint::Segment": {
        "prefix": "pinpoint-segment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::Segment\"\r\n\tProperties:\r\n\t\tSegmentGroups:\r\n\t\t\tSegmentGroups\r\n\t\tDimensions:\r\n\t\t\tSegmentDimensions\r\n\t\tApplicationId: String #required\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Pinpoint::Segment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html"
    },
    "AWS::Route53Resolver::FirewallDomainList": {
        "prefix": "route53resolver-firewalldomainlist",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::FirewallDomainList\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDomains:\r\n\t\t\t- String\r\n\t\tDomainFileUrl: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Route53Resolver::FirewallDomainList\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html"
    },
    "AWS::Pinpoint::APNSSandboxChannel": {
        "prefix": "pinpoint-apnssandboxchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::APNSSandboxChannel\"\r\n\tProperties:\r\n\t\tBundleId: String\r\n\t\tPrivateKey: String\r\n\t\tEnabled: Boolean\r\n\t\tDefaultAuthenticationMethod: String\r\n\t\tTokenKey: String\r\n\t\tApplicationId: String #required\r\n\t\tTeamId: String\r\n\t\tCertificate: String\r\n\t\tTokenKeyId: String\r\n",
        "description": "AWS::Pinpoint::APNSSandboxChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html"
    },
    "AWS::Pinpoint::ADMChannel": {
        "prefix": "pinpoint-admchannel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::ADMChannel\"\r\n\tProperties:\r\n\t\tClientSecret: String #required\r\n\t\tEnabled: Boolean\r\n\t\tClientId: String #required\r\n\t\tApplicationId: String #required\r\n",
        "description": "AWS::Pinpoint::ADMChannel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html"
    },
    "AWS::CertificateManager::Certificate": {
        "prefix": "certificatemanager-certificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CertificateManager::Certificate\"\r\n\tProperties:\r\n\t\tCertificateAuthorityArn: String\r\n\t\tCertificateTransparencyLoggingPreference: String\r\n\t\tDomainName: String #required\r\n\t\tDomainValidationOptions:\r\n\t\t\t- DomainValidationOption\r\n\t\tSubjectAlternativeNames:\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tValidationMethod: String\r\n",
        "description": "AWS::CertificateManager::Certificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html"
    },
    "AWS::Greengrass::SubscriptionDefinitionVersion": {
        "prefix": "greengrass-subscriptiondefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::SubscriptionDefinitionVersion\"\r\n\tProperties:\r\n\t\tSubscriptionDefinitionId: String #required\r\n\t\tSubscriptions: #required\r\n\t\t\t- Subscription\r\n",
        "description": "AWS::Greengrass::SubscriptionDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html"
    },
    "AWS::Greengrass::CoreDefinitionVersion": {
        "prefix": "greengrass-coredefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::CoreDefinitionVersion\"\r\n\tProperties:\r\n\t\tCores: #required\r\n\t\t\t- Core\r\n\t\tCoreDefinitionId: String #required\r\n",
        "description": "AWS::Greengrass::CoreDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html"
    },
    "AWS::MediaConvert::Preset": {
        "prefix": "mediaconvert-preset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConvert::Preset\"\r\n\tProperties:\r\n\t\tCategory: String\r\n\t\tDescription: String\r\n\t\tSettingsJson: Json #required\r\n\t\tTags: Json\r\n\t\tName: String\r\n",
        "description": "AWS::MediaConvert::Preset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html"
    },
    "AWS::LicenseManager::Grant": {
        "prefix": "licensemanager-grant",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::LicenseManager::Grant\"\r\n\tProperties:\r\n\t\tGrantName: String\r\n\t\tLicenseArn: String\r\n\t\tHomeRegion: String\r\n\t\tAllowedOperations:\r\n\t\t\t- String\r\n\t\tPrincipals:\r\n\t\t\t- String\r\n\t\tStatus: String\r\n",
        "description": "AWS::LicenseManager::Grant\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html"
    },
    "AWS::CodeStarNotifications::NotificationRule": {
        "prefix": "codestarnotifications-notificationrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeStarNotifications::NotificationRule\"\r\n\tProperties:\r\n\t\tEventTypeId: String\r\n\t\tCreatedBy: String\r\n\t\tTargetAddress: String\r\n\t\tEventTypeIds: #required\r\n\t\t\t- String\r\n\t\tStatus: String\r\n\t\tDetailType: String #required\r\n\t\tResource: String #required\r\n\t\tTargets: #required\r\n\t\t\t- Target\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::CodeStarNotifications::NotificationRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html"
    },
    "AWS::IoTAnalytics::Dataset": {
        "prefix": "iotanalytics-dataset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Dataset\"\r\n\tProperties:\r\n\t\tActions: #required\r\n\t\t\t- Action\r\n\t\tLateDataRules:\r\n\t\t\t- LateDataRule\r\n\t\tDatasetName: String\r\n\t\tContentDeliveryRules:\r\n\t\t\t- DatasetContentDeliveryRule\r\n\t\tTriggers:\r\n\t\t\t- Trigger\r\n\t\tVersioningConfiguration:\r\n\t\t\tVersioningConfiguration\r\n\t\tRetentionPeriod:\r\n\t\t\tRetentionPeriod\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTAnalytics::Dataset\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html"
    },
    "AWS::XRay::SamplingRule": {
        "prefix": "xray-samplingrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::XRay::SamplingRule\"\r\n\tProperties:\r\n\t\tSamplingRule:\r\n\t\t\tSamplingRule\r\n\t\tSamplingRuleRecord:\r\n\t\t\tSamplingRuleRecord\r\n\t\tSamplingRuleUpdate:\r\n\t\t\tSamplingRuleUpdate\r\n\t\tRuleName: String\r\n\t\tTags:\r\n\t\t\t- Json\r\n",
        "description": "AWS::XRay::SamplingRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html"
    },
    "AWS::IoT::ProvisioningTemplate": {
        "prefix": "iot-provisioningtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ProvisioningTemplate\"\r\n\tProperties:\r\n\t\tTemplateName: String\r\n\t\tDescription: String\r\n\t\tEnabled: Boolean\r\n\t\tProvisioningRoleArn: String #required\r\n\t\tTemplateBody: String #required\r\n\t\tPreProvisioningHook:\r\n\t\t\tProvisioningHook\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::ProvisioningTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html"
    },
    "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
        "prefix": "servicecatalog-portfolioprincipalassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\"\r\n\tProperties:\r\n\t\tPrincipalARN: String #required\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tPrincipalType: String #required\r\n",
        "description": "AWS::ServiceCatalog::PortfolioPrincipalAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html"
    },
    "AWS::ACMPCA::Permission": {
        "prefix": "acmpca-permission",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ACMPCA::Permission\"\r\n\tProperties:\r\n\t\tActions: #required\r\n\t\t\t- String\r\n\t\tCertificateAuthorityArn: String #required\r\n\t\tPrincipal: String #required\r\n\t\tSourceAccount: String\r\n",
        "description": "AWS::ACMPCA::Permission\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html"
    },
    "AWS::DataBrew::Job": {
        "prefix": "databrew-job",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Job\"\r\n\tProperties:\r\n\t\tDatasetName: String\r\n\t\tEncryptionKeyArn: String\r\n\t\tEncryptionMode: String\r\n\t\tName: String #required\r\n\t\tType: String #required\r\n\t\tLogSubscription: String\r\n\t\tMaxCapacity: Integer\r\n\t\tMaxRetries: Integer\r\n\t\tOutputs:\r\n\t\t\t- Output\r\n\t\tDataCatalogOutputs:\r\n\t\t\t- DataCatalogOutput\r\n\t\tDatabaseOutputs:\r\n\t\t\t- DatabaseOutput\r\n\t\tOutputLocation:\r\n\t\t\tOutputLocation\r\n\t\tProjectName: String\r\n\t\tRecipe:\r\n\t\t\tRecipe\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTimeout: Integer\r\n\t\tJobSample:\r\n\t\t\tJobSample\r\n\t\tProfileConfiguration:\r\n\t\t\tProfileConfiguration\r\n\t\tValidationConfigurations:\r\n\t\t\t- ValidationConfiguration\r\n",
        "description": "AWS::DataBrew::Job\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html"
    },
    "AWS::GameLift::MatchmakingRuleSet": {
        "prefix": "gamelift-matchmakingruleset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::MatchmakingRuleSet\"\r\n\tProperties:\r\n\t\tRuleSetBody: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::GameLift::MatchmakingRuleSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html"
    },
    "AWS::IoTWireless::FuotaTask": {
        "prefix": "iotwireless-fuotatask",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::FuotaTask\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tLoRaWAN: #required\r\n\t\t\tLoRaWAN\r\n\t\tFirmwareUpdateImage: String #required\r\n\t\tFirmwareUpdateRole: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tAssociateWirelessDevice: String\r\n\t\tDisassociateWirelessDevice: String\r\n\t\tAssociateMulticastGroup: String\r\n\t\tDisassociateMulticastGroup: String\r\n",
        "description": "AWS::IoTWireless::FuotaTask\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html"
    },
    "AWS::EC2::SecurityGroupIngress": {
        "prefix": "ec2-securitygroupingress",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCidrIp: String\r\n\t\tCidrIpv6: String\r\n\t\tDescription: String\r\n\t\tFromPort: Integer\r\n\t\tGroupId: String\r\n\t\tGroupName: String\r\n\t\tIpProtocol: String #required\r\n\t\tSourcePrefixListId: String\r\n\t\tSourceSecurityGroupId: String\r\n\t\tSourceSecurityGroupName: String\r\n\t\tSourceSecurityGroupOwnerId: String\r\n\t\tToPort: Integer\r\n",
        "description": "AWS::EC2::SecurityGroupIngress\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
    },
    "AWS::PinpointEmail::ConfigurationSet": {
        "prefix": "pinpointemail-configurationset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::PinpointEmail::ConfigurationSet\"\r\n\tProperties:\r\n\t\tSendingOptions:\r\n\t\t\tSendingOptions\r\n\t\tTrackingOptions:\r\n\t\t\tTrackingOptions\r\n\t\tReputationOptions:\r\n\t\t\tReputationOptions\r\n\t\tDeliveryOptions:\r\n\t\t\tDeliveryOptions\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n",
        "description": "AWS::PinpointEmail::ConfigurationSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html"
    },
    "Alexa::ASK::Skill": {
        "prefix": "alexa-ask-skill",
        "body": "${1:LogicalID}:\r\n\tType: \"Alexa::ASK::Skill\"\r\n\tProperties:\r\n\t\tAuthenticationConfiguration: #required\r\n\t\t\tAuthenticationConfiguration\r\n\t\tVendorId: String #required\r\n\t\tSkillPackage: #required\r\n\t\t\tSkillPackage\r\n",
        "description": "Alexa::ASK::Skill\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html"
    },
    "AWS::IAM::UserToGroupAddition": {
        "prefix": "iam-usertogroupaddition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::UserToGroupAddition\"\r\n\tProperties:\r\n\t\tGroupName: String #required\r\n\t\tUsers: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::IAM::UserToGroupAddition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"
    },
    "AWS::Pinpoint::ApplicationSettings": {
        "prefix": "pinpoint-applicationsettings",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::ApplicationSettings\"\r\n\tProperties:\r\n\t\tQuietTime:\r\n\t\t\tQuietTime\r\n\t\tLimits:\r\n\t\t\tLimits\r\n\t\tApplicationId: String #required\r\n\t\tCampaignHook:\r\n\t\t\tCampaignHook\r\n\t\tCloudWatchMetricsEnabled: Boolean\r\n",
        "description": "AWS::Pinpoint::ApplicationSettings\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html"
    },
    "AWS::GroundStation::MissionProfile": {
        "prefix": "groundstation-missionprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GroundStation::MissionProfile\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tContactPrePassDurationSeconds: Integer\r\n\t\tContactPostPassDurationSeconds: Integer\r\n\t\tMinimumViableContactDurationSeconds: Integer #required\r\n\t\tDataflowEdges: #required\r\n\t\t\t- DataflowEdge\r\n\t\tTrackingConfigArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::GroundStation::MissionProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html"
    },
    "AWS::OpsWorks::Layer": {
        "prefix": "opsworks-layer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Layer\"\r\n\tProperties:\r\n\t\tAttributes:\r\n\t\t\tMap\r\n\t\tAutoAssignElasticIps: Boolean #required\r\n\t\tAutoAssignPublicIps: Boolean #required\r\n\t\tCustomInstanceProfileArn: String\r\n\t\tCustomJson: Json\r\n\t\tCustomRecipes:\r\n\t\t\tRecipes\r\n\t\tCustomSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tEnableAutoHealing: Boolean #required\r\n\t\tInstallUpdatesOnBoot: Boolean\r\n\t\tLifecycleEventConfiguration:\r\n\t\t\tLifecycleEventConfiguration\r\n\t\tLoadBasedAutoScaling:\r\n\t\t\tLoadBasedAutoScaling\r\n\t\tName: String #required\r\n\t\tPackages:\r\n\t\t\t- String\r\n\t\tShortname: String #required\r\n\t\tStackId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tType: String #required\r\n\t\tUseEbsOptimizedInstances: Boolean\r\n\t\tVolumeConfigurations:\r\n\t\t\t- VolumeConfiguration\r\n",
        "description": "AWS::OpsWorks::Layer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html"
    },
    "AWS::IoTWireless::Destination": {
        "prefix": "iotwireless-destination",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::Destination\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tExpression: String #required\r\n\t\tExpressionType: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tRoleArn: String #required\r\n",
        "description": "AWS::IoTWireless::Destination\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html"
    },
    "AWS::EC2::SubnetRouteTableAssociation": {
        "prefix": "ec2-subnetroutetableassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetRouteTableAssociation\"\r\n\tProperties:\r\n\t\tRouteTableId: String #required\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EC2::SubnetRouteTableAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html"
    },
    "AWS::Glue::Table": {
        "prefix": "glue-table",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Table\"\r\n\tProperties:\r\n\t\tTableInput: #required\r\n\t\t\tTableInput\r\n\t\tDatabaseName: String #required\r\n\t\tCatalogId: String #required\r\n",
        "description": "AWS::Glue::Table\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html"
    },
    "AWS::IAM::InstanceProfile": {
        "prefix": "iam-instanceprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::InstanceProfile\"\r\n\tProperties:\r\n\t\tInstanceProfileName: String\r\n\t\tPath: String\r\n\t\tRoles: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::IAM::InstanceProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"
    },
    "AWS::IoT::Policy": {
        "prefix": "iot-policy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Policy\"\r\n\tProperties:\r\n\t\tPolicyDocument: Json #required\r\n\t\tPolicyName: String\r\n",
        "description": "AWS::IoT::Policy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html"
    },
    "AWS::ElastiCache::SecurityGroup": {
        "prefix": "elasticache-securitygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SecurityGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ElastiCache::SecurityGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html"
    },
    "AWS::CodeDeploy::DeploymentGroup": {
        "prefix": "codedeploy-deploymentgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CodeDeploy::DeploymentGroup\"\r\n\tProperties:\r\n\t\tAlarmConfiguration:\r\n\t\t\tAlarmConfiguration\r\n\t\tApplicationName: String #required\r\n\t\tAutoRollbackConfiguration:\r\n\t\t\tAutoRollbackConfiguration\r\n\t\tAutoScalingGroups:\r\n\t\t\t- String\r\n\t\tBlueGreenDeploymentConfiguration:\r\n\t\t\tBlueGreenDeploymentConfiguration\r\n\t\tDeployment:\r\n\t\t\tDeployment\r\n\t\tDeploymentConfigName: String\r\n\t\tDeploymentGroupName: String\r\n\t\tDeploymentStyle:\r\n\t\t\tDeploymentStyle\r\n\t\tECSServices:\r\n\t\t\t- ECSService\r\n\t\tEc2TagFilters:\r\n\t\t\t- EC2TagFilter\r\n\t\tEc2TagSet:\r\n\t\t\tEC2TagSet\r\n\t\tLoadBalancerInfo:\r\n\t\t\tLoadBalancerInfo\r\n\t\tOnPremisesInstanceTagFilters:\r\n\t\t\t- TagFilter\r\n\t\tOnPremisesTagSet:\r\n\t\t\tOnPremisesTagSet\r\n\t\tServiceRoleArn: String #required\r\n\t\tTriggerConfigurations:\r\n\t\t\t- TriggerConfig\r\n",
        "description": "AWS::CodeDeploy::DeploymentGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html"
    },
    "AWS::Batch::ComputeEnvironment": {
        "prefix": "batch-computeenvironment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Batch::ComputeEnvironment\"\r\n\tProperties:\r\n\t\tUnmanagedvCpus: Integer\r\n\t\tType: String #required\r\n\t\tServiceRole: String\r\n\t\tComputeEnvironmentName: String\r\n\t\tComputeResources:\r\n\t\t\tComputeResources\r\n\t\tState: String\r\n\t\tTags: Json\r\n",
        "description": "AWS::Batch::ComputeEnvironment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html"
    },
    "AWS::MediaConnect::Flow": {
        "prefix": "mediaconnect-flow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::MediaConnect::Flow\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tAvailabilityZone: String\r\n\t\tSource: #required\r\n\t\t\tSource\r\n\t\tSourceFailoverConfig:\r\n\t\t\tFailoverConfig\r\n",
        "description": "AWS::MediaConnect::Flow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html"
    },
    "AWS::Athena::PreparedStatement": {
        "prefix": "athena-preparedstatement",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::PreparedStatement\"\r\n\tProperties:\r\n\t\tStatementName: String #required\r\n\t\tWorkGroup: String #required\r\n\t\tDescription: String\r\n\t\tQueryStatement: String #required\r\n",
        "description": "AWS::Athena::PreparedStatement\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html"
    },
    "AWS::AppFlow::Flow": {
        "prefix": "appflow-flow",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppFlow::Flow\"\r\n\tProperties:\r\n\t\tFlowName: String #required\r\n\t\tDescription: String\r\n\t\tKMSArn: String\r\n\t\tTriggerConfig: #required\r\n\t\t\tTriggerConfig\r\n\t\tSourceFlowConfig: #required\r\n\t\t\tSourceFlowConfig\r\n\t\tDestinationFlowConfigList: #required\r\n\t\t\t- DestinationFlowConfig\r\n\t\tTasks: #required\r\n\t\t\t- Task\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::AppFlow::Flow\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html"
    },
    "AWS::EC2::Route": {
        "prefix": "ec2-route",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Route\"\r\n\tProperties:\r\n\t\tCarrierGatewayId: String\r\n\t\tDestinationCidrBlock: String\r\n\t\tDestinationIpv6CidrBlock: String\r\n\t\tEgressOnlyInternetGatewayId: String\r\n\t\tGatewayId: String\r\n\t\tInstanceId: String\r\n\t\tLocalGatewayId: String\r\n\t\tNatGatewayId: String\r\n\t\tNetworkInterfaceId: String\r\n\t\tRouteTableId: String #required\r\n\t\tTransitGatewayId: String\r\n\t\tVpcEndpointId: String\r\n\t\tVpcPeeringConnectionId: String\r\n",
        "description": "AWS::EC2::Route\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
    },
    "AWS::NimbleStudio::StudioComponent": {
        "prefix": "nimblestudio-studiocomponent",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NimbleStudio::StudioComponent\"\r\n\tProperties:\r\n\t\tConfiguration:\r\n\t\t\tStudioComponentConfiguration\r\n\t\tDescription: String\r\n\t\tEc2SecurityGroupIds:\r\n\t\t\t- String\r\n\t\tInitializationScripts:\r\n\t\t\t- StudioComponentInitializationScript\r\n\t\tName: String #required\r\n\t\tScriptParameters:\r\n\t\t\t- ScriptParameterKeyValue\r\n\t\tStudioId: String #required\r\n\t\tSubtype: String\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tType: String #required\r\n",
        "description": "AWS::NimbleStudio::StudioComponent\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studiocomponent.html"
    },
    "AWS::AppStream::DirectoryConfig": {
        "prefix": "appstream-directoryconfig",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::DirectoryConfig\"\r\n\tProperties:\r\n\t\tOrganizationalUnitDistinguishedNames: #required\r\n\t\t\t- String\r\n\t\tServiceAccountCredentials: #required\r\n\t\t\tServiceAccountCredentials\r\n\t\tDirectoryName: String #required\r\n",
        "description": "AWS::AppStream::DirectoryConfig\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html"
    },
    "AWS::GameLift::GameSessionQueue": {
        "prefix": "gamelift-gamesessionqueue",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GameLift::GameSessionQueue\"\r\n\tProperties:\r\n\t\tTimeoutInSeconds: Integer\r\n\t\tPlayerLatencyPolicies:\r\n\t\t\t- PlayerLatencyPolicy\r\n\t\tDestinations:\r\n\t\t\t- Destination\r\n\t\tNotificationTarget: String\r\n\t\tFilterConfiguration:\r\n\t\t\tFilterConfiguration\r\n\t\tCustomEventData: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n\t\tPriorityConfiguration:\r\n\t\t\tPriorityConfiguration\r\n",
        "description": "AWS::GameLift::GameSessionQueue\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html"
    },
    "AWS::GlobalAccelerator::EndpointGroup": {
        "prefix": "globalaccelerator-endpointgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GlobalAccelerator::EndpointGroup\"\r\n\tProperties:\r\n\t\tListenerArn: String #required\r\n\t\tEndpointGroupRegion: String #required\r\n\t\tEndpointConfigurations:\r\n\t\t\t- EndpointConfiguration\r\n\t\tTrafficDialPercentage: Double\r\n\t\tHealthCheckPort: Integer\r\n\t\tHealthCheckProtocol: String\r\n\t\tHealthCheckPath: String\r\n\t\tHealthCheckIntervalSeconds: Integer\r\n\t\tThresholdCount: Integer\r\n\t\tPortOverrides:\r\n\t\t\t- PortOverride\r\n",
        "description": "AWS::GlobalAccelerator::EndpointGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html"
    },
    "AWS::SecurityHub::Hub": {
        "prefix": "securityhub-hub",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecurityHub::Hub\"\r\n\tProperties:\r\n\t\tTags: Json\r\n",
        "description": "AWS::SecurityHub::Hub\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html"
    },
    "AWS::Macie::CustomDataIdentifier": {
        "prefix": "macie-customdataidentifier",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Macie::CustomDataIdentifier\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tRegex: String #required\r\n\t\tMaximumMatchDistance: Integer\r\n\t\tKeywords:\r\n\t\t\t- String\r\n\t\tIgnoreWords:\r\n\t\t\t- String\r\n",
        "description": "AWS::Macie::CustomDataIdentifier\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html"
    },
    "AWS::ECS::TaskSet": {
        "prefix": "ecs-taskset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ECS::TaskSet\"\r\n\tProperties:\r\n\t\tCluster: String #required\r\n\t\tExternalId: String\r\n\t\tLaunchType: String\r\n\t\tLoadBalancers:\r\n\t\t\t- LoadBalancer\r\n\t\tNetworkConfiguration:\r\n\t\t\tNetworkConfiguration\r\n\t\tPlatformVersion: String\r\n\t\tScale:\r\n\t\t\tScale\r\n\t\tService: String #required\r\n\t\tServiceRegistries:\r\n\t\t\t- ServiceRegistry\r\n\t\tTaskDefinition: String #required\r\n",
        "description": "AWS::ECS::TaskSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html"
    },
    "AWS::WAFv2::RuleGroup": {
        "prefix": "wafv2-rulegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFv2::RuleGroup\"\r\n\tProperties:\r\n\t\tCapacity: Integer #required\r\n\t\tDescription: String\r\n\t\tName: String\r\n\t\tScope: String #required\r\n\t\tRules:\r\n\t\t\t- Rule\r\n\t\tVisibilityConfig: #required\r\n\t\t\tVisibilityConfig\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tCustomResponseBodies:\r\n\t\t\tMap\r\n",
        "description": "AWS::WAFv2::RuleGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html"
    },
    "AWS::RefactorSpaces::Application": {
        "prefix": "refactorspaces-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RefactorSpaces::Application\"\r\n\tProperties:\r\n\t\tApiGatewayProxy:\r\n\t\t\tApiGatewayProxyInput\r\n\t\tEnvironmentIdentifier: String\r\n\t\tName: String\r\n\t\tProxyType: String\r\n\t\tVpcId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RefactorSpaces::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html"
    },
    "AWS::CloudFormation::Publisher": {
        "prefix": "cloudformation-publisher",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::Publisher\"\r\n\tProperties:\r\n\t\tAcceptTermsAndConditions: Boolean #required\r\n\t\tConnectionArn: String\r\n",
        "description": "AWS::CloudFormation::Publisher\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html"
    },
    "AWS::Lex::BotVersion": {
        "prefix": "lex-botversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Lex::BotVersion\"\r\n\tProperties:\r\n\t\tBotId: String #required\r\n\t\tDescription: String\r\n\t\tBotVersionLocaleSpecification: #required\r\n\t\t\t- BotVersionLocaleSpecification\r\n",
        "description": "AWS::Lex::BotVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html"
    },
    "AWS::ElasticBeanstalk::Application": {
        "prefix": "elasticbeanstalk-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::Application\"\r\n\tProperties:\r\n\t\tApplicationName: String\r\n\t\tDescription: String\r\n\t\tResourceLifecycleConfig:\r\n\t\t\tApplicationResourceLifecycleConfig\r\n",
        "description": "AWS::ElasticBeanstalk::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk.html"
    },
    "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation": {
        "prefix": "servicecatalogappregistry-attributegroupassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\"\r\n\tProperties:\r\n\t\tApplication: String #required\r\n\t\tAttributeGroup: String #required\r\n",
        "description": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html"
    },
    "AWS::NimbleStudio::Studio": {
        "prefix": "nimblestudio-studio",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NimbleStudio::Studio\"\r\n\tProperties:\r\n\t\tAdminRoleArn: String #required\r\n\t\tDisplayName: String #required\r\n\t\tStudioEncryptionConfiguration:\r\n\t\t\tStudioEncryptionConfiguration\r\n\t\tStudioName: String #required\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tUserRoleArn: String #required\r\n",
        "description": "AWS::NimbleStudio::Studio\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-studio.html"
    },
    "AWS::AppFlow::ConnectorProfile": {
        "prefix": "appflow-connectorprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppFlow::ConnectorProfile\"\r\n\tProperties:\r\n\t\tConnectorProfileName: String #required\r\n\t\tKMSArn: String\r\n\t\tConnectorType: String #required\r\n\t\tConnectionMode: String #required\r\n\t\tConnectorProfileConfig:\r\n\t\t\tConnectorProfileConfig\r\n",
        "description": "AWS::AppFlow::ConnectorProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html"
    },
    "AWS::EC2::TransitGatewayRouteTablePropagation": {
        "prefix": "ec2-transitgatewayroutetablepropagation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRouteTablePropagation\"\r\n\tProperties:\r\n\t\tTransitGatewayRouteTableId: String #required\r\n\t\tTransitGatewayAttachmentId: String #required\r\n",
        "description": "AWS::EC2::TransitGatewayRouteTablePropagation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html"
    },
    "AWS::SageMaker::App": {
        "prefix": "sagemaker-app",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::App\"\r\n\tProperties:\r\n\t\tAppName: String #required\r\n\t\tAppType: String #required\r\n\t\tDomainId: String #required\r\n\t\tResourceSpec:\r\n\t\t\tResourceSpec\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUserProfileName: String #required\r\n",
        "description": "AWS::SageMaker::App\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html"
    },
    "AWS::WAFRegional::ByteMatchSet": {
        "prefix": "wafregional-bytematchset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::ByteMatchSet\"\r\n\tProperties:\r\n\t\tByteMatchTuples:\r\n\t\t\t- ByteMatchTuple\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::ByteMatchSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html"
    },
    "AWS::SageMaker::Domain": {
        "prefix": "sagemaker-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Domain\"\r\n\tProperties:\r\n\t\tAppNetworkAccessType: String\r\n\t\tAuthMode: String #required\r\n\t\tDefaultUserSettings: #required\r\n\t\t\tUserSettings\r\n\t\tDomainName: String #required\r\n\t\tKmsKeyId: String\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::SageMaker::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html"
    },
    "AWS::DAX::SubnetGroup": {
        "prefix": "dax-subnetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DAX::SubnetGroup\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tSubnetGroupName: String\r\n\t\tSubnetIds: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::DAX::SubnetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html"
    },
    "AWS::OpsWorks::Stack": {
        "prefix": "opsworks-stack",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpsWorks::Stack\"\r\n\tProperties:\r\n\t\tAgentVersion: String\r\n\t\tAttributes:\r\n\t\t\tMap\r\n\t\tChefConfiguration:\r\n\t\t\tChefConfiguration\r\n\t\tCloneAppIds:\r\n\t\t\t- String\r\n\t\tClonePermissions: Boolean\r\n\t\tConfigurationManager:\r\n\t\t\tStackConfigurationManager\r\n\t\tCustomCookbooksSource:\r\n\t\t\tSource\r\n\t\tCustomJson: Json\r\n\t\tDefaultAvailabilityZone: String\r\n\t\tDefaultInstanceProfileArn: String #required\r\n\t\tDefaultOs: String\r\n\t\tDefaultRootDeviceType: String\r\n\t\tDefaultSshKeyName: String\r\n\t\tDefaultSubnetId: String\r\n\t\tEcsClusterArn: String\r\n\t\tElasticIps:\r\n\t\t\t- ElasticIp\r\n\t\tHostnameTheme: String\r\n\t\tName: String #required\r\n\t\tRdsDbInstances:\r\n\t\t\t- RdsDbInstance\r\n\t\tServiceRoleArn: String #required\r\n\t\tSourceStackId: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tUseCustomCookbooks: Boolean\r\n\t\tUseOpsworksSecurityGroups: Boolean\r\n\t\tVpcId: String\r\n",
        "description": "AWS::OpsWorks::Stack\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html"
    },
    "AWS::Panorama::PackageVersion": {
        "prefix": "panorama-packageversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Panorama::PackageVersion\"\r\n\tProperties:\r\n\t\tOwnerAccount: String\r\n\t\tPackageId: String #required\r\n\t\tPackageVersion: String #required\r\n\t\tPatchVersion: String #required\r\n\t\tMarkLatest: Boolean\r\n\t\tUpdatedLatestPatchVersion: String\r\n",
        "description": "AWS::Panorama::PackageVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html"
    },
    "AWS::Route53Resolver::ResolverRule": {
        "prefix": "route53resolver-resolverrule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverRule\"\r\n\tProperties:\r\n\t\tResolverEndpointId: String\r\n\t\tDomainName: String #required\r\n\t\tName: String\r\n\t\tRuleType: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tTargetIps:\r\n\t\t\t- TargetAddress\r\n",
        "description": "AWS::Route53Resolver::ResolverRule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html"
    },
    "AWS::EC2::SubnetNetworkAclAssociation": {
        "prefix": "ec2-subnetnetworkaclassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetNetworkAclAssociation\"\r\n\tProperties:\r\n\t\tNetworkAclId: String #required\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EC2::SubnetNetworkAclAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html"
    },
    "AWS::SageMaker::Project": {
        "prefix": "sagemaker-project",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Project\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tProjectName: String #required\r\n\t\tProjectDescription: String\r\n\t\tServiceCatalogProvisioningDetails: Json #required\r\n",
        "description": "AWS::SageMaker::Project\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html"
    },
    "AWS::EC2::TrafficMirrorSession": {
        "prefix": "ec2-trafficmirrorsession",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TrafficMirrorSession\"\r\n\tProperties:\r\n\t\tTrafficMirrorTargetId: String #required\r\n\t\tDescription: String\r\n\t\tSessionNumber: Integer #required\r\n\t\tVirtualNetworkId: Integer\r\n\t\tPacketLength: Integer\r\n\t\tNetworkInterfaceId: String #required\r\n\t\tTrafficMirrorFilterId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TrafficMirrorSession\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html"
    },
    "AWS::Amplify::Branch": {
        "prefix": "amplify-branch",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Amplify::Branch\"\r\n\tProperties:\r\n\t\tAppId: String #required\r\n\t\tBasicAuthConfig:\r\n\t\t\tBasicAuthConfig\r\n\t\tBranchName: String #required\r\n\t\tBuildSpec: String\r\n\t\tDescription: String\r\n\t\tEnableAutoBuild: Boolean\r\n\t\tEnablePerformanceMode: Boolean\r\n\t\tEnablePullRequestPreview: Boolean\r\n\t\tEnvironmentVariables:\r\n\t\t\t- EnvironmentVariable\r\n\t\tPullRequestEnvironmentName: String\r\n\t\tStage: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Amplify::Branch\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html"
    },
    "AWS::ServiceCatalog::LaunchRoleConstraint": {
        "prefix": "servicecatalog-launchroleconstraint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ServiceCatalog::LaunchRoleConstraint\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tLocalRoleName: String\r\n\t\tAcceptLanguage: String\r\n\t\tPortfolioId: String #required\r\n\t\tProductId: String #required\r\n\t\tRoleArn: String\r\n",
        "description": "AWS::ServiceCatalog::LaunchRoleConstraint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html"
    },
    "AWS::EC2::SubnetCidrBlock": {
        "prefix": "ec2-subnetcidrblock",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SubnetCidrBlock\"\r\n\tProperties:\r\n\t\tIpv6CidrBlock: String #required\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EC2::SubnetCidrBlock\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
    },
    "AWS::AutoScaling::LifecycleHook": {
        "prefix": "autoscaling-lifecyclehook",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::LifecycleHook\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: String #required\r\n\t\tDefaultResult: String\r\n\t\tHeartbeatTimeout: Integer\r\n\t\tLifecycleHookName: String\r\n\t\tLifecycleTransition: String #required\r\n\t\tNotificationMetadata: String\r\n\t\tNotificationTargetARN: String\r\n\t\tRoleARN: String\r\n",
        "description": "AWS::AutoScaling::LifecycleHook\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html"
    },
    "AWS::Redshift::ClusterSecurityGroupIngress": {
        "prefix": "redshift-clustersecuritygroupingress",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::ClusterSecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCIDRIP: String\r\n\t\tClusterSecurityGroupName: String #required\r\n\t\tEC2SecurityGroupName: String\r\n\t\tEC2SecurityGroupOwnerId: String\r\n",
        "description": "AWS::Redshift::ClusterSecurityGroupIngress\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html"
    },
    "AWS::ElastiCache::SecurityGroupIngress": {
        "prefix": "elasticache-securitygroupingress",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElastiCache::SecurityGroupIngress\"\r\n\tProperties:\r\n\t\tCacheSecurityGroupName: String #required\r\n\t\tEC2SecurityGroupName: String #required\r\n\t\tEC2SecurityGroupOwnerId: String\r\n",
        "description": "AWS::ElastiCache::SecurityGroupIngress\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html"
    },
    "AWS::RDS::OptionGroup": {
        "prefix": "rds-optiongroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::OptionGroup\"\r\n\tProperties:\r\n\t\tEngineName: String #required\r\n\t\tMajorEngineVersion: String #required\r\n\t\tOptionConfigurations: #required\r\n\t\t\t- OptionConfiguration\r\n\t\tOptionGroupDescription: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RDS::OptionGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html"
    },
    "AWS::AppStream::Entitlement": {
        "prefix": "appstream-entitlement",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::Entitlement\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tStackName: String #required\r\n\t\tDescription: String\r\n\t\tAppVisibility: String #required\r\n\t\tAttributes: #required\r\n\t\t\t- Attribute\r\n",
        "description": "AWS::AppStream::Entitlement\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html"
    },
    "AWS::CloudFront::ResponseHeadersPolicy": {
        "prefix": "cloudfront-responseheaderspolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::ResponseHeadersPolicy\"\r\n\tProperties:\r\n\t\tResponseHeadersPolicyConfig: #required\r\n\t\t\tResponseHeadersPolicyConfig\r\n",
        "description": "AWS::CloudFront::ResponseHeadersPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html"
    },
    "AWS::IoT::ResourceSpecificLogging": {
        "prefix": "iot-resourcespecificlogging",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ResourceSpecificLogging\"\r\n\tProperties:\r\n\t\tTargetType: String #required\r\n\t\tTargetName: String #required\r\n\t\tLogLevel: String #required\r\n",
        "description": "AWS::IoT::ResourceSpecificLogging\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html"
    },
    "AWS::IoTSiteWise::Gateway": {
        "prefix": "iotsitewise-gateway",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTSiteWise::Gateway\"\r\n\tProperties:\r\n\t\tGatewayName: String #required\r\n\t\tGatewayPlatform: #required\r\n\t\t\tGatewayPlatform\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tGatewayCapabilitySummaries:\r\n\t\t\t- GatewayCapabilitySummary\r\n",
        "description": "AWS::IoTSiteWise::Gateway\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html"
    },
    "AWS::CloudFormation::WaitCondition": {
        "prefix": "cloudformation-waitcondition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::WaitCondition\"\r\n\tProperties:\r\n\t\tCount: Integer\r\n\t\tHandle: String\r\n\t\tTimeout: String\r\n",
        "description": "AWS::CloudFormation::WaitCondition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html"
    },
    "AWS::Signer::SigningProfile": {
        "prefix": "signer-signingprofile",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Signer::SigningProfile\"\r\n\tProperties:\r\n\t\tSignatureValidityPeriod:\r\n\t\t\tSignatureValidityPeriod\r\n\t\tPlatformId: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Signer::SigningProfile\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html"
    },
    "AWS::ResilienceHub::ResiliencyPolicy": {
        "prefix": "resiliencehub-resiliencypolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ResilienceHub::ResiliencyPolicy\"\r\n\tProperties:\r\n\t\tPolicyName: String #required\r\n\t\tPolicyDescription: String\r\n\t\tDataLocationConstraint: String\r\n\t\tTier: String #required\r\n\t\tPolicy: #required\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ResilienceHub::ResiliencyPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html"
    },
    "AWS::EC2::SecurityGroup": {
        "prefix": "ec2-securitygroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::SecurityGroup\"\r\n\tProperties:\r\n\t\tGroupDescription: String #required\r\n\t\tGroupName: String\r\n\t\tSecurityGroupEgress:\r\n\t\t\t- Egress\r\n\t\tSecurityGroupIngress:\r\n\t\t\t- Ingress\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String\r\n",
        "description": "AWS::EC2::SecurityGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
    },
    "AWS::CloudFront::OriginRequestPolicy": {
        "prefix": "cloudfront-originrequestpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::OriginRequestPolicy\"\r\n\tProperties:\r\n\t\tOriginRequestPolicyConfig: #required\r\n\t\t\tOriginRequestPolicyConfig\r\n",
        "description": "AWS::CloudFront::OriginRequestPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html"
    },
    "AWS::WAFRegional::Rule": {
        "prefix": "wafregional-rule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::WAFRegional::Rule\"\r\n\tProperties:\r\n\t\tMetricName: String #required\r\n\t\tPredicates:\r\n\t\t\t- Predicate\r\n\t\tName: String #required\r\n",
        "description": "AWS::WAFRegional::Rule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html"
    },
    "AWS::SSO::PermissionSet": {
        "prefix": "sso-permissionset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSO::PermissionSet\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tInstanceArn: String #required\r\n\t\tSessionDuration: String\r\n\t\tRelayStateType: String\r\n\t\tManagedPolicies:\r\n\t\t\t- String\r\n\t\tInlinePolicy: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SSO::PermissionSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html"
    },
    "AWS::InspectorV2::Filter": {
        "prefix": "inspectorv2-filter",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::InspectorV2::Filter\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tFilterCriteria: #required\r\n\t\t\tFilterCriteria\r\n\t\tFilterAction: String #required\r\n",
        "description": "AWS::InspectorV2::Filter\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html"
    },
    "AWS::Pinpoint::PushTemplate": {
        "prefix": "pinpoint-pushtemplate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::PushTemplate\"\r\n\tProperties:\r\n\t\tGCM:\r\n\t\t\tAndroidPushNotificationTemplate\r\n\t\tBaidu:\r\n\t\t\tAndroidPushNotificationTemplate\r\n\t\tTemplateName: String #required\r\n\t\tADM:\r\n\t\t\tAndroidPushNotificationTemplate\r\n\t\tAPNS:\r\n\t\t\tAPNSPushNotificationTemplate\r\n\t\tTemplateDescription: String\r\n\t\tDefaultSubstitutions: String\r\n\t\tDefault:\r\n\t\t\tDefaultPushNotificationTemplate\r\n\t\tTags: Json\r\n",
        "description": "AWS::Pinpoint::PushTemplate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html"
    },
    "AWS::ApiGateway::RestApi": {
        "prefix": "apigateway-restapi",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::RestApi\"\r\n\tProperties:\r\n\t\tApiKeySourceType: String\r\n\t\tBinaryMediaTypes:\r\n\t\t\t- String\r\n\t\tBody: Json\r\n\t\tBodyS3Location:\r\n\t\t\tS3Location\r\n\t\tCloneFrom: String\r\n\t\tDescription: String\r\n\t\tDisableExecuteApiEndpoint: Boolean\r\n\t\tEndpointConfiguration:\r\n\t\t\tEndpointConfiguration\r\n\t\tFailOnWarnings: Boolean\r\n\t\tMinimumCompressionSize: Integer\r\n\t\tMode: String\r\n\t\tName: String\r\n\t\tParameters:\r\n\t\t\tMap\r\n\t\tPolicy: Json\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::ApiGateway::RestApi\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html"
    },
    "AWS::CloudFront::PublicKey": {
        "prefix": "cloudfront-publickey",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFront::PublicKey\"\r\n\tProperties:\r\n\t\tPublicKeyConfig: #required\r\n\t\t\tPublicKeyConfig\r\n",
        "description": "AWS::CloudFront::PublicKey\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html"
    },
    "AWS::Events::EventBus": {
        "prefix": "events-eventbus",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Events::EventBus\"\r\n\tProperties:\r\n\t\tEventSourceName: String\r\n\t\tTags:\r\n\t\t\t- TagEntry\r\n\t\tName: String #required\r\n",
        "description": "AWS::Events::EventBus\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html"
    },
    "AWS::DataBrew::Schedule": {
        "prefix": "databrew-schedule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataBrew::Schedule\"\r\n\tProperties:\r\n\t\tJobNames:\r\n\t\t\t- String\r\n\t\tCronExpression: String #required\r\n\t\tName: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataBrew::Schedule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html"
    },
    "AWS::EC2::VPC": {
        "prefix": "ec2-vpc",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPC\"\r\n\tProperties:\r\n\t\tCidrBlock: String #required\r\n\t\tEnableDnsHostnames: Boolean\r\n\t\tEnableDnsSupport: Boolean\r\n\t\tInstanceTenancy: String\r\n\t\tIpv4IpamPoolId: String\r\n\t\tIpv4NetmaskLength: Integer\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::VPC\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
    },
    "AWS::KinesisAnalyticsV2::ApplicationOutput": {
        "prefix": "kinesisanalyticsv2-applicationoutput",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationOutput\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tOutput: #required\r\n\t\t\tOutput\r\n",
        "description": "AWS::KinesisAnalyticsV2::ApplicationOutput\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html"
    },
    "AWS::Config::OrganizationConformancePack": {
        "prefix": "config-organizationconformancepack",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::OrganizationConformancePack\"\r\n\tProperties:\r\n\t\tOrganizationConformancePackName: String #required\r\n\t\tTemplateS3Uri: String\r\n\t\tTemplateBody: String\r\n\t\tDeliveryS3Bucket: String\r\n\t\tDeliveryS3KeyPrefix: String\r\n\t\tConformancePackInputParameters:\r\n\t\t\t- ConformancePackInputParameter\r\n\t\tExcludedAccounts:\r\n\t\t\t- String\r\n",
        "description": "AWS::Config::OrganizationConformancePack\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html"
    },
    "AWS::NetworkManager::GlobalNetwork": {
        "prefix": "networkmanager-globalnetwork",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::GlobalNetwork\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::NetworkManager::GlobalNetwork\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html"
    },
    "AWS::NetworkManager::TransitGatewayRegistration": {
        "prefix": "networkmanager-transitgatewayregistration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::TransitGatewayRegistration\"\r\n\tProperties:\r\n\t\tGlobalNetworkId: String #required\r\n\t\tTransitGatewayArn: String #required\r\n",
        "description": "AWS::NetworkManager::TransitGatewayRegistration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html"
    },
    "AWS::EFS::FileSystem": {
        "prefix": "efs-filesystem",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::FileSystem\"\r\n\tProperties:\r\n\t\tEncrypted: Boolean\r\n\t\tFileSystemTags:\r\n\t\t\t- ElasticFileSystemTag\r\n\t\tKmsKeyId: String\r\n\t\tLifecyclePolicies:\r\n\t\t\t- LifecyclePolicy\r\n\t\tPerformanceMode: String\r\n\t\tProvisionedThroughputInMibps: Double\r\n\t\tThroughputMode: String\r\n\t\tFileSystemPolicy: Json\r\n\t\tBypassPolicyLockoutSafetyCheck: Boolean\r\n\t\tBackupPolicy:\r\n\t\t\tBackupPolicy\r\n\t\tAvailabilityZoneName: String\r\n",
        "description": "AWS::EFS::FileSystem\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html"
    },
    "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "prefix": "applicationautoscaling-scalingpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApplicationAutoScaling::ScalingPolicy\"\r\n\tProperties:\r\n\t\tPolicyName: String #required\r\n\t\tPolicyType: String #required\r\n\t\tResourceId: String\r\n\t\tScalableDimension: String\r\n\t\tScalingTargetId: String\r\n\t\tServiceNamespace: String\r\n\t\tStepScalingPolicyConfiguration:\r\n\t\t\tStepScalingPolicyConfiguration\r\n\t\tTargetTrackingScalingPolicyConfiguration:\r\n\t\t\tTargetTrackingScalingPolicyConfiguration\r\n",
        "description": "AWS::ApplicationAutoScaling::ScalingPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html"
    },
    "AWS::IoT::ScheduledAudit": {
        "prefix": "iot-scheduledaudit",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::ScheduledAudit\"\r\n\tProperties:\r\n\t\tScheduledAuditName: String\r\n\t\tFrequency: String #required\r\n\t\tDayOfMonth: String\r\n\t\tDayOfWeek: String\r\n\t\tTargetCheckNames: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoT::ScheduledAudit\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html"
    },
    "AWS::RDS::DBParameterGroup": {
        "prefix": "rds-dbparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tFamily: String #required\r\n\t\tParameters:\r\n\t\t\tMap\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::RDS::DBParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html"
    },
    "AWS::AppStream::StackFleetAssociation": {
        "prefix": "appstream-stackfleetassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppStream::StackFleetAssociation\"\r\n\tProperties:\r\n\t\tFleetName: String #required\r\n\t\tStackName: String #required\r\n",
        "description": "AWS::AppStream::StackFleetAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html"
    },
    "AWS::Route53Resolver::FirewallRuleGroup": {
        "prefix": "route53resolver-firewallrulegroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::FirewallRuleGroup\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tFirewallRules:\r\n\t\t\t- FirewallRule\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Route53Resolver::FirewallRuleGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html"
    },
    "AWS::IoTAnalytics::Pipeline": {
        "prefix": "iotanalytics-pipeline",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTAnalytics::Pipeline\"\r\n\tProperties:\r\n\t\tPipelineName: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tPipelineActivities: #required\r\n\t\t\t- Activity\r\n",
        "description": "AWS::IoTAnalytics::Pipeline\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html"
    },
    "AWS::ResourceGroups::Group": {
        "prefix": "resourcegroups-group",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ResourceGroups::Group\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tResourceQuery:\r\n\t\t\tResourceQuery\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tConfiguration:\r\n\t\t\t- ConfigurationItem\r\n\t\tResources:\r\n\t\t\t- String\r\n",
        "description": "AWS::ResourceGroups::Group\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html"
    },
    "AWS::EC2::TransitGatewayRoute": {
        "prefix": "ec2-transitgatewayroute",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayRoute\"\r\n\tProperties:\r\n\t\tTransitGatewayRouteTableId: String #required\r\n\t\tDestinationCidrBlock: String\r\n\t\tBlackhole: Boolean\r\n\t\tTransitGatewayAttachmentId: String\r\n",
        "description": "AWS::EC2::TransitGatewayRoute\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html"
    },
    "AWS::FMS::Policy": {
        "prefix": "fms-policy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::FMS::Policy\"\r\n\tProperties:\r\n\t\tExcludeMap:\r\n\t\t\tIEMap\r\n\t\tExcludeResourceTags: Boolean #required\r\n\t\tIncludeMap:\r\n\t\t\tIEMap\r\n\t\tPolicyName: String #required\r\n\t\tRemediationEnabled: Boolean #required\r\n\t\tResourceTags:\r\n\t\t\t- ResourceTag\r\n\t\tResourceType: String #required\r\n\t\tResourceTypeList:\r\n\t\t\t- String\r\n\t\tSecurityServicePolicyData: Json #required\r\n\t\tDeleteAllPolicyResources: Boolean\r\n\t\tResourcesCleanUp: Boolean\r\n\t\tTags:\r\n\t\t\t- PolicyTag\r\n",
        "description": "AWS::FMS::Policy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html"
    },
    "AWS::Transfer::User": {
        "prefix": "transfer-user",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Transfer::User\"\r\n\tProperties:\r\n\t\tPolicy: String\r\n\t\tRole: String #required\r\n\t\tHomeDirectory: String\r\n\t\tHomeDirectoryType: String\r\n\t\tServerId: String #required\r\n\t\tUserName: String #required\r\n\t\tHomeDirectoryMappings:\r\n\t\t\t- HomeDirectoryMapEntry\r\n\t\tPosixProfile:\r\n\t\t\tPosixProfile\r\n\t\tSshPublicKeys:\r\n\t\t\t- SshPublicKey\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Transfer::User\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html"
    },
    "AWS::EC2::NetworkAcl": {
        "prefix": "ec2-networkacl",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::NetworkAcl\"\r\n\tProperties:\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::NetworkAcl\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html"
    },
    "AWS::RDS::DBProxy": {
        "prefix": "rds-dbproxy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBProxy\"\r\n\tProperties:\r\n\t\tAuth: #required\r\n\t\t\t- AuthFormat\r\n\t\tDBProxyName: String #required\r\n\t\tDebugLogging: Boolean\r\n\t\tEngineFamily: String #required\r\n\t\tIdleClientTimeout: Integer\r\n\t\tRequireTLS: Boolean\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- TagFormat\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tVpcSubnetIds: #required\r\n\t\t\t- String\r\n",
        "description": "AWS::RDS::DBProxy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html"
    },
    "AWS::ImageBuilder::DistributionConfiguration": {
        "prefix": "imagebuilder-distributionconfiguration",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::DistributionConfiguration\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tDistributions: #required\r\n\t\t\t- Distribution\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::DistributionConfiguration\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html"
    },
    "AWS::QuickSight::DataSet": {
        "prefix": "quicksight-dataset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::QuickSight::DataSet\"\r\n\tProperties:\r\n\t\tAwsAccountId: String\r\n\t\tColumnGroups:\r\n\t\t\t- ColumnGroup\r\n\t\tColumnLevelPermissionRules:\r\n\t\t\t- ColumnLevelPermissionRule\r\n\t\tDataSetId: String\r\n\t\tFieldFolders:\r\n\t\t\tMap\r\n\t\tImportMode: String\r\n\t\tLogicalTableMap:\r\n\t\t\tMap\r\n\t\tName: String\r\n\t\tPermissions:\r\n\t\t\t- ResourcePermission\r\n\t\tPhysicalTableMap:\r\n\t\t\tMap\r\n\t\tRowLevelPermissionDataSet:\r\n\t\t\tRowLevelPermissionDataSet\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tIngestionWaitPolicy:\r\n\t\t\tIngestionWaitPolicy\r\n",
        "description": "AWS::QuickSight::DataSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html"
    },
    "AWS::EC2::VPNGatewayRoutePropagation": {
        "prefix": "ec2-vpngatewayroutepropagation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPNGatewayRoutePropagation\"\r\n\tProperties:\r\n\t\tRouteTableIds: #required\r\n\t\t\t- String\r\n\t\tVpnGatewayId: String #required\r\n",
        "description": "AWS::EC2::VPNGatewayRoutePropagation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html"
    },
    "AWS::EC2::ClientVpnTargetNetworkAssociation": {
        "prefix": "ec2-clientvpntargetnetworkassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::ClientVpnTargetNetworkAssociation\"\r\n\tProperties:\r\n\t\tClientVpnEndpointId: String #required\r\n\t\tSubnetId: String #required\r\n",
        "description": "AWS::EC2::ClientVpnTargetNetworkAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html"
    },
    "AWS::ApiGatewayV2::Authorizer": {
        "prefix": "apigatewayv2-authorizer",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::Authorizer\"\r\n\tProperties:\r\n\t\tIdentityValidationExpression: String\r\n\t\tAuthorizerUri: String\r\n\t\tAuthorizerCredentialsArn: String\r\n\t\tAuthorizerType: String #required\r\n\t\tJwtConfiguration:\r\n\t\t\tJWTConfiguration\r\n\t\tAuthorizerResultTtlInSeconds: Integer\r\n\t\tIdentitySource:\r\n\t\t\t- String\r\n\t\tAuthorizerPayloadFormatVersion: String\r\n\t\tEnableSimpleResponses: Boolean\r\n\t\tApiId: String #required\r\n\t\tName: String #required\r\n",
        "description": "AWS::ApiGatewayV2::Authorizer\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html"
    },
    "AWS::Panorama::ApplicationInstance": {
        "prefix": "panorama-applicationinstance",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Panorama::ApplicationInstance\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDescription: String\r\n\t\tManifestPayload: #required\r\n\t\t\tManifestPayload\r\n\t\tManifestOverridesPayload:\r\n\t\t\tManifestOverridesPayload\r\n\t\tRuntimeRoleArn: String\r\n\t\tDefaultRuntimeContextDevice: String #required\r\n\t\tApplicationInstanceIdToReplace: String\r\n\t\tDeviceId: String\r\n\t\tStatusFilter: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Panorama::ApplicationInstance\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html"
    },
    "AWS::AutoScaling::WarmPool": {
        "prefix": "autoscaling-warmpool",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AutoScaling::WarmPool\"\r\n\tProperties:\r\n\t\tAutoScalingGroupName: String #required\r\n\t\tMaxGroupPreparedCapacity: Integer\r\n\t\tMinSize: Integer\r\n\t\tPoolState: String\r\n\t\tInstanceReusePolicy:\r\n\t\t\tInstanceReusePolicy\r\n",
        "description": "AWS::AutoScaling::WarmPool\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html"
    },
    "AWS::SageMaker::Image": {
        "prefix": "sagemaker-image",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SageMaker::Image\"\r\n\tProperties:\r\n\t\tImageName: String #required\r\n\t\tImageRoleArn: String #required\r\n\t\tImageDisplayName: String\r\n\t\tImageDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::SageMaker::Image\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html"
    },
    "AWS::S3Outposts::BucketPolicy": {
        "prefix": "s3outposts-bucketpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3Outposts::BucketPolicy\"\r\n\tProperties:\r\n\t\tBucket: String #required\r\n\t\tPolicyDocument: Json #required\r\n",
        "description": "AWS::S3Outposts::BucketPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html"
    },
    "AWS::CloudFormation::HookDefaultVersion": {
        "prefix": "cloudformation-hookdefaultversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::HookDefaultVersion\"\r\n\tProperties:\r\n\t\tTypeVersionArn: String\r\n\t\tTypeName: String\r\n\t\tVersionId: String\r\n",
        "description": "AWS::CloudFormation::HookDefaultVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html"
    },
    "AWS::IAM::ManagedPolicy": {
        "prefix": "iam-managedpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IAM::ManagedPolicy\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tGroups:\r\n\t\t\t- String\r\n\t\tManagedPolicyName: String\r\n\t\tPath: String\r\n\t\tPolicyDocument: Json #required\r\n\t\tRoles:\r\n\t\t\t- String\r\n\t\tUsers:\r\n\t\t\t- String\r\n",
        "description": "AWS::IAM::ManagedPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html"
    },
    "AWS::IoT::PolicyPrincipalAttachment": {
        "prefix": "iot-policyprincipalattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::PolicyPrincipalAttachment\"\r\n\tProperties:\r\n\t\tPolicyName: String #required\r\n\t\tPrincipal: String #required\r\n",
        "description": "AWS::IoT::PolicyPrincipalAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html"
    },
    "AWS::Glue::Registry": {
        "prefix": "glue-registry",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Glue::Registry\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Glue::Registry\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html"
    },
    "AWS::Connect::ContactFlowModule": {
        "prefix": "connect-contactflowmodule",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Connect::ContactFlowModule\"\r\n\tProperties:\r\n\t\tInstanceArn: String #required\r\n\t\tName: String #required\r\n\t\tContent: String #required\r\n\t\tDescription: String\r\n\t\tState: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::Connect::ContactFlowModule\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html"
    },
    "AWS::Config::ConformancePack": {
        "prefix": "config-conformancepack",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Config::ConformancePack\"\r\n\tProperties:\r\n\t\tConformancePackName: String #required\r\n\t\tDeliveryS3Bucket: String\r\n\t\tDeliveryS3KeyPrefix: String\r\n\t\tTemplateBody: String\r\n\t\tTemplateS3Uri: String\r\n\t\tConformancePackInputParameters:\r\n\t\t\t- ConformancePackInputParameter\r\n",
        "description": "AWS::Config::ConformancePack\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html"
    },
    "AWS::DevOpsGuru::ResourceCollection": {
        "prefix": "devopsguru-resourcecollection",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DevOpsGuru::ResourceCollection\"\r\n\tProperties:\r\n\t\tResourceCollectionFilter: #required\r\n\t\t\tResourceCollectionFilter\r\n",
        "description": "AWS::DevOpsGuru::ResourceCollection\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html"
    },
    "AWS::KafkaConnect::Connector": {
        "prefix": "kafkaconnect-connector",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KafkaConnect::Connector\"\r\n\tProperties:\r\n\t\tCapacity: #required\r\n\t\t\tCapacity\r\n\t\tConnectorConfiguration: #required\r\n\t\t\tMap\r\n\t\tConnectorDescription: String\r\n\t\tConnectorName: String #required\r\n\t\tKafkaCluster: #required\r\n\t\t\tKafkaCluster\r\n\t\tKafkaClusterClientAuthentication: #required\r\n\t\t\tKafkaClusterClientAuthentication\r\n\t\tKafkaClusterEncryptionInTransit: #required\r\n\t\t\tKafkaClusterEncryptionInTransit\r\n\t\tKafkaConnectVersion: String #required\r\n\t\tLogDelivery:\r\n\t\t\tLogDelivery\r\n\t\tPlugins: #required\r\n\t\t\t- Plugin\r\n\t\tServiceExecutionRoleArn: String #required\r\n\t\tWorkerConfiguration:\r\n\t\t\tWorkerConfiguration\r\n",
        "description": "AWS::KafkaConnect::Connector\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html"
    },
    "AWS::Route53Resolver::ResolverRuleAssociation": {
        "prefix": "route53resolver-resolverruleassociation",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverRuleAssociation\"\r\n\tProperties:\r\n\t\tVPCId: String #required\r\n\t\tResolverRuleId: String #required\r\n\t\tName: String\r\n",
        "description": "AWS::Route53Resolver::ResolverRuleAssociation\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html"
    },
    "AWS::Greengrass::SubscriptionDefinition": {
        "prefix": "greengrass-subscriptiondefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::SubscriptionDefinition\"\r\n\tProperties:\r\n\t\tInitialVersion:\r\n\t\t\tSubscriptionDefinitionVersion\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Greengrass::SubscriptionDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html"
    },
    "AWS::IoTEvents::DetectorModel": {
        "prefix": "iotevents-detectormodel",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTEvents::DetectorModel\"\r\n\tProperties:\r\n\t\tDetectorModelDefinition: #required\r\n\t\t\tDetectorModelDefinition\r\n\t\tDetectorModelDescription: String\r\n\t\tDetectorModelName: String\r\n\t\tEvaluationMethod: String\r\n\t\tKey: String\r\n\t\tRoleArn: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTEvents::DetectorModel\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html"
    },
    "AWS::ApiGateway::VpcLink": {
        "prefix": "apigateway-vpclink",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGateway::VpcLink\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTargetArns: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String #required\r\n",
        "description": "AWS::ApiGateway::VpcLink\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html"
    },
    "AWS::EC2::TransitGatewayPeeringAttachment": {
        "prefix": "ec2-transitgatewaypeeringattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::TransitGatewayPeeringAttachment\"\r\n\tProperties:\r\n\t\tOptions:\r\n\t\t\tTransitGatewayPeeringAttachmentOptions\r\n\t\tTransitGatewayId: String #required\r\n\t\tPeerTransitGatewayId: String #required\r\n\t\tPeerAccountId: String #required\r\n\t\tPeerRegion: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::EC2::TransitGatewayPeeringAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html"
    },
    "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": {
        "prefix": "kinesisanalyticsv2-applicationreferencedatasource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tReferenceDataSource: #required\r\n\t\t\tReferenceDataSource\r\n",
        "description": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html"
    },
    "AWS::S3::MultiRegionAccessPointPolicy": {
        "prefix": "s3-multiregionaccesspointpolicy",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::S3::MultiRegionAccessPointPolicy\"\r\n\tProperties:\r\n\t\tMrapName: String #required\r\n\t\tPolicy: Json #required\r\n",
        "description": "AWS::S3::MultiRegionAccessPointPolicy\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html"
    },
    "AWS::DirectoryService::SimpleAD": {
        "prefix": "directoryservice-simplead",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DirectoryService::SimpleAD\"\r\n\tProperties:\r\n\t\tCreateAlias: Boolean\r\n\t\tDescription: String\r\n\t\tEnableSso: Boolean\r\n\t\tName: String #required\r\n\t\tPassword: String #required\r\n\t\tShortName: String\r\n\t\tSize: String #required\r\n\t\tVpcSettings: #required\r\n\t\t\tVpcSettings\r\n",
        "description": "AWS::DirectoryService::SimpleAD\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html"
    },
    "AWS::SecretsManager::SecretTargetAttachment": {
        "prefix": "secretsmanager-secrettargetattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SecretsManager::SecretTargetAttachment\"\r\n\tProperties:\r\n\t\tSecretId: String #required\r\n\t\tTargetType: String #required\r\n\t\tTargetId: String #required\r\n",
        "description": "AWS::SecretsManager::SecretTargetAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html"
    },
    "AWS::EC2::VolumeAttachment": {
        "prefix": "ec2-volumeattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VolumeAttachment\"\r\n\tProperties:\r\n\t\tDevice: String #required\r\n\t\tInstanceId: String #required\r\n\t\tVolumeId: String #required\r\n",
        "description": "AWS::EC2::VolumeAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
    },
    "AWS::Greengrass::ResourceDefinitionVersion": {
        "prefix": "greengrass-resourcedefinitionversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::ResourceDefinitionVersion\"\r\n\tProperties:\r\n\t\tResources: #required\r\n\t\t\t- ResourceInstance\r\n\t\tResourceDefinitionId: String #required\r\n",
        "description": "AWS::Greengrass::ResourceDefinitionVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html"
    },
    "AWS::EC2::Host": {
        "prefix": "ec2-host",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::Host\"\r\n\tProperties:\r\n\t\tAutoPlacement: String\r\n\t\tAvailabilityZone: String #required\r\n\t\tHostRecovery: String\r\n\t\tInstanceType: String #required\r\n",
        "description": "AWS::EC2::Host\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html"
    },
    "AWS::IoT::Logging": {
        "prefix": "iot-logging",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Logging\"\r\n\tProperties:\r\n\t\tAccountId: String #required\r\n\t\tRoleArn: String #required\r\n\t\tDefaultLogLevel: String #required\r\n",
        "description": "AWS::IoT::Logging\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html"
    },
    "AWS::NetworkManager::Site": {
        "prefix": "networkmanager-site",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::NetworkManager::Site\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tGlobalNetworkId: String #required\r\n\t\tLocation:\r\n\t\t\tLocation\r\n",
        "description": "AWS::NetworkManager::Site\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html"
    },
    "AWS::Cognito::UserPoolDomain": {
        "prefix": "cognito-userpooldomain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cognito::UserPoolDomain\"\r\n\tProperties:\r\n\t\tUserPoolId: String #required\r\n\t\tCustomDomainConfig:\r\n\t\t\tCustomDomainConfigType\r\n\t\tDomain: String #required\r\n",
        "description": "AWS::Cognito::UserPoolDomain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html"
    },
    "AWS::DocDB::DBClusterParameterGroup": {
        "prefix": "docdb-dbclusterparametergroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DocDB::DBClusterParameterGroup\"\r\n\tProperties:\r\n\t\tDescription: String #required\r\n\t\tParameters: Json #required\r\n\t\tFamily: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::DocDB::DBClusterParameterGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html"
    },
    "AWS::Signer::ProfilePermission": {
        "prefix": "signer-profilepermission",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Signer::ProfilePermission\"\r\n\tProperties:\r\n\t\tProfileName: String #required\r\n\t\tProfileVersion: String\r\n\t\tAction: String #required\r\n\t\tPrincipal: String #required\r\n\t\tStatementId: String #required\r\n",
        "description": "AWS::Signer::ProfilePermission\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html"
    },
    "AWS::ElasticBeanstalk::ApplicationVersion": {
        "prefix": "elasticbeanstalk-applicationversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ElasticBeanstalk::ApplicationVersion\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tDescription: String\r\n\t\tSourceBundle: #required\r\n\t\t\tSourceBundle\r\n",
        "description": "AWS::ElasticBeanstalk::ApplicationVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-version.html"
    },
    "AWS::EC2::VPCEndpoint": {
        "prefix": "ec2-vpcendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCEndpoint\"\r\n\tProperties:\r\n\t\tPolicyDocument: Json\r\n\t\tPrivateDnsEnabled: Boolean\r\n\t\tRouteTableIds:\r\n\t\t\t- String\r\n\t\tSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tServiceName: String #required\r\n\t\tSubnetIds:\r\n\t\t\t- String\r\n\t\tVpcEndpointType: String\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::VPCEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html"
    },
    "AWS::Redshift::EndpointAuthorization": {
        "prefix": "redshift-endpointauthorization",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Redshift::EndpointAuthorization\"\r\n\tProperties:\r\n\t\tClusterIdentifier: String #required\r\n\t\tAccount: String #required\r\n\t\tVpcIds:\r\n\t\t\t- String\r\n\t\tForce: Boolean\r\n",
        "description": "AWS::Redshift::EndpointAuthorization\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html"
    },
    "AWS::IoT::TopicRuleDestination": {
        "prefix": "iot-topicruledestination",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::TopicRuleDestination\"\r\n\tProperties:\r\n\t\tStatus: String\r\n\t\tHttpUrlProperties:\r\n\t\t\tHttpUrlDestinationSummary\r\n\t\tVpcProperties:\r\n\t\t\tVpcDestinationProperties\r\n",
        "description": "AWS::IoT::TopicRuleDestination\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html"
    },
    "AWS::IoTWireless::TaskDefinition": {
        "prefix": "iotwireless-taskdefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoTWireless::TaskDefinition\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tAutoCreateTasks: Boolean #required\r\n\t\tUpdate:\r\n\t\t\tUpdateWirelessGatewayTaskCreate\r\n\t\tLoRaWANUpdateGatewayTaskEntry:\r\n\t\t\tLoRaWANUpdateGatewayTaskEntry\r\n\t\tTaskDefinitionType: String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::IoTWireless::TaskDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html"
    },
    "AWS::EC2::VPCGatewayAttachment": {
        "prefix": "ec2-vpcgatewayattachment",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCGatewayAttachment\"\r\n\tProperties:\r\n\t\tInternetGatewayId: String\r\n\t\tVpcId: String #required\r\n\t\tVpnGatewayId: String\r\n",
        "description": "AWS::EC2::VPCGatewayAttachment\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
    },
    "AWS::DataSync::LocationSMB": {
        "prefix": "datasync-locationsmb",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DataSync::LocationSMB\"\r\n\tProperties:\r\n\t\tAgentArns: #required\r\n\t\t\t- String\r\n\t\tDomain: String\r\n\t\tMountOptions:\r\n\t\t\tMountOptions\r\n\t\tPassword: String #required\r\n\t\tServerHostname: String #required\r\n\t\tSubdirectory: String #required\r\n\t\tUser: String #required\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::DataSync::LocationSMB\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html"
    },
    "AWS::EFS::AccessPoint": {
        "prefix": "efs-accesspoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EFS::AccessPoint\"\r\n\tProperties:\r\n\t\tClientToken: String\r\n\t\tAccessPointTags:\r\n\t\t\t- AccessPointTag\r\n\t\tFileSystemId: String #required\r\n\t\tPosixUser:\r\n\t\t\tPosixUser\r\n\t\tRootDirectory:\r\n\t\t\tRootDirectory\r\n",
        "description": "AWS::EFS::AccessPoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html"
    },
    "AWS::EC2::VPCCidrBlock": {
        "prefix": "ec2-vpccidrblock",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EC2::VPCCidrBlock\"\r\n\tProperties:\r\n\t\tAmazonProvidedIpv6CidrBlock: Boolean\r\n\t\tCidrBlock: String\r\n\t\tIpv4IpamPoolId: String\r\n\t\tIpv4NetmaskLength: Integer\r\n\t\tIpv6CidrBlock: String\r\n\t\tIpv6IpamPoolId: String\r\n\t\tIpv6NetmaskLength: Integer\r\n\t\tIpv6Pool: String\r\n\t\tVpcId: String #required\r\n",
        "description": "AWS::EC2::VPCCidrBlock\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
    },
    "AWS::RDS::DBProxyTargetGroup": {
        "prefix": "rds-dbproxytargetgroup",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBProxyTargetGroup\"\r\n\tProperties:\r\n\t\tDBProxyName: String #required\r\n\t\tTargetGroupName: String #required\r\n\t\tConnectionPoolConfigurationInfo:\r\n\t\t\tConnectionPoolConfigurationInfoFormat\r\n\t\tDBInstanceIdentifiers:\r\n\t\t\t- String\r\n\t\tDBClusterIdentifiers:\r\n\t\t\t- String\r\n",
        "description": "AWS::RDS::DBProxyTargetGroup\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html"
    },
    "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
        "prefix": "kinesisanalytics-applicationreferencedatasource",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::KinesisAnalytics::ApplicationReferenceDataSource\"\r\n\tProperties:\r\n\t\tApplicationName: String #required\r\n\t\tReferenceDataSource: #required\r\n\t\t\tReferenceDataSource\r\n",
        "description": "AWS::KinesisAnalytics::ApplicationReferenceDataSource\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html"
    },
    "AWS::AppConfig::Application": {
        "prefix": "appconfig-application",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AppConfig::Application\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tTags:\r\n\t\t\t- Tags\r\n\t\tName: String #required\r\n",
        "description": "AWS::AppConfig::Application\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html"
    },
    "AWS::Pinpoint::App": {
        "prefix": "pinpoint-app",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Pinpoint::App\"\r\n\tProperties:\r\n\t\tTags: Json\r\n\t\tName: String #required\r\n",
        "description": "AWS::Pinpoint::App\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html"
    },
    "AWS::Cassandra::Table": {
        "prefix": "cassandra-table",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Cassandra::Table\"\r\n\tProperties:\r\n\t\tKeyspaceName: String #required\r\n\t\tTableName: String\r\n\t\tRegularColumns:\r\n\t\t\t- Column\r\n\t\tPartitionKeyColumns: #required\r\n\t\t\t- Column\r\n\t\tClusteringKeyColumns:\r\n\t\t\t- ClusteringKeyColumn\r\n\t\tBillingMode:\r\n\t\t\tBillingMode\r\n\t\tPointInTimeRecoveryEnabled: Boolean\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tDefaultTimeToLive: Integer\r\n\t\tEncryptionSpecification:\r\n\t\t\tEncryptionSpecification\r\n",
        "description": "AWS::Cassandra::Table\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html"
    },
    "AWS::Greengrass::GroupVersion": {
        "prefix": "greengrass-groupversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Greengrass::GroupVersion\"\r\n\tProperties:\r\n\t\tLoggerDefinitionVersionArn: String\r\n\t\tDeviceDefinitionVersionArn: String\r\n\t\tFunctionDefinitionVersionArn: String\r\n\t\tCoreDefinitionVersionArn: String\r\n\t\tResourceDefinitionVersionArn: String\r\n\t\tConnectorDefinitionVersionArn: String\r\n\t\tSubscriptionDefinitionVersionArn: String\r\n\t\tGroupId: String #required\r\n",
        "description": "AWS::Greengrass::GroupVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html"
    },
    "AWS::Logs::QueryDefinition": {
        "prefix": "logs-querydefinition",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Logs::QueryDefinition\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tQueryString: String #required\r\n\t\tLogGroupNames:\r\n\t\t\t- String\r\n",
        "description": "AWS::Logs::QueryDefinition\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html"
    },
    "AWS::IoT::Certificate": {
        "prefix": "iot-certificate",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::IoT::Certificate\"\r\n\tProperties:\r\n\t\tCACertificatePem: String\r\n\t\tCertificatePem: String\r\n\t\tCertificateSigningRequest: String\r\n\t\tCertificateMode: String\r\n\t\tStatus: String #required\r\n",
        "description": "AWS::IoT::Certificate\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html"
    },
    "AWS::GuardDuty::IPSet": {
        "prefix": "guardduty-ipset",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::GuardDuty::IPSet\"\r\n\tProperties:\r\n\t\tFormat: String #required\r\n\t\tActivate: Boolean #required\r\n\t\tDetectorId: String #required\r\n\t\tName: String\r\n\t\tLocation: String #required\r\n",
        "description": "AWS::GuardDuty::IPSet\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html"
    },
    "AWS::DynamoDB::GlobalTable": {
        "prefix": "dynamodb-globaltable",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::DynamoDB::GlobalTable\"\r\n\tProperties:\r\n\t\tAttributeDefinitions: #required\r\n\t\t\t- AttributeDefinition\r\n\t\tBillingMode: String\r\n\t\tGlobalSecondaryIndexes:\r\n\t\t\t- GlobalSecondaryIndex\r\n\t\tKeySchema: #required\r\n\t\t\t- KeySchema\r\n\t\tLocalSecondaryIndexes:\r\n\t\t\t- LocalSecondaryIndex\r\n\t\tWriteProvisionedThroughputSettings:\r\n\t\t\tWriteProvisionedThroughputSettings\r\n\t\tReplicas: #required\r\n\t\t\t- ReplicaSpecification\r\n\t\tSSESpecification:\r\n\t\t\tSSESpecification\r\n\t\tStreamSpecification:\r\n\t\t\tStreamSpecification\r\n\t\tTableName: String\r\n\t\tTimeToLiveSpecification:\r\n\t\t\tTimeToLiveSpecification\r\n",
        "description": "AWS::DynamoDB::GlobalTable\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html"
    },
    "AWS::SSM::Association": {
        "prefix": "ssm-association",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::SSM::Association\"\r\n\tProperties:\r\n\t\tAssociationName: String\r\n\t\tDocumentVersion: String\r\n\t\tInstanceId: String\r\n\t\tName: String #required\r\n\t\tParameters:\r\n\t\t\tMap\r\n\t\tScheduleExpression: String\r\n\t\tTargets:\r\n\t\t\t- Target\r\n\t\tOutputLocation:\r\n\t\t\tInstanceAssociationOutputLocation\r\n\t\tAutomationTargetParameterName: String\r\n\t\tMaxErrors: String\r\n\t\tMaxConcurrency: String\r\n\t\tComplianceSeverity: String\r\n\t\tSyncCompliance: String\r\n\t\tWaitForSuccessTimeoutSeconds: Integer\r\n\t\tApplyOnlyAtCronInterval: Boolean\r\n\t\tCalendarNames:\r\n\t\t\t- String\r\n",
        "description": "AWS::SSM::Association\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html"
    },
    "AWS::Athena::NamedQuery": {
        "prefix": "athena-namedquery",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Athena::NamedQuery\"\r\n\tProperties:\r\n\t\tName: String\r\n\t\tDatabase: String #required\r\n\t\tDescription: String\r\n\t\tQueryString: String #required\r\n\t\tWorkGroup: String\r\n",
        "description": "AWS::Athena::NamedQuery\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html"
    },
    "AWS::CloudFormation::ModuleVersion": {
        "prefix": "cloudformation-moduleversion",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::CloudFormation::ModuleVersion\"\r\n\tProperties:\r\n\t\tModuleName: String #required\r\n\t\tModulePackage: String #required\r\n",
        "description": "AWS::CloudFormation::ModuleVersion\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html"
    },
    "AWS::AmplifyUIBuilder::Theme": {
        "prefix": "amplifyuibuilder-theme",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::AmplifyUIBuilder::Theme\"\r\n\tProperties:\r\n\t\tName: String #required\r\n\t\tOverrides:\r\n\t\t\t- ThemeValues\r\n\t\tTags:\r\n\t\t\tMap\r\n\t\tValues: #required\r\n\t\t\t- ThemeValues\r\n",
        "description": "AWS::AmplifyUIBuilder::Theme\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html"
    },
    "AWS::Inspector::AssessmentTarget": {
        "prefix": "inspector-assessmenttarget",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Inspector::AssessmentTarget\"\r\n\tProperties:\r\n\t\tAssessmentTargetName: String\r\n\t\tResourceGroupArn: String\r\n",
        "description": "AWS::Inspector::AssessmentTarget\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html"
    },
    "AWS::EventSchemas::Registry": {
        "prefix": "eventschemas-registry",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::EventSchemas::Registry\"\r\n\tProperties:\r\n\t\tDescription: String\r\n\t\tRegistryName: String\r\n\t\tTags:\r\n\t\t\t- TagsEntry\r\n",
        "description": "AWS::EventSchemas::Registry\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html"
    },
    "AWS::Route53Resolver::ResolverEndpoint": {
        "prefix": "route53resolver-resolverendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Route53Resolver::ResolverEndpoint\"\r\n\tProperties:\r\n\t\tIpAddresses: #required\r\n\t\t\t- IpAddressRequest\r\n\t\tDirection: String #required\r\n\t\tSecurityGroupIds: #required\r\n\t\t\t- String\r\n\t\tTags:\r\n\t\t\t- Tag\r\n\t\tName: String\r\n",
        "description": "AWS::Route53Resolver::ResolverEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html"
    },
    "AWS::ImageBuilder::Image": {
        "prefix": "imagebuilder-image",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ImageBuilder::Image\"\r\n\tProperties:\r\n\t\tImageTestsConfiguration:\r\n\t\t\tImageTestsConfiguration\r\n\t\tImageRecipeArn: String\r\n\t\tContainerRecipeArn: String\r\n\t\tDistributionConfigurationArn: String\r\n\t\tInfrastructureConfigurationArn: String #required\r\n\t\tEnhancedImageMetadataEnabled: Boolean\r\n\t\tTags:\r\n\t\t\tMap\r\n",
        "description": "AWS::ImageBuilder::Image\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html"
    },
    "AWS::RDS::DBProxyEndpoint": {
        "prefix": "rds-dbproxyendpoint",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::RDS::DBProxyEndpoint\"\r\n\tProperties:\r\n\t\tDBProxyEndpointName: String #required\r\n\t\tDBProxyName: String #required\r\n\t\tVpcSecurityGroupIds:\r\n\t\t\t- String\r\n\t\tVpcSubnetIds: #required\r\n\t\t\t- String\r\n\t\tTargetRole: String\r\n\t\tTags:\r\n\t\t\t- TagFormat\r\n",
        "description": "AWS::RDS::DBProxyEndpoint\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html"
    },
    "AWS::OpenSearchService::Domain": {
        "prefix": "opensearchservice-domain",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::OpenSearchService::Domain\"\r\n\tProperties:\r\n\t\tClusterConfig:\r\n\t\t\tClusterConfig\r\n\t\tDomainName: String\r\n\t\tAccessPolicies: Json\r\n\t\tEngineVersion: String\r\n\t\tAdvancedOptions:\r\n\t\t\tMap\r\n\t\tLogPublishingOptions:\r\n\t\t\tMap\r\n\t\tSnapshotOptions:\r\n\t\t\tSnapshotOptions\r\n\t\tVPCOptions:\r\n\t\t\tVPCOptions\r\n\t\tNodeToNodeEncryptionOptions:\r\n\t\t\tNodeToNodeEncryptionOptions\r\n\t\tDomainEndpointOptions:\r\n\t\t\tDomainEndpointOptions\r\n\t\tCognitoOptions:\r\n\t\t\tCognitoOptions\r\n\t\tAdvancedSecurityOptions:\r\n\t\t\tAdvancedSecurityOptionsInput\r\n\t\tEBSOptions:\r\n\t\t\tEBSOptions\r\n\t\tEncryptionAtRestOptions:\r\n\t\t\tEncryptionAtRestOptions\r\n\t\tTags:\r\n\t\t\t- Tag\r\n",
        "description": "AWS::OpenSearchService::Domain\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html"
    },
    "AWS::Location::PlaceIndex": {
        "prefix": "location-placeindex",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::Location::PlaceIndex\"\r\n\tProperties:\r\n\t\tDataSource: String #required\r\n\t\tDataSourceConfiguration:\r\n\t\t\tDataSourceConfiguration\r\n\t\tDescription: String\r\n\t\tIndexName: String #required\r\n\t\tPricingPlan: String\r\n",
        "description": "AWS::Location::PlaceIndex\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html"
    },
    "AWS::ApiGatewayV2::ApiMapping": {
        "prefix": "apigatewayv2-apimapping",
        "body": "${1:LogicalID}:\r\n\tType: \"AWS::ApiGatewayV2::ApiMapping\"\r\n\tProperties:\r\n\t\tDomainName: String #required\r\n\t\tStage: String #required\r\n\t\tApiMappingKey: String\r\n\t\tApiId: String #required\r\n",
        "description": "AWS::ApiGatewayV2::ApiMapping\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html"
    }
}